{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/favicon.ico","path":"favicon.ico","modified":1,"renderable":0},{"_id":"source/uploads/avatar.png","path":"uploads/avatar.png","modified":1,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":1,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"305f468dadb64a3bb4bef90287ce2507e3b5a0e8","modified":1522164971354},{"_id":"source/favicon.ico","hash":"5556248ff56475668f1293159a5b9192d0a2018b","modified":1522158753773},{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1522161951612},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1522161951612},{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1522161951612},{"_id":"themes/next/.gitignore","hash":"32ea93f21d8693d5d8fa4eef1c51a21ad0670047","modified":1522161951613},{"_id":"themes/next/.javascript_ignore","hash":"f9ea3c5395f8feb225a24e2c32baa79afda30c16","modified":1522161951614},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1522161951614},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1522161951614},{"_id":"themes/next/.travis.yml","hash":"c42d9608c8c7fe90de7b1581a8dc3886e90c179e","modified":1522161951614},{"_id":"themes/next/LICENSE","hash":"f293bcfcdc06c0b77ba13570bb8af55eb5c059fd","modified":1522161951614},{"_id":"themes/next/README.en.md","hash":"4ece25ee5f64447cd522e54cb0fffd9a375f0bd4","modified":1522161951614},{"_id":"themes/next/README.md","hash":"7a46db422697dac457cd20387736555dcf75ff07","modified":1522161951615},{"_id":"themes/next/_config.yml","hash":"42fb3a05fe476081de9ad8b85dbef2562d404781","modified":1551108461122},{"_id":"themes/next/gulpfile.coffee","hash":"031bffc483e417b20e90eceb6cf358e7596d2e69","modified":1522161951615},{"_id":"themes/next/bower.json","hash":"be0a430362cb73a7e3cf9ecf51a67edf8214b637","modified":1522161951615},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1522161951613},{"_id":"themes/next/package.json","hash":"6b5bfec48776ddf9c03811b1ff2cb2b615eccc88","modified":1522161951628},{"_id":"source/_data/next.yml","hash":"7fab1c28811852514a5f275f7569aba7cb64da34","modified":1551108626357},{"_id":"source/_posts/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1522164170681},{"_id":"source/_posts/2016-07-02-用hexo搭建博客.md","hash":"a366baa2fde15e848c709e471d98696a7b3f5b2d","modified":1522158753767},{"_id":"source/_posts/2016-04-30-hello-world.md","hash":"06725c787053a25fe7fc4e9104897b9ab05991bb","modified":1522158753767},{"_id":"source/_posts/2016-07-24-Javascript内置对象.md","hash":"20a995ee48df61f7063b3d10ebd835ded54324df","modified":1522158753768},{"_id":"source/_posts/2017-03-03-将代码同时push到两个不同的远程仓库.md","hash":"61d5ba27aecd475a593949f9c31a65c972dd35a6","modified":1522158753768},{"_id":"source/_posts/2017-03-03-JavaScript、CSS、HTTP知识相关的面试题.md","hash":"2c06aa5e09bf3fb357463dd421ac2ea2f3ee72f8","modified":1522158753768},{"_id":"source/_posts/2017-03-16-前端开发聚合、分享、期刊订阅类网站.md","hash":"18e0152ec5699ed44aae00ffa390c38ddc76294c","modified":1522158753768},{"_id":"source/_posts/2017-03-21-JavaScript、jQuery、算法相关的面试题.md","hash":"9657e9864f90e348919df153ec8641122317b419","modified":1522158753768},{"_id":"source/_posts/2017-03-30-大整数加法、乘法的JavaScript实现.md","hash":"6e6a3e332424d1a7a9a2e5765d9e0b36f50dbe0b","modified":1522158753768},{"_id":"source/_posts/2017-05-04-Mac常用软件收集.md","hash":"28233a75a28adcc76e3c23cc8b92453147e3ed03","modified":1522246873845},{"_id":"source/_posts/2017-05-17-Quantum聚焦：什么是浏览器引擎.md","hash":"81e5e432cbd9d833dbe666b03a4faf5d9f0b3212","modified":1522158753769},{"_id":"source/_posts/2017-05-27-JavaScript创建对象的方式汇总.md","hash":"64a40b2a3b58447f87ded5438a7a22d349977f70","modified":1522158753770},{"_id":"source/_posts/2017-06-02-JavaScript开发规范.md","hash":"371944b23946296573b1a60dd504f550bdcb0709","modified":1522158753770},{"_id":"source/_posts/2017-06-13-JavaScript设计模式（一）.md","hash":"10285b5ca8c44215fa4a9138fd6fddf8b31dd975","modified":1522158753770},{"_id":"source/_posts/2017-07-04-JavaScript标准编码风格.md","hash":"c7001c8a96575fb7b74b27bee236f094fd063ccf","modified":1522158753770},{"_id":"source/_posts/2017-07-04-JavaScript模块简史.md","hash":"9a0d7de413285d8ed414484e3b46babf7fef021f","modified":1522158753770},{"_id":"source/_posts/2017-07-20-可视化算法.md","hash":"95d389fa0c2f699817b424a60dc7a3843058ce2e","modified":1522158753770},{"_id":"source/_posts/2017-08-01-CSS多行文本溢出省略显示.md","hash":"87e23bd3e1cd776e011095407ff69fdc860b0baa","modified":1522158753771},{"_id":"source/_posts/2017-08-01-使用Travis实现hexo博客的自动化部署.md","hash":"bb0d5342e8468592b457f2c8854885686da74c8a","modified":1522158753771},{"_id":"source/_posts/2017-08-02-JavaScript跨域方法总结.md","hash":"1e85cdec61288c1660eb37ce83bff6358eda8b98","modified":1522158753771},{"_id":"source/_posts/2017-08-27-手把手教你在阿里云ECS上面安装nginx.md","hash":"02a1562c75420a6ade3b69b95e435178248ac607","modified":1522158753771},{"_id":"source/_posts/2017-08-28-手把手教你在阿里云ECS上配置HTTPS.md","hash":"0addfcfdc74cf89af01231ff570aa5ff9e7d7c27","modified":1522158753771},{"_id":"source/_posts/2017-09-29-前端框架引入的意义.md","hash":"69ad596d2a9b8806fde313e45df5a7ba26ceb25e","modified":1522158753771},{"_id":"source/_posts/2017-09-30-Java后端模板引擎FreeMarker.md","hash":"e637f94c715688177be689ac4d2af69a1c5bd88e","modified":1522158753772},{"_id":"source/_posts/2017-10-18-Linux下SVN账号密码保存方法.md","hash":"d93ef6692b1fdcd35b6b133ed62f0e40d094e72c","modified":1522158753772},{"_id":"source/_posts/2017-11-24-XSS防御.md","hash":"4ea937d7d7480644d4e210aa670bddf78f8bea17","modified":1522158753772},{"_id":"source/_posts/2017-10-27-nginx反向代理的Express如何拿到真实客户端IP.md","hash":"a19245762daa3e484721b7f9aef1f7074fcf0aee","modified":1522158753772},{"_id":"source/_posts/2017-12-05-python-二分查找.md","hash":"e6fc00fcafe6939e5cc16cda2ca9ba59f91e3564","modified":1522158753772},{"_id":"source/_posts/2018-03-27-学习React（一）.md","hash":"8d54615a79a176853a03b3b2818294849821761f","modified":1522164654663},{"_id":"source/_posts/2018-03-28-解决SecureCRT无法保存密码的问题.md","hash":"64fd42813b082bdf91ae0580afa405262414906d","modified":1551107896459},{"_id":"source/_posts/2018-03-29-学习React（二）.md","hash":"8c491a8af31bb16c4249c81004b1d1cb4bf2485c","modified":1522337213682},{"_id":"source/_posts/2018-03-30-解决Vue项目中audio元素在移动端无法自动播放的问题.md","hash":"d0d49c9f9fb6821df7d8959c3ed53eba9810ed3c","modified":1551107896463},{"_id":"source/about/index.md","hash":"496366b356b33db0faf7756b3253ba2b5c189f3e","modified":1551107896431},{"_id":"source/categories/index.md","hash":"6b2250ba5d8ab94896d317049ae90a9bee836db6","modified":1522158753773},{"_id":"themes/next/.git/FETCH_HEAD","hash":"a21a1334bd4629037efeee4ba6ee0a9452e6b112","modified":1551109209058},{"_id":"themes/next/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1522161951606},{"_id":"themes/next/.git/ORIG_HEAD","hash":"053604d9ea8ba14f14833c8188133b450ba2ee8f","modified":1551109209083},{"_id":"themes/next/.git/config","hash":"face32b8d2857702bfb757d8d458d9e9c1598801","modified":1522161951607},{"_id":"themes/next/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1522161943679},{"_id":"themes/next/.git/index","hash":"4739b0d0b929e33e5caa320e771f6822291e770f","modified":1522339356482},{"_id":"themes/next/.git/packed-refs","hash":"683ce726e03132b2308658eae0ad7bf337e72869","modified":1522161951604},{"_id":"themes/next/.git/shallow","hash":"ded6f06599a6ec03feeab4cf1361ffce83fccdcb","modified":1522161945976},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"3b5eafd32abb718e56ccf8d1cee0607ad8ce611d","modified":1522161951613},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"b56c01cdfc6ee7ffea8a8a9fa149263f368caef6","modified":1522161951613},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"37bd0ec1d655c601946fc5f5ac2fe8ed1e529b77","modified":1522161951613},{"_id":"themes/next/languages/de.yml","hash":"306db8c865630f32c6b6260ade9d3209fbec8011","modified":1522161951615},{"_id":"themes/next/languages/default.yml","hash":"4cc6aeb1ac09a58330e494c8771773758ab354af","modified":1522161951616},{"_id":"themes/next/languages/fr-FR.yml","hash":"24180322c83587a153cea110e74e96eacc3355ad","modified":1522161951616},{"_id":"themes/next/languages/en.yml","hash":"e7def07a709ef55684490b700a06998c67f35f39","modified":1522161951616},{"_id":"themes/next/languages/id.yml","hash":"2835ea80dadf093fcf47edd957680973f1fb6b85","modified":1522161951616},{"_id":"themes/next/languages/ja.yml","hash":"1c3a05ab80a6f8be63268b66da6f19da7aa2c638","modified":1522161951616},{"_id":"themes/next/languages/ko.yml","hash":"be150543379150f78329815af427bf152c0e9431","modified":1522161951616},{"_id":"themes/next/languages/pt-BR.yml","hash":"958e49571818a34fdf4af3232a07a024050f8f4e","modified":1522161951617},{"_id":"themes/next/languages/pt.yml","hash":"36c8f60dacbe5d27d84d0e0d6974d7679f928da0","modified":1522161951617},{"_id":"themes/next/languages/ru.yml","hash":"1549a7c2fe23caa7cbedcd0aa2b77c46e57caf27","modified":1522161951617},{"_id":"themes/next/languages/zh-Hans.yml","hash":"3c0c7dfd0256457ee24df9e9879226c58cb084b5","modified":1522161951617},{"_id":"themes/next/languages/zh-hk.yml","hash":"1c917997413bf566cb79e0975789f3c9c9128ccd","modified":1522161951617},{"_id":"themes/next/languages/zh-tw.yml","hash":"0b2c18aa76570364003c8d1cd429fa158ae89022","modified":1522161951617},{"_id":"themes/next/layout/_layout.swig","hash":"06b1eab2e00273e0b94bd32dc682bd92c1e0a747","modified":1522161951618},{"_id":"themes/next/layout/archive.swig","hash":"5de4dca06b05d99e4f6bad617a4b8f4f3592fb01","modified":1522161951627},{"_id":"themes/next/layout/category.swig","hash":"82e7bc278559b4335ad974659104eaaf04863032","modified":1522161951627},{"_id":"themes/next/layout/index.swig","hash":"03e8a2cda03bad42ac0cb827025eb81f95d496a2","modified":1522161951627},{"_id":"themes/next/layout/page.swig","hash":"baa667bc801349d5c4984c0f172973d3780400df","modified":1522161951627},{"_id":"themes/next/layout/post.swig","hash":"2d5f8d7f0a96b611e2d5a5e4d111fc17726a990f","modified":1522161951627},{"_id":"themes/next/layout/schedule.swig","hash":"f93c53f6fd5c712584f6efba6f770c30fa8a3e80","modified":1522161951627},{"_id":"themes/next/layout/tag.swig","hash":"2e73ee478e981092ea9a5d10dd472a9461db395b","modified":1522161951628},{"_id":"themes/next/scripts/merge-configs.js","hash":"13c8b3a2d9fce06c2488820d9248d190c8100e0a","modified":1522161951628},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1522161951628},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1522161951685},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1522161951685},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1522161951686},{"_id":"source/uploads/avatar.png","hash":"1dfe8b66a153efb661a7beaac16f732f1fd84458","modified":1522158753773},{"_id":"source/tags/index.md","hash":"3718434e31794f3a716ce51d8f95e11c883a540f","modified":1522158753773},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1522161951649},{"_id":"themes/next/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1522161943681},{"_id":"themes/next/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1522161943680},{"_id":"themes/next/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1522161943682},{"_id":"themes/next/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1522161943681},{"_id":"themes/next/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1522161943683},{"_id":"themes/next/.git/hooks/pre-rebase.sample","hash":"18be3eb275c1decd3614e139f5a311b75f1b0ab8","modified":1522161943680},{"_id":"themes/next/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1522161943683},{"_id":"themes/next/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1522161943681},{"_id":"themes/next/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1522161943682},{"_id":"themes/next/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1522161943683},{"_id":"themes/next/.git/logs/HEAD","hash":"b5e29c6997a5ba343990bc0abaabca066c88ee1c","modified":1522339356483},{"_id":"themes/next/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1522161943679},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1522161951618},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1522161951618},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1522161951618},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"b16fcbf0efd20c018d7545257a8533c497ea7647","modified":1522161951618},{"_id":"themes/next/layout/_macro/post.swig","hash":"d6fe43765bc01017ca3f9a384eeddaf28b6382c8","modified":1522161951618},{"_id":"themes/next/layout/_macro/reward.swig","hash":"37e5b7c42ec17b9b6b786c5512bcc481a21c974e","modified":1522161951619},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"3dac0f5af6a590ea49a3d172ff6fafbf50cc2604","modified":1522161951619},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"14e785adeb0e671ba0ff9a553e6f0d8def6c670c","modified":1522161951619},{"_id":"themes/next/layout/_partials/comments.swig","hash":"ce7094ee05878161e7568a6dfae5b56ff3fbd6e1","modified":1522161951619},{"_id":"themes/next/layout/_partials/footer.swig","hash":"7172c6053118b7c291a56a7860128a652ae66b83","modified":1522161951619},{"_id":"themes/next/layout/_partials/head.swig","hash":"6a7eb93d8aa7d4baa472890bd666b921f449d8af","modified":1522161951619},{"_id":"themes/next/layout/_partials/header.swig","hash":"a1ffbb691dfad3eaf2832a11766e58a179003b8b","modified":1522161951620},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1efd925d34a5d4ba2dc0838d9c86ba911e705fc9","modified":1522161951620},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1522161951620},{"_id":"themes/next/layout/_partials/search.swig","hash":"9dbd378e94abfcb3f864a5b8dbbf18d212ca2ee0","modified":1522161951620},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1522161951622},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1522161951622},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"9baf90f7c40b3b10f288e9268c3191e895890cea","modified":1522161951622},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1522161951625},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"7c04a42319d728be356746363aff8ea247791d24","modified":1522161951625},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1522161951625},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1522161951625},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1522161951625},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"1ddb2336a1a19b47af3017047012c01ec5f54529","modified":1522161951626},{"_id":"themes/next/scripts/tags/button.js","hash":"62e6dbeb53d07627a048132c79630b45d9a8f2cc","modified":1522161951628},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1522161951628},{"_id":"themes/next/scripts/tags/exturl.js","hash":"8d7e60f60779bde050d20fd76f6fdc36fc85e06d","modified":1522161951629},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1522161951629},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1522161951629},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"eeeabede68cf263de9e6593ecf682f620da16f0a","modified":1522161951629},{"_id":"themes/next/scripts/tags/note.js","hash":"21b102db8a01c7b15ae2c0ea3ef3d4cf807ec6ed","modified":1522161951629},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1522161951648},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"90035272fa31a3f65b3c0e2cb8a633876ef457dc","modified":1522161951649},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1522161951649},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1522161951649},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1522161951649},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1522161951650},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1522161951650},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1522161951650},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1522161951650},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1522161951650},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1522161951651},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1522161951651},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1522161951651},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1522161951651},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1522161951651},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1522161951622},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1522161951622},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1522161951643},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1522161951643},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1522161951644},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1522161951648},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1522161951648},{"_id":"themes/next/.git/objects/06/b90f1a20061d1a25a0d054d6f48eba8a84afc1","hash":"01afab1475cb030995036f560d3444c11fb03692","modified":1531059590992},{"_id":"themes/next/.git/objects/10/97a52502531052cd4e3f3dcc3a25dfa85e8931","hash":"5c4020e9b63b230098318b3b538f5a0dd3572e9f","modified":1531059590984},{"_id":"themes/next/.git/objects/16/9eb2ffc05e35418f585ed0487ba4c53c81c0fc","hash":"bf05272bfcdfdf7106ab0c29217fcddd3ac0c155","modified":1551109209039},{"_id":"themes/next/.git/objects/1d/8f9a2ba29968275c9a750355b2a452ac728a3d","hash":"74439f60488f38fd6a7d86cb400dd3e4f65b809d","modified":1551109209041},{"_id":"themes/next/.git/objects/2b/4c6503a02dc8ed639027b1198e173e0032a7b3","hash":"7ff237b80bedece38bb7ff6af161fa0df8e44abc","modified":1531059590992},{"_id":"themes/next/.git/objects/2b/98cbd09cb06714b192a35a14fbd0e38098dbc3","hash":"261cf8073a5a2d72405dcf0f2aac588f9309030b","modified":1551109209034},{"_id":"themes/next/.git/objects/36/79ec3956d1a3a8db8614a33cf5f327f62efceb","hash":"1d56e3ac1d1a5d149dd247bf0bb8565031ceca4b","modified":1551109209042},{"_id":"themes/next/.git/objects/3d/61de1b693689d207568dcc4e5b5032fe7d68dc","hash":"cba347f0e4005c45ea55f2adbc5ba1fe92b80faf","modified":1551109209033},{"_id":"themes/next/.git/objects/42/604a487671563312bfcc4f12d201d70919a052","hash":"8ab2d24560358ad4dbb00aae06f0ad923de8c3f5","modified":1522339356445},{"_id":"themes/next/.git/objects/42/a3eae513b1e7e8df4c2b6dddfefe8f83ac32ac","hash":"fb65336e495a750c506b673bcff5b04918f6a4b4","modified":1522339356445},{"_id":"themes/next/.git/objects/49/9bd4084b5834d6265dcff7bb8ba1d954f78829","hash":"bf75ef1ff315a90632c36503c7ef684c9cc1e9ec","modified":1551109209037},{"_id":"themes/next/.git/objects/54/1627d65a308c3daeb24dee41e9c16e87aa9572","hash":"2b97a4e99e483630a999977fe06e0f6021680b07","modified":1551109209033},{"_id":"themes/next/.git/objects/58/f11e1e4a1144ef9b48c0cebdb7e63772c53f33","hash":"86cd4f3509cd2219b2c566c8861876daccb0b213","modified":1522339356443},{"_id":"themes/next/.git/objects/61/93346d9fc21221a2a1a471f02c307c3c48f546","hash":"f45694c3c1692f38430ab6ad72b491db53f5e32b","modified":1522339356444},{"_id":"themes/next/.git/objects/63/34bf60cd1176d515d2d68f6d4bad95c7bccbf7","hash":"f8317764623f8de89c9dc4506772b6be275fc695","modified":1551109209038},{"_id":"themes/next/.git/objects/88/b3e11dd46867581691c336e933f916e0f44d0d","hash":"ced93dd50bc7a9655c48a44c9b541b02d12f91e7","modified":1522339356442},{"_id":"themes/next/.git/objects/8e/763ae0a2664ab9fb5887c5de373c3d1f34a140","hash":"068898bd2b21dfaf5f184058993ab5e78ca095f2","modified":1551109209041},{"_id":"themes/next/.git/objects/c4/3025bb24353d5d39ece069e8744dd1493bb53c","hash":"86711025743d7c7011e063c0188f32618f345b5a","modified":1531059590983},{"_id":"themes/next/.git/objects/d4/34fcb3dda638d2f494ba011f1975f69a43415e","hash":"56f939b721aed802e084483492513e552e93ca14","modified":1531059590984},{"_id":"themes/next/.git/objects/d9/aff7f6628318adee52333d97b56d6360873d99","hash":"2c132d1af2f9a0b0174c2c85daab925b2e08f108","modified":1522339356443},{"_id":"themes/next/.git/objects/e1/ac0f11063f55dfd5b56b38c5f94d937a43ca83","hash":"67258f97ab2d74c35d324b963d8f0190559f7a39","modified":1531059590993},{"_id":"themes/next/.git/objects/e5/67d5d1307e2c7e434c35041ba8b1da14b9b6d8","hash":"de3a4e6cf012dfec39372450426b832d6e142688","modified":1531059590985},{"_id":"themes/next/.git/objects/e6/1b3e83352968137cfe2f95cbb5ef75611393cd","hash":"e3c77adc6b4f78d08a2d6b5c5c6d0888816bc415","modified":1551109209035},{"_id":"themes/next/.git/objects/ed/f9535728957a5c03727007e545b1cdefc38ecf","hash":"b48a1645ce2d34eb538cfcb7066bc48cf88feb4c","modified":1551109209036},{"_id":"themes/next/.git/objects/f3/baf19db759390e85d15e920d856019c9b6f39c","hash":"7e413b49ca14e3239ed5e9f3d7f0f2c0f88381f0","modified":1531059590989},{"_id":"themes/next/.git/objects/f8/53efa1038e1371714ff00bcfa76e36487fa528","hash":"b7c7f365e05ef9200b34a2426bc46df4debc0983","modified":1551109209040},{"_id":"themes/next/.git/objects/fc/27f26be31586c26676763625b3c51af9f4dbec","hash":"cc3fd38fc47ce04baae8949733f0dcfd9227c397","modified":1531059590990},{"_id":"themes/next/.git/objects/pack/pack-2271a38d9803bd37b1c1ddc8b55aa4de7174b542.idx","hash":"6822021f83386e84c4acdcf1561325e3426e65d1","modified":1522161951590},{"_id":"themes/next/.git/refs/heads/master","hash":"053604d9ea8ba14f14833c8188133b450ba2ee8f","modified":1522339356482},{"_id":"themes/next/.git/refs/tags/v0.1.0","hash":"4131ee173e7ccb518cfdb5bfdb82e2ca39b397e9","modified":1522342446980},{"_id":"themes/next/.git/refs/tags/v0.1.3","hash":"4b6852c6d03499316a3c0682eb85d475280c5a70","modified":1522342446980},{"_id":"themes/next/.git/refs/tags/v0.2.0","hash":"1bb0eb21a1b732f257b41cfbebbde82befe1e93d","modified":1522342446981},{"_id":"themes/next/.git/refs/tags/v0.2.2","hash":"4970bda4df4f24bd0a1355d879cdd400d07e04ef","modified":1522342446981},{"_id":"themes/next/.git/refs/tags/v0.3.0","hash":"63bf4ae4f5f04d666818d072fcd12938e8f8a095","modified":1522342446982},{"_id":"themes/next/.git/refs/tags/v0.3.0rc1","hash":"c3b0520606e24e2b055125bc56299ea86c0a04cf","modified":1522342446982},{"_id":"themes/next/.git/refs/tags/v0.4.0","hash":"6ffae8c2660193cef94f2a676decba27a8c19eef","modified":1522342446983},{"_id":"themes/next/.git/refs/tags/v0.4.3","hash":"61eaf135adbfedfa15d423118ccd7326bbc783f5","modified":1522342446983},{"_id":"themes/next/.git/refs/tags/v0.4.4","hash":"ca10471ab08289ed10c10cf8504ab8844d5392ab","modified":1522342446984},{"_id":"themes/next/.git/refs/tags/v0.4.5.1","hash":"361f90f9c4fc29b424a3156dc512e683a0a19d75","modified":1522342446984},{"_id":"themes/next/.git/refs/tags/v0.4.5.2","hash":"b7daf711143ef7cb06d12e908f9e25d40688d809","modified":1522342446984},{"_id":"themes/next/.git/refs/tags/v5.0.0","hash":"3db07998a600b0c7d7d15359cb4ef808b6ec8648","modified":1522342446985},{"_id":"themes/next/.git/refs/tags/v5.0.1","hash":"4bd3aae6c4ad63fce23f9306572ecd3961d58a03","modified":1522342446985},{"_id":"themes/next/.git/refs/tags/v5.1.0","hash":"7ec0539e56966d1eaf8b88c1d27165c1f7dfacf5","modified":1522342446986},{"_id":"themes/next/.git/refs/tags/v5.1.1","hash":"3caf2cc30e2bc17ce7c8decb48064104d4845453","modified":1522342446986},{"_id":"themes/next/.git/refs/tags/v5.1.2","hash":"75173e2dd18a6221ff84742ff53d01ac5c6e04b0","modified":1522342446987},{"_id":"themes/next/.git/refs/tags/v5.1.3","hash":"5eec1427a836e6e34c81dc784bafb33c2ccf48f9","modified":1522342446987},{"_id":"themes/next/.git/refs/tags/v5.1.4","hash":"66e8b5048a20ce41a8a240072e535d725d62aef4","modified":1522342446988},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1522161951620},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1522161951620},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1522161951620},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1522161951621},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1522161951621},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1522161951621},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1522161951621},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1522161951621},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"63315fcf210799f894208c9f512737096df84962","modified":1522161951621},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1522161951622},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1522161951622},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1522161951623},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1522161951623},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"4aa55cd424389cf5626aa019c15ef6f3e4da09f2","modified":1551107707181},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1522161951623},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a234c5cd1f75ca5731e814d0dbb92fdcf9240d1b","modified":1522161951623},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1522161951623},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"3358d11b9a26185a2d36c96049e4340e701646e4","modified":1522161951623},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"fc65b9c98a0a8ab43a5e7aabff6c5f03838e09c8","modified":1522161951624},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1522161951624},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1522161951624},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1522161951624},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1522161951624},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"c316758546dc9ba6c60cb4d852c17ca6bb6d6724","modified":1522161951624},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1522161951624},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1522161951624},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"ee63aa2e49507b884a2d56778479cf01c723d751","modified":1522161951625},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"8a2e393d2e49f7bf560766d8a07cd461bf3fce4f","modified":1522161951625},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"8b6650f77fe0a824c8075b2659e0403e0c78a705","modified":1522161951625},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1522161951626},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1522161951627},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"385c066af96bee30be2459dbec8aae1f15d382f5","modified":1522161951626},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1522161951627},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"8d829516596187eebcef8225b2f4c0d810519c06","modified":1522339356481},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"715d5b40dc52f319fe4bff0325beb874774d9bd9","modified":1522161951643},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"82f9055955920ed88a2ab6a20ab02169abb2c634","modified":1522161951644},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"c8d35a6b9e3bff6d8fdb66de853065af9d37562d","modified":1522161951648},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"06f432f328a5b8a9ef0dbd5301b002aba600b4ce","modified":1522161951648},{"_id":"themes/next/source/css/_variables/base.styl","hash":"d6a793bcada68d4b6c58392546bc48a482e4a7d3","modified":1522161951648},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1522161951651},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1522161951652},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"03190d70e2347a0b29d185295445c6762a4455e8","modified":1522161951652},{"_id":"themes/next/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1522161951652},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1522161951652},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1522161951652},{"_id":"themes/next/source/js/src/motion.js","hash":"dc0365b2fb315a8b43d3ef19b59d3a82a366fcc1","modified":1522161951652},{"_id":"themes/next/source/js/src/post-details.js","hash":"0693695a9512641daff63d99da772625a058ab18","modified":1522161951653},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1522161951653},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1522161951653},{"_id":"themes/next/source/js/src/utils.js","hash":"0fcb80ec11e6df05ed1a07b9338bef2669f93a70","modified":1522161951653},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1522161951656},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1522161951658},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"7fd2f3e2773555392ef40df40cae3bedb884f17a","modified":1522161951658},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1522161951659},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1522161951659},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1522161951662},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1522161951663},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1522161951663},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1522161951664},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1522161951665},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1522161951665},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1522161951665},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1522161951666},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1522161951666},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1522161951676},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1522161951677},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1522161951677},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1522161951677},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1522161951677},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1522161951677},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1522161951677},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1522161951680},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1522161951680},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1522161951680},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1522161951677},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1522161951677},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1522161951678},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1522161951678},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1522161951678},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1522161951678},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1522161951678},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1522161951678},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1522161951679},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1522161951679},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1522161951679},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1522161951679},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1522161951679},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1522161951679},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1522161951683},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1522161951684},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1522161951685},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1522161951685},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1522161951685},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1522161951676},{"_id":"themes/next/.git/logs/refs/heads/master","hash":"b5e29c6997a5ba343990bc0abaabca066c88ee1c","modified":1522339356483},{"_id":"themes/next/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1522161951606},{"_id":"themes/next/.git/refs/remotes/origin/master","hash":"adf5286c487af21e236f75aab3fd8f3bf0ca5835","modified":1551109209055},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1522161951626},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1522161951626},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"b5074a61d04757b6adf8f757668b9fea01730a6c","modified":1522161951629},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1522161951630},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"0dfb4b3ba3180d7285e66f270e1d3fa0f132c3d2","modified":1522161951630},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1522161951630},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1522161951630},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"711c8830886619d4f4a0598b0cde5499dce50c62","modified":1522161951636},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1522161951640},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1522161951642},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"2915df7152ea095a6290ef69157fd67669e0e793","modified":1522161951642},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1522161951643},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1522161951643},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"013619c472c7e4b08311c464fcbe9fcf5edde603","modified":1522161951643},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"7e461ab75c78b4156e2e2b9b52825a1cee00fee3","modified":1522161951643},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1522161951644},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1522161951644},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1522161951644},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1522161951644},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"fda14bc35be2e1b332809b55b3d07155a833dbf4","modified":1522161951645},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1522161951645},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1522161951645},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1522161951646},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1522161951646},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"82bbaa6322764779a1ac2e2c8390ce901c7972e2","modified":1522161951646},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1522161951646},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1522161951646},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1522161951647},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"5b93958239d3d2bf9aeaede44eced2434d784462","modified":1522161951647},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"215de948be49bcf14f06d500cef9f7035e406a43","modified":1522161951647},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1522161951647},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"e3e23751d4ad24e8714b425d768cf68e37de7ded","modified":1522161951647},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1522161951648},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"79da92119bc246fe05d1626ac98426a83ec90a94","modified":1522161951653},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1522161951655},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1522161951656},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1522161951659},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1522161951659},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1522161951659},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1522161951659},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1522161951660},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1522161951660},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1522161951661},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1522161951662},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1522161951662},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1522161951665},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1522161951664},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1522161951666},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1522161951667},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1522161951667},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1522161951683},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1522161951683},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1522161951655},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1522161951655},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1522161951676},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1522161951675},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1522161951684},{"_id":"themes/next/.git/logs/refs/remotes/origin/HEAD","hash":"5601f4968847b987f6cea598dbbe3c6c2bea5af3","modified":1522161951605},{"_id":"themes/next/.git/logs/refs/remotes/origin/master","hash":"f1524886fd1f324eeda24dcb27912ac4302f872f","modified":1551109209056},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"8994ffcce84deac0471532f270f97c44fea54dc0","modified":1522161951630},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1522161951630},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1522161951630},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"e4e53de2e3d622eecb32b72b16a64d1b63922a1a","modified":1522161951631},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1522161951631},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1522161951631},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1522161951631},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"740d37f428b8f4574a76fc95cc25e50e0565f45e","modified":1522161951631},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1522161951631},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"7778920dd105fa4de3a7ab206eeba30b1a7bac45","modified":1522161951631},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1522161951631},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1522161951632},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1522161951632},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1522161951632},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"beccb53dcd658136fb91a0c5678dea8f37d6e0b6","modified":1522161951636},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"0f7f522cc6bfb3401d5afd62b0fcdf48bb2d604b","modified":1522161951636},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1522161951637},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1522161951637},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"88c7d75646b66b168213190ee4cd874609afd5e3","modified":1522161951637},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1522161951637},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"ed88c8b51d0517759c777e71a6bfbe2907bcd994","modified":1522161951637},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1522161951637},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"e792c8dc41561c96d128e9b421187f1c3dc978a0","modified":1522161951638},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1522161951638},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"963105a531403d7aad6d9e5e23e3bfabb8ec065a","modified":1522161951638},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1522161951638},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"08a500b2984f109b751f3697ca33172d1340591a","modified":1522161951638},{"_id":"themes/next/source/css/_common/components/post/post-wordcount.styl","hash":"4fda5d38c6c8d910e3bf5c74a48a8d4a3f3dc73d","modified":1522161951638},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"468bc734f47209096588ef1a8e55e60a3b12aa63","modified":1522161951639},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"2e7ec9aaa3293941106b1bdd09055246aa3c3dc6","modified":1522161951639},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1522161951639},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"5f6ea57aabfa30a437059bf8352f1ad829dbd4ff","modified":1522161951639},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1522161951639},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1522161951639},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1522161951639},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"77c92a449ce84d558d26d052681f2e0dd77c70c9","modified":1522161951639},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1522161951640},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"57d2c8a060f5e4e1a0aef9aae11a0016cf7ac5ba","modified":1522161951640},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1522161951640},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1522161951640},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1522161951640},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"b8969e1654eec89a0fd10d88b337fee9cb03cd44","modified":1522161951641},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1522161951641},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"dfc86d37f5b580977d82af6ef835082d09a0c499","modified":1522161951641},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"dd310c2d999185e881db007360176ee2f811df10","modified":1522161951641},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"fd42777b9125fd8969dc39d4f15473e2b91b4142","modified":1522161951641},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1522161951641},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1522161951642},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1522161951641},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1522161951642},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1522161951642},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1522161951642},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"aeff0e6e23725e8baea27c890ccbbf466024f767","modified":1522161951642},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1522161951645},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1522161951646},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1522161951647},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1522161951654},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1522161951654},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1522161951654},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1522161951654},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1522161951660},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1522161951660},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1522161951660},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1522161951661},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1522161951661},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1522161951661},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1522161951668},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1522161951670},{"_id":"themes/next/.git/objects/pack/pack-96a2e44400b96fb043df0fedb3246ad96ec2ebc9.idx","hash":"85efa59772fb8c1dfcfdd6e75e1c23c7c4e62251","modified":1522342446894},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1522161951675},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1522161951658},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1522161951673},{"_id":"themes/next/source/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1522161951683},{"_id":"themes/next/.git/objects/pack/pack-2271a38d9803bd37b1c1ddc8b55aa4de7174b542.pack","hash":"930eb2792caba1a89a9e9d11874dc2584e99675d","modified":1522161951590},{"_id":"themes/next/.git/objects/pack/pack-96a2e44400b96fb043df0fedb3246ad96ec2ebc9.pack","hash":"f8ffef64feff2410bd0a89cad56c8654573fa97c","modified":1522342446885}],"Category":[{"name":"教程","_id":"cjskilak60004g9zb3xroaogr"},{"name":"笔记","_id":"cjskilakh000fg9zbp847g8r9"},{"name":"转载","_id":"cjskilakl000lg9zbz9ny55o5"},{"name":"面试","_id":"cjskilako000sg9zbok877a52"},{"name":"收藏","_id":"cjskilakq000zg9zbn0nq1qud"},{"name":"算法","_id":"cjskilakv0018g9zbylyygx01"},{"name":"规范","_id":"cjskilakx001eg9zbanaaz7aj"},{"name":"总结","_id":"cjskilal0001ng9zblmkcuzss"},{"name":"翻译","_id":"cjskilapt0054g9zbhlep63py"}],"Data":[{"_id":"next","data":{"favicon":"/favicon.ico","keywords":"Hexo, NexT","rss":null,"since":2016,"authoricon":"heart","copyright":true,"canonical":true,"seo":true,"index_with_subtitle":false,"menu":{"home":"/","categories":"/categories/","archives":"/archives/","tags":"/tags/","about":"/about/"},"menu_icons":{"enable":true,"home":"home","about":"user","categories":"th","schedule":"calendar","tags":"tags","archives":"archive","sitemap":"sitemap","commonweal":"heartbeat"},"scheme":"Mist","social":{"Github":"https://github.com/ricosmall"},"social_icons":{"enable":true,"GitHub":"github","Twitter":"twitter","Weibo":"weibo"},"avatar":"/uploads/avatar.png","toc":{"enable":true,"number":true,"wrap":false},"sidebar":{"position":"left","display":"post","offset":12,"offset_float":0,"b2t":false,"scrollpercent":false,"onmobile":false},"scroll_to_more":true,"save_scroll":false,"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"post_meta":{"item_text":true,"created_at":true,"updated_at":false,"categories":true},"post_wordcount":{"item_text":true,"wordcount":false,"min2read":false,"separated_meta":true},"post_copyright":{"enable":false,"license":"CC BY-NC-SA 3.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/3.0/"},"custom_logo":{"enabled":false,"image":null},"highlight_theme":"night bright","font":{"enable":true,"host":null,"global":{"external":true,"family":"Lato"},"headings":{"external":true,"family":null},"posts":{"external":true,"family":null},"logo":{"external":true,"family":null,"size":null},"codes":{"external":true,"family":"Menlo, Monospace","size":null}},"mathjax":{"enable":true,"per_page":false,"cdn":"//cdn.bootcss.com/mathjax/2.7.1/latest.js?config=TeX-AMS-MML_HTMLorMML"},"han":false,"disqus":{"enable":false,"shortname":"ricosmall","count":false},"changyan":{"enable":false,"appid":null,"appkey":null},"duoshuo_info":{"ua_enable":true,"admin_enable":false,"user_id":0},"facebook_sdk":{"enable":false,"app_id":null,"fb_admin":null,"like_button":null,"webmaster":null},"facebook_comments_plugin":{"enable":false,"num_of_posts":10,"width":"100%","scheme":"light"},"vkontakte_api":{"enable":false,"app_id":null,"like":true,"comments":true,"num_of_posts":10},"rating":{"enable":false,"id":null,"color":"fc6423"},"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null},"busuanzi_count":{"enable":true,"site_uv":true,"site_uv_header":"<i class=\"fa fa-user\"></i>访问人数","site_uv_footer":null,"site_pv":true,"site_pv_header":"<i class=\"fa fa-eye\"></i>总访问量","site_pv_footer":"次","page_pv":true,"page_pv_header":"<i class=\"fa fa-file-o\"></i>浏览","page_pv_footer":"次"},"baidu_push":false,"calendar":{"enable":false,"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"timeZone":null,"showDeleted":false,"singleEvents":true,"maxResults":250},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1},"exturl":false,"use_motion":true,"fancybox":true,"pace":false,"pace_theme":"pace-theme-minimal","canvas_nest":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false,"canvas_ribbon":false,"vendors":{"_internal":"lib","jquery":null,"fancybox":null,"fancybox_css":null,"fastclick":null,"lazyload":null,"velocity":null,"velocity_ui":null,"ua_parser":null,"fontawesome":null,"algolia_instant_js":null,"algolia_instant_css":null,"pace":null,"pace_css":null,"canvas_nest":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_ribbon":null,"han":null},"css":"css","js":"js","images":"images","version":"5.1.1"}}],"Page":[{"title":"Infomation","date":"2016-07-02T04:49:09.000Z","type":"about","comments":0,"_content":"\n<h3 style=\"text-align:center\">欢迎加我微信</h3>\n![微信](http://img.ricosmall.xyz/wechat.jpg)\n","source":"about/index.md","raw":"---\ntitle: Infomation\ndate: 2016-07-02 12:49:09\ntype: 'about'\ncomments: false\n---\n\n<h3 style=\"text-align:center\">欢迎加我微信</h3>\n![微信](http://img.ricosmall.xyz/wechat.jpg)\n","updated":"2019-02-25T15:18:16.431Z","path":"about/index.html","layout":"page","_id":"cjskilak10001g9zbrj0l5qig","content":"<p></p><h3 style=\"text-align:center\">欢迎加我微信</h3><br><img src=\"http://img.ricosmall.xyz/wechat.jpg\" alt=\"微信\"><p></p>\n","site":{"data":{"next":{"favicon":"/favicon.ico","keywords":"Hexo, NexT","rss":null,"since":2016,"authoricon":"heart","copyright":true,"canonical":true,"seo":true,"index_with_subtitle":false,"menu":{"home":"/","categories":"/categories/","archives":"/archives/","tags":"/tags/","about":"/about/"},"menu_icons":{"enable":true,"home":"home","about":"user","categories":"th","schedule":"calendar","tags":"tags","archives":"archive","sitemap":"sitemap","commonweal":"heartbeat"},"scheme":"Mist","social":{"Github":"https://github.com/ricosmall"},"social_icons":{"enable":true,"GitHub":"github","Twitter":"twitter","Weibo":"weibo"},"avatar":"/uploads/avatar.png","toc":{"enable":true,"number":true,"wrap":false},"sidebar":{"position":"left","display":"post","offset":12,"offset_float":0,"b2t":false,"scrollpercent":false,"onmobile":false},"scroll_to_more":true,"save_scroll":false,"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"post_meta":{"item_text":true,"created_at":true,"updated_at":false,"categories":true},"post_wordcount":{"item_text":true,"wordcount":false,"min2read":false,"separated_meta":true},"post_copyright":{"enable":false,"license":"CC BY-NC-SA 3.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/3.0/"},"custom_logo":{"enabled":false,"image":null},"highlight_theme":"night bright","font":{"enable":true,"host":null,"global":{"external":true,"family":"Lato"},"headings":{"external":true,"family":null},"posts":{"external":true,"family":null},"logo":{"external":true,"family":null,"size":null},"codes":{"external":true,"family":"Menlo, Monospace","size":null}},"mathjax":{"enable":true,"per_page":false,"cdn":"//cdn.bootcss.com/mathjax/2.7.1/latest.js?config=TeX-AMS-MML_HTMLorMML"},"han":false,"disqus":{"enable":false,"shortname":"ricosmall","count":false},"changyan":{"enable":false,"appid":null,"appkey":null},"duoshuo_info":{"ua_enable":true,"admin_enable":false,"user_id":0},"facebook_sdk":{"enable":false,"app_id":null,"fb_admin":null,"like_button":null,"webmaster":null},"facebook_comments_plugin":{"enable":false,"num_of_posts":10,"width":"100%","scheme":"light"},"vkontakte_api":{"enable":false,"app_id":null,"like":true,"comments":true,"num_of_posts":10},"rating":{"enable":false,"id":null,"color":"fc6423"},"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null},"busuanzi_count":{"enable":true,"site_uv":true,"site_uv_header":"<i class=\"fa fa-user\"></i>访问人数","site_uv_footer":null,"site_pv":true,"site_pv_header":"<i class=\"fa fa-eye\"></i>总访问量","site_pv_footer":"次","page_pv":true,"page_pv_header":"<i class=\"fa fa-file-o\"></i>浏览","page_pv_footer":"次"},"baidu_push":false,"calendar":{"enable":false,"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"timeZone":null,"showDeleted":false,"singleEvents":true,"maxResults":250},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1},"exturl":false,"use_motion":true,"fancybox":true,"pace":false,"pace_theme":"pace-theme-minimal","canvas_nest":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false,"canvas_ribbon":false,"vendors":{"_internal":"lib","jquery":null,"fancybox":null,"fancybox_css":null,"fastclick":null,"lazyload":null,"velocity":null,"velocity_ui":null,"ua_parser":null,"fontawesome":null,"algolia_instant_js":null,"algolia_instant_css":null,"pace":null,"pace_css":null,"canvas_nest":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_ribbon":null,"han":null},"css":"css","js":"js","images":"images","version":"5.1.1"}}},"excerpt":"","more":"<p></p><h3 style=\"text-align:center\">欢迎加我微信</h3><br><img src=\"http://img.ricosmall.xyz/wechat.jpg\" alt=\"微信\"><p></p>\n"},{"title":"categories","date":"2016-07-02T04:23:23.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2016-07-02 12:23:23\ntype: 'categories'\ncomments: false\n---\n","updated":"2018-03-27T13:52:33.773Z","path":"categories/index.html","layout":"page","_id":"cjskilak50003g9zbipggor37","content":"","site":{"data":{"next":{"favicon":"/favicon.ico","keywords":"Hexo, NexT","rss":null,"since":2016,"authoricon":"heart","copyright":true,"canonical":true,"seo":true,"index_with_subtitle":false,"menu":{"home":"/","categories":"/categories/","archives":"/archives/","tags":"/tags/","about":"/about/"},"menu_icons":{"enable":true,"home":"home","about":"user","categories":"th","schedule":"calendar","tags":"tags","archives":"archive","sitemap":"sitemap","commonweal":"heartbeat"},"scheme":"Mist","social":{"Github":"https://github.com/ricosmall"},"social_icons":{"enable":true,"GitHub":"github","Twitter":"twitter","Weibo":"weibo"},"avatar":"/uploads/avatar.png","toc":{"enable":true,"number":true,"wrap":false},"sidebar":{"position":"left","display":"post","offset":12,"offset_float":0,"b2t":false,"scrollpercent":false,"onmobile":false},"scroll_to_more":true,"save_scroll":false,"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"post_meta":{"item_text":true,"created_at":true,"updated_at":false,"categories":true},"post_wordcount":{"item_text":true,"wordcount":false,"min2read":false,"separated_meta":true},"post_copyright":{"enable":false,"license":"CC BY-NC-SA 3.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/3.0/"},"custom_logo":{"enabled":false,"image":null},"highlight_theme":"night bright","font":{"enable":true,"host":null,"global":{"external":true,"family":"Lato"},"headings":{"external":true,"family":null},"posts":{"external":true,"family":null},"logo":{"external":true,"family":null,"size":null},"codes":{"external":true,"family":"Menlo, Monospace","size":null}},"mathjax":{"enable":true,"per_page":false,"cdn":"//cdn.bootcss.com/mathjax/2.7.1/latest.js?config=TeX-AMS-MML_HTMLorMML"},"han":false,"disqus":{"enable":false,"shortname":"ricosmall","count":false},"changyan":{"enable":false,"appid":null,"appkey":null},"duoshuo_info":{"ua_enable":true,"admin_enable":false,"user_id":0},"facebook_sdk":{"enable":false,"app_id":null,"fb_admin":null,"like_button":null,"webmaster":null},"facebook_comments_plugin":{"enable":false,"num_of_posts":10,"width":"100%","scheme":"light"},"vkontakte_api":{"enable":false,"app_id":null,"like":true,"comments":true,"num_of_posts":10},"rating":{"enable":false,"id":null,"color":"fc6423"},"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null},"busuanzi_count":{"enable":true,"site_uv":true,"site_uv_header":"<i class=\"fa fa-user\"></i>访问人数","site_uv_footer":null,"site_pv":true,"site_pv_header":"<i class=\"fa fa-eye\"></i>总访问量","site_pv_footer":"次","page_pv":true,"page_pv_header":"<i class=\"fa fa-file-o\"></i>浏览","page_pv_footer":"次"},"baidu_push":false,"calendar":{"enable":false,"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"timeZone":null,"showDeleted":false,"singleEvents":true,"maxResults":250},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1},"exturl":false,"use_motion":true,"fancybox":true,"pace":false,"pace_theme":"pace-theme-minimal","canvas_nest":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false,"canvas_ribbon":false,"vendors":{"_internal":"lib","jquery":null,"fancybox":null,"fancybox_css":null,"fastclick":null,"lazyload":null,"velocity":null,"velocity_ui":null,"ua_parser":null,"fontawesome":null,"algolia_instant_js":null,"algolia_instant_css":null,"pace":null,"pace_css":null,"canvas_nest":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_ribbon":null,"han":null},"css":"css","js":"js","images":"images","version":"5.1.1"}}},"excerpt":"","more":""},{"title":"tags","date":"2016-07-02T04:20:38.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2016-07-02 12:20:38\ntype: 'tags'\ncomments: false\n---\n","updated":"2018-03-27T13:52:33.773Z","path":"tags/index.html","layout":"page","_id":"cjskilapn0050g9zbwgecskr6","content":"","site":{"data":{"next":{"favicon":"/favicon.ico","keywords":"Hexo, NexT","rss":null,"since":2016,"authoricon":"heart","copyright":true,"canonical":true,"seo":true,"index_with_subtitle":false,"menu":{"home":"/","categories":"/categories/","archives":"/archives/","tags":"/tags/","about":"/about/"},"menu_icons":{"enable":true,"home":"home","about":"user","categories":"th","schedule":"calendar","tags":"tags","archives":"archive","sitemap":"sitemap","commonweal":"heartbeat"},"scheme":"Mist","social":{"Github":"https://github.com/ricosmall"},"social_icons":{"enable":true,"GitHub":"github","Twitter":"twitter","Weibo":"weibo"},"avatar":"/uploads/avatar.png","toc":{"enable":true,"number":true,"wrap":false},"sidebar":{"position":"left","display":"post","offset":12,"offset_float":0,"b2t":false,"scrollpercent":false,"onmobile":false},"scroll_to_more":true,"save_scroll":false,"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"post_meta":{"item_text":true,"created_at":true,"updated_at":false,"categories":true},"post_wordcount":{"item_text":true,"wordcount":false,"min2read":false,"separated_meta":true},"post_copyright":{"enable":false,"license":"CC BY-NC-SA 3.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/3.0/"},"custom_logo":{"enabled":false,"image":null},"highlight_theme":"night bright","font":{"enable":true,"host":null,"global":{"external":true,"family":"Lato"},"headings":{"external":true,"family":null},"posts":{"external":true,"family":null},"logo":{"external":true,"family":null,"size":null},"codes":{"external":true,"family":"Menlo, Monospace","size":null}},"mathjax":{"enable":true,"per_page":false,"cdn":"//cdn.bootcss.com/mathjax/2.7.1/latest.js?config=TeX-AMS-MML_HTMLorMML"},"han":false,"disqus":{"enable":false,"shortname":"ricosmall","count":false},"changyan":{"enable":false,"appid":null,"appkey":null},"duoshuo_info":{"ua_enable":true,"admin_enable":false,"user_id":0},"facebook_sdk":{"enable":false,"app_id":null,"fb_admin":null,"like_button":null,"webmaster":null},"facebook_comments_plugin":{"enable":false,"num_of_posts":10,"width":"100%","scheme":"light"},"vkontakte_api":{"enable":false,"app_id":null,"like":true,"comments":true,"num_of_posts":10},"rating":{"enable":false,"id":null,"color":"fc6423"},"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null},"busuanzi_count":{"enable":true,"site_uv":true,"site_uv_header":"<i class=\"fa fa-user\"></i>访问人数","site_uv_footer":null,"site_pv":true,"site_pv_header":"<i class=\"fa fa-eye\"></i>总访问量","site_pv_footer":"次","page_pv":true,"page_pv_header":"<i class=\"fa fa-file-o\"></i>浏览","page_pv_footer":"次"},"baidu_push":false,"calendar":{"enable":false,"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"timeZone":null,"showDeleted":false,"singleEvents":true,"maxResults":250},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1},"exturl":false,"use_motion":true,"fancybox":true,"pace":false,"pace_theme":"pace-theme-minimal","canvas_nest":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false,"canvas_ribbon":false,"vendors":{"_internal":"lib","jquery":null,"fancybox":null,"fancybox_css":null,"fastclick":null,"lazyload":null,"velocity":null,"velocity_ui":null,"ua_parser":null,"fontawesome":null,"algolia_instant_js":null,"algolia_instant_css":null,"pace":null,"pace_css":null,"canvas_nest":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_ribbon":null,"han":null},"css":"css","js":"js","images":"images","version":"5.1.1"}}},"excerpt":"","more":""}],"Post":[{"title":"Hello World","date":"2016-04-30T09:56:45.000Z","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n<!-- more -->\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/2016-04-30-hello-world.md","raw":"---\ntitle: Hello World\ndate: 2016-04-30 17:56:45\ntags:\n- hexo\ncategories:\n- 教程\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n<!-- more -->\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"updated":"2018-03-27T13:52:33.767Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjskilajx0000g9zbyxzee9ev","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<a id=\"more\"></a>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n","site":{"data":{"next":{"favicon":"/favicon.ico","keywords":"Hexo, NexT","rss":null,"since":2016,"authoricon":"heart","copyright":true,"canonical":true,"seo":true,"index_with_subtitle":false,"menu":{"home":"/","categories":"/categories/","archives":"/archives/","tags":"/tags/","about":"/about/"},"menu_icons":{"enable":true,"home":"home","about":"user","categories":"th","schedule":"calendar","tags":"tags","archives":"archive","sitemap":"sitemap","commonweal":"heartbeat"},"scheme":"Mist","social":{"Github":"https://github.com/ricosmall"},"social_icons":{"enable":true,"GitHub":"github","Twitter":"twitter","Weibo":"weibo"},"avatar":"/uploads/avatar.png","toc":{"enable":true,"number":true,"wrap":false},"sidebar":{"position":"left","display":"post","offset":12,"offset_float":0,"b2t":false,"scrollpercent":false,"onmobile":false},"scroll_to_more":true,"save_scroll":false,"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"post_meta":{"item_text":true,"created_at":true,"updated_at":false,"categories":true},"post_wordcount":{"item_text":true,"wordcount":false,"min2read":false,"separated_meta":true},"post_copyright":{"enable":false,"license":"CC BY-NC-SA 3.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/3.0/"},"custom_logo":{"enabled":false,"image":null},"highlight_theme":"night bright","font":{"enable":true,"host":null,"global":{"external":true,"family":"Lato"},"headings":{"external":true,"family":null},"posts":{"external":true,"family":null},"logo":{"external":true,"family":null,"size":null},"codes":{"external":true,"family":"Menlo, Monospace","size":null}},"mathjax":{"enable":true,"per_page":false,"cdn":"//cdn.bootcss.com/mathjax/2.7.1/latest.js?config=TeX-AMS-MML_HTMLorMML"},"han":false,"disqus":{"enable":false,"shortname":"ricosmall","count":false},"changyan":{"enable":false,"appid":null,"appkey":null},"duoshuo_info":{"ua_enable":true,"admin_enable":false,"user_id":0},"facebook_sdk":{"enable":false,"app_id":null,"fb_admin":null,"like_button":null,"webmaster":null},"facebook_comments_plugin":{"enable":false,"num_of_posts":10,"width":"100%","scheme":"light"},"vkontakte_api":{"enable":false,"app_id":null,"like":true,"comments":true,"num_of_posts":10},"rating":{"enable":false,"id":null,"color":"fc6423"},"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null},"busuanzi_count":{"enable":true,"site_uv":true,"site_uv_header":"<i class=\"fa fa-user\"></i>访问人数","site_uv_footer":null,"site_pv":true,"site_pv_header":"<i class=\"fa fa-eye\"></i>总访问量","site_pv_footer":"次","page_pv":true,"page_pv_header":"<i class=\"fa fa-file-o\"></i>浏览","page_pv_footer":"次"},"baidu_push":false,"calendar":{"enable":false,"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"timeZone":null,"showDeleted":false,"singleEvents":true,"maxResults":250},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1},"exturl":false,"use_motion":true,"fancybox":true,"pace":false,"pace_theme":"pace-theme-minimal","canvas_nest":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false,"canvas_ribbon":false,"vendors":{"_internal":"lib","jquery":null,"fancybox":null,"fancybox_css":null,"fastclick":null,"lazyload":null,"velocity":null,"velocity_ui":null,"ua_parser":null,"fontawesome":null,"algolia_instant_js":null,"algolia_instant_css":null,"pace":null,"pace_css":null,"canvas_nest":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_ribbon":null,"han":null},"css":"css","js":"js","images":"images","version":"5.1.1"}}},"excerpt":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>","more":"<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>"},{"title":"用hexo搭建博客","date":"2016-07-02T01:29:02.000Z","_content":"### 为什么从Jekyll搬到hexo来\n\n之前专门用了两天时间来捣鼓[Jekyll](http://jekyll.bootcss.com)，但是最后还是没达到想要的效果。中间就没有去管了。但是现在又萌生了搭建博客的想法，继续爬贴找教程，终于发现了[hexo](http://hexo.io)。\n\n<!-- more -->\n\n[Jekyll](http://jekyll.bootcss.com)和[hexo](http://hexo.io)一样，都可以很大程度地自定义，但是以我粗浅的理解，[hexo](http://hexo.io)的自动化程度更高一些。根据大神们的使用心得能够看得出来，很多东西都可以自动生成，而且配置相当简答。究竟哪些方面让人爱不释手，等我用过一段时间再来分享吧。\n\n### 用github-pages和hexo搭建博客\n\n我就是按照大神写的教程一步一步操作的，一次成功，就连碰到的bug都在大神的预料之中。在此直接引用大神[sunwhut](http://sunwhut.com)的教程供大家参考：\n\n[如何利用GitHub Pages和Hexo快速搭建个人博客](http://sunwhut.com/2015/10/30/buildBlog/?hmsr=toutiao.io&utm_medium=toutiao.io&utm_source=toutiao.io)\n\n#### 主题\n\n我上次在搭建Jekyll博客的时候，在找教程的过程中就发现了让人眼前一亮的博客主题，名字叫做[NexT](http://theme-next.iissnan.com)。上面给的这个教程的作者采用的也是这个主题，真是棒极了。主题的作者[iissnan](http://notes.iissnan.com)说的`精于心，简于形`用来形容这个主题很恰当。\n\n#### 评论以及第三方功能\n\n评论推荐[多说](http://duoshuo.com/)，很好用。[hexo](http://hexo.io)上面有非常详细的介绍。\n\n#### 配置文件\n\n[hexo](http://hexo.io)的配置文件分为`站点配置文件`和`主题配置文件`，搭配使用可以让博客容光焕发，异常强大。\n","source":"_posts/2016-07-02-用hexo搭建博客.md","raw":"---\ntitle: 用hexo搭建博客\ndate: 2016-07-02T09:29:02.000Z\ntags:\n- hexo\n- github-pages\ncategories:\n- 教程\n---\n### 为什么从Jekyll搬到hexo来\n\n之前专门用了两天时间来捣鼓[Jekyll](http://jekyll.bootcss.com)，但是最后还是没达到想要的效果。中间就没有去管了。但是现在又萌生了搭建博客的想法，继续爬贴找教程，终于发现了[hexo](http://hexo.io)。\n\n<!-- more -->\n\n[Jekyll](http://jekyll.bootcss.com)和[hexo](http://hexo.io)一样，都可以很大程度地自定义，但是以我粗浅的理解，[hexo](http://hexo.io)的自动化程度更高一些。根据大神们的使用心得能够看得出来，很多东西都可以自动生成，而且配置相当简答。究竟哪些方面让人爱不释手，等我用过一段时间再来分享吧。\n\n### 用github-pages和hexo搭建博客\n\n我就是按照大神写的教程一步一步操作的，一次成功，就连碰到的bug都在大神的预料之中。在此直接引用大神[sunwhut](http://sunwhut.com)的教程供大家参考：\n\n[如何利用GitHub Pages和Hexo快速搭建个人博客](http://sunwhut.com/2015/10/30/buildBlog/?hmsr=toutiao.io&utm_medium=toutiao.io&utm_source=toutiao.io)\n\n#### 主题\n\n我上次在搭建Jekyll博客的时候，在找教程的过程中就发现了让人眼前一亮的博客主题，名字叫做[NexT](http://theme-next.iissnan.com)。上面给的这个教程的作者采用的也是这个主题，真是棒极了。主题的作者[iissnan](http://notes.iissnan.com)说的`精于心，简于形`用来形容这个主题很恰当。\n\n#### 评论以及第三方功能\n\n评论推荐[多说](http://duoshuo.com/)，很好用。[hexo](http://hexo.io)上面有非常详细的介绍。\n\n#### 配置文件\n\n[hexo](http://hexo.io)的配置文件分为`站点配置文件`和`主题配置文件`，搭配使用可以让博客容光焕发，异常强大。\n","slug":"用hexo搭建博客","published":1,"updated":"2018-03-27T13:52:33.767Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjskilak30002g9zb7afma16h","content":"<h3 id=\"为什么从Jekyll搬到hexo来\"><a href=\"#为什么从Jekyll搬到hexo来\" class=\"headerlink\" title=\"为什么从Jekyll搬到hexo来\"></a>为什么从Jekyll搬到hexo来</h3><p>之前专门用了两天时间来捣鼓<a href=\"http://jekyll.bootcss.com\" target=\"_blank\" rel=\"noopener\">Jekyll</a>，但是最后还是没达到想要的效果。中间就没有去管了。但是现在又萌生了搭建博客的想法，继续爬贴找教程，终于发现了<a href=\"http://hexo.io\" target=\"_blank\" rel=\"noopener\">hexo</a>。</p>\n<a id=\"more\"></a>\n<p><a href=\"http://jekyll.bootcss.com\" target=\"_blank\" rel=\"noopener\">Jekyll</a>和<a href=\"http://hexo.io\" target=\"_blank\" rel=\"noopener\">hexo</a>一样，都可以很大程度地自定义，但是以我粗浅的理解，<a href=\"http://hexo.io\" target=\"_blank\" rel=\"noopener\">hexo</a>的自动化程度更高一些。根据大神们的使用心得能够看得出来，很多东西都可以自动生成，而且配置相当简答。究竟哪些方面让人爱不释手，等我用过一段时间再来分享吧。</p>\n<h3 id=\"用github-pages和hexo搭建博客\"><a href=\"#用github-pages和hexo搭建博客\" class=\"headerlink\" title=\"用github-pages和hexo搭建博客\"></a>用github-pages和hexo搭建博客</h3><p>我就是按照大神写的教程一步一步操作的，一次成功，就连碰到的bug都在大神的预料之中。在此直接引用大神<a href=\"http://sunwhut.com\" target=\"_blank\" rel=\"noopener\">sunwhut</a>的教程供大家参考：</p>\n<p><a href=\"http://sunwhut.com/2015/10/30/buildBlog/?hmsr=toutiao.io&amp;utm_medium=toutiao.io&amp;utm_source=toutiao.io\" target=\"_blank\" rel=\"noopener\">如何利用GitHub Pages和Hexo快速搭建个人博客</a></p>\n<h4 id=\"主题\"><a href=\"#主题\" class=\"headerlink\" title=\"主题\"></a>主题</h4><p>我上次在搭建Jekyll博客的时候，在找教程的过程中就发现了让人眼前一亮的博客主题，名字叫做<a href=\"http://theme-next.iissnan.com\" target=\"_blank\" rel=\"noopener\">NexT</a>。上面给的这个教程的作者采用的也是这个主题，真是棒极了。主题的作者<a href=\"http://notes.iissnan.com\" target=\"_blank\" rel=\"noopener\">iissnan</a>说的<code>精于心，简于形</code>用来形容这个主题很恰当。</p>\n<h4 id=\"评论以及第三方功能\"><a href=\"#评论以及第三方功能\" class=\"headerlink\" title=\"评论以及第三方功能\"></a>评论以及第三方功能</h4><p>评论推荐<a href=\"http://duoshuo.com/\" target=\"_blank\" rel=\"noopener\">多说</a>，很好用。<a href=\"http://hexo.io\" target=\"_blank\" rel=\"noopener\">hexo</a>上面有非常详细的介绍。</p>\n<h4 id=\"配置文件\"><a href=\"#配置文件\" class=\"headerlink\" title=\"配置文件\"></a>配置文件</h4><p><a href=\"http://hexo.io\" target=\"_blank\" rel=\"noopener\">hexo</a>的配置文件分为<code>站点配置文件</code>和<code>主题配置文件</code>，搭配使用可以让博客容光焕发，异常强大。</p>\n","site":{"data":{"next":{"favicon":"/favicon.ico","keywords":"Hexo, NexT","rss":null,"since":2016,"authoricon":"heart","copyright":true,"canonical":true,"seo":true,"index_with_subtitle":false,"menu":{"home":"/","categories":"/categories/","archives":"/archives/","tags":"/tags/","about":"/about/"},"menu_icons":{"enable":true,"home":"home","about":"user","categories":"th","schedule":"calendar","tags":"tags","archives":"archive","sitemap":"sitemap","commonweal":"heartbeat"},"scheme":"Mist","social":{"Github":"https://github.com/ricosmall"},"social_icons":{"enable":true,"GitHub":"github","Twitter":"twitter","Weibo":"weibo"},"avatar":"/uploads/avatar.png","toc":{"enable":true,"number":true,"wrap":false},"sidebar":{"position":"left","display":"post","offset":12,"offset_float":0,"b2t":false,"scrollpercent":false,"onmobile":false},"scroll_to_more":true,"save_scroll":false,"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"post_meta":{"item_text":true,"created_at":true,"updated_at":false,"categories":true},"post_wordcount":{"item_text":true,"wordcount":false,"min2read":false,"separated_meta":true},"post_copyright":{"enable":false,"license":"CC BY-NC-SA 3.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/3.0/"},"custom_logo":{"enabled":false,"image":null},"highlight_theme":"night bright","font":{"enable":true,"host":null,"global":{"external":true,"family":"Lato"},"headings":{"external":true,"family":null},"posts":{"external":true,"family":null},"logo":{"external":true,"family":null,"size":null},"codes":{"external":true,"family":"Menlo, Monospace","size":null}},"mathjax":{"enable":true,"per_page":false,"cdn":"//cdn.bootcss.com/mathjax/2.7.1/latest.js?config=TeX-AMS-MML_HTMLorMML"},"han":false,"disqus":{"enable":false,"shortname":"ricosmall","count":false},"changyan":{"enable":false,"appid":null,"appkey":null},"duoshuo_info":{"ua_enable":true,"admin_enable":false,"user_id":0},"facebook_sdk":{"enable":false,"app_id":null,"fb_admin":null,"like_button":null,"webmaster":null},"facebook_comments_plugin":{"enable":false,"num_of_posts":10,"width":"100%","scheme":"light"},"vkontakte_api":{"enable":false,"app_id":null,"like":true,"comments":true,"num_of_posts":10},"rating":{"enable":false,"id":null,"color":"fc6423"},"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null},"busuanzi_count":{"enable":true,"site_uv":true,"site_uv_header":"<i class=\"fa fa-user\"></i>访问人数","site_uv_footer":null,"site_pv":true,"site_pv_header":"<i class=\"fa fa-eye\"></i>总访问量","site_pv_footer":"次","page_pv":true,"page_pv_header":"<i class=\"fa fa-file-o\"></i>浏览","page_pv_footer":"次"},"baidu_push":false,"calendar":{"enable":false,"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"timeZone":null,"showDeleted":false,"singleEvents":true,"maxResults":250},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1},"exturl":false,"use_motion":true,"fancybox":true,"pace":false,"pace_theme":"pace-theme-minimal","canvas_nest":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false,"canvas_ribbon":false,"vendors":{"_internal":"lib","jquery":null,"fancybox":null,"fancybox_css":null,"fastclick":null,"lazyload":null,"velocity":null,"velocity_ui":null,"ua_parser":null,"fontawesome":null,"algolia_instant_js":null,"algolia_instant_css":null,"pace":null,"pace_css":null,"canvas_nest":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_ribbon":null,"han":null},"css":"css","js":"js","images":"images","version":"5.1.1"}}},"excerpt":"<h3 id=\"为什么从Jekyll搬到hexo来\"><a href=\"#为什么从Jekyll搬到hexo来\" class=\"headerlink\" title=\"为什么从Jekyll搬到hexo来\"></a>为什么从Jekyll搬到hexo来</h3><p>之前专门用了两天时间来捣鼓<a href=\"http://jekyll.bootcss.com\" target=\"_blank\" rel=\"noopener\">Jekyll</a>，但是最后还是没达到想要的效果。中间就没有去管了。但是现在又萌生了搭建博客的想法，继续爬贴找教程，终于发现了<a href=\"http://hexo.io\" target=\"_blank\" rel=\"noopener\">hexo</a>。</p>","more":"<p><a href=\"http://jekyll.bootcss.com\" target=\"_blank\" rel=\"noopener\">Jekyll</a>和<a href=\"http://hexo.io\" target=\"_blank\" rel=\"noopener\">hexo</a>一样，都可以很大程度地自定义，但是以我粗浅的理解，<a href=\"http://hexo.io\" target=\"_blank\" rel=\"noopener\">hexo</a>的自动化程度更高一些。根据大神们的使用心得能够看得出来，很多东西都可以自动生成，而且配置相当简答。究竟哪些方面让人爱不释手，等我用过一段时间再来分享吧。</p>\n<h3 id=\"用github-pages和hexo搭建博客\"><a href=\"#用github-pages和hexo搭建博客\" class=\"headerlink\" title=\"用github-pages和hexo搭建博客\"></a>用github-pages和hexo搭建博客</h3><p>我就是按照大神写的教程一步一步操作的，一次成功，就连碰到的bug都在大神的预料之中。在此直接引用大神<a href=\"http://sunwhut.com\" target=\"_blank\" rel=\"noopener\">sunwhut</a>的教程供大家参考：</p>\n<p><a href=\"http://sunwhut.com/2015/10/30/buildBlog/?hmsr=toutiao.io&amp;utm_medium=toutiao.io&amp;utm_source=toutiao.io\" target=\"_blank\" rel=\"noopener\">如何利用GitHub Pages和Hexo快速搭建个人博客</a></p>\n<h4 id=\"主题\"><a href=\"#主题\" class=\"headerlink\" title=\"主题\"></a>主题</h4><p>我上次在搭建Jekyll博客的时候，在找教程的过程中就发现了让人眼前一亮的博客主题，名字叫做<a href=\"http://theme-next.iissnan.com\" target=\"_blank\" rel=\"noopener\">NexT</a>。上面给的这个教程的作者采用的也是这个主题，真是棒极了。主题的作者<a href=\"http://notes.iissnan.com\" target=\"_blank\" rel=\"noopener\">iissnan</a>说的<code>精于心，简于形</code>用来形容这个主题很恰当。</p>\n<h4 id=\"评论以及第三方功能\"><a href=\"#评论以及第三方功能\" class=\"headerlink\" title=\"评论以及第三方功能\"></a>评论以及第三方功能</h4><p>评论推荐<a href=\"http://duoshuo.com/\" target=\"_blank\" rel=\"noopener\">多说</a>，很好用。<a href=\"http://hexo.io\" target=\"_blank\" rel=\"noopener\">hexo</a>上面有非常详细的介绍。</p>\n<h4 id=\"配置文件\"><a href=\"#配置文件\" class=\"headerlink\" title=\"配置文件\"></a>配置文件</h4><p><a href=\"http://hexo.io\" target=\"_blank\" rel=\"noopener\">hexo</a>的配置文件分为<code>站点配置文件</code>和<code>主题配置文件</code>，搭配使用可以让博客容光焕发，异常强大。</p>"},{"title":"Javascript内置对象","date":"2016-07-24T04:21:35.000Z","_content":"\n## 什么是对象  \nJavaScript中的所有事物都是对象，如：字符串、数值、数组、函数等，每个对象带有**属性**和**方法**。  \n<!-- more -->\n- **对象的属性**\n\t- 定义：反映该对象某些特定的性质的。如：字符串的长度、图像的长宽等\n\t- 访问对象属性：`objectName.propertyName`  \n- **对象的方法**\n\t- 定义：能够在对象上执行的动作。例如，表单的“提交”(Submit)，时间的“获取”(getYear)等\n\t- 访问对象的方法：`objectName.methodName()`\n\n## Date对象\nDate对象可以储存任意一个日期，并且可以精确到毫秒数（1/1000 秒）。  \n- 定义一个时间对象：`var myDate=new Date(); `  \n- Date对象中处理时间和日期的常用方法：  \n\n| 方法名称 | 功能|\n| --------|--------|\n| `get/setDate()` | 返回/设置日期(1 ~ 31)|\n| `get/setFullYear()` | 返回/设置年份，用四位数表示|\n| `get/setYear()` | 返回/设置年份|\n| `get/setMonth()` | 返回/设置月份(0 ~ 11)|\n| `get/setDay()` | 返回/设置星期(0 ~ 6)|\n| `get/setHours()` | 返回/设置小时(0 ~ 23)|\n| `get/setMinutes()` | 返回/设置分钟(0 ~ 59)|\n| `get/setSeconds()` | 返回/设置秒钟(0 ~ 59)|\n| `get/setMilliSeconds()` | 返回/设置毫秒(0 ~ 999)|\n| `get/setTime()` | 返回/设置时间(毫秒)|\n\n## String字符串对象\n- **Array数组对象的部分方法**  \n\t- **返回指定位置的字符**  \n\t\t`stringObject.charAt(index)`  \n\t\t`index`：*必需*。表示字符串中某个位置的数字(字符在字符串中的下标)。  \n\t- **返回指定的字符串首次出现的位置**  \n\t\t`stringObject.indexOf(substring, startpos)`  \n\t\t`substring`：*必需*。需要检索的字符串值。\n\t\t`startpos`：*可选*。整数，表示字符开始检索的位置，取值范围为`0`到`stringObject.length-1`。如省略此参数，则从被检索字符串首字符开始检索。  \n\t- **字符串分割**  \n\t\t`stringObject.split(separator,limit)`  \n\t\t`separator`：*必需*。表示从该参数指定的位置分割`stringObject`。  \n\t\t`limit`：*可选*。表示分割的次数，如设置该参数，返回的子串数量不会多于该参数。  \n\t- **提取字符串**  \n\t\t`stringObject.substring(starPos,stopPos)`  \n\t\t`starPos`：*必需*。一个非负的整数，表示开始位置。  \n\t\t`stopPos`：*可选*。一个非负的整数，表示结束位置，如省略该参数，返回的子串一直到`stringObject`的结尾。  \n\t- **提取指定书目字符串**  \n\t\t`stringObject.substr(startPos,length)`  \n\t\t`starPos`：*必需*。一个非负的整数，表示开始位置。  \n\t\t`length`：*可选*。一个非负的整数，表示提取字符串的长度，如省略该参数，返回的子串一直到`stringObject`的结尾。  \n\n## Math对象\nMath对象，提供对数据的数学计算。Math 对象是一个固有的对象，无需创建它，直接把 Math 作为对象使用就可以调用其所有属性和方法。这是它与Date,String对象的区别。  \n- **Math对象的部分属性**\n\n| 属性 | 说明 |\n| ----- | ----- |\n| `Math.E` | 返回算术常量e，即自然对数的底数(约2.718) |\n| `Math.PI` | 返回圆周率(约3.14159) |\n\n- **Math对象的部分方法**  \n\t- **向上取整**  \n\t`Math.ceil(x)`  \n\t`x`：*必需*。必须是一个数值。  \n\t- **向下取整**  \n\t`Math.floor(x)`  \n\t`x`：*必需*。必须是一个数值。  \n\t- **四舍五入**  \n\t`Math.round(x)`  \n\t`x`：*必需*。必须是一个数值。  \n\t- **随机数**  \n\t`Math.random();`  \n\t返回一个大于或等于0但小于1的符号为正的数字值。  \n\n## Array数组对象\n数组对象是一个对象的集合，里边的对象可以是不同类型的。数组的每一个成员对象都有一个“下标”，用来表示它在数组中的位置，是从0开始的。  \n- **Array数组对象的部分方法**  \n\t- **数组连接**  \n\t`arrayObject.concat(array1,array2,...,arrayN)`  \n\t该方法用于连接两个或多个数组。此方法返回一个新数组，不改变原来的数组。  \n\t- **指定分隔符连接数组元素**  \n\t`arrayObject.join(separator)`  \n\t`separator`：*可选*。表示要使用的分隔符，如果省略该参数，则使用逗号作为分隔符。  \n\t- **颠倒数组元素顺序**  \n\t`arrayObject.reverse()`  \n\t该方法会改变原来的数组，而不会创建新的数组。  \n\t- **选定元素**  \n\t`arrayObject.slice(start,end)`  \n\t`start`：*必需*。规定从何处开始选取，如果是负数，那么它规定的是从数组尾部开始算起的元素。-1指最后一个元素，-2指倒数第二个元素。   \n\t`end`：*可选*。规定从何处结束选取，如果这个参数是负数，那么它规定的是从数组尾部开始算起的元素。    \n\t- **数组排序**  \n\t`arrayObject.sort(方法函数)`  \n\t`方法函数`：*可选*。规定排序顺序，必须是函数。如果不指定<方法函数>，则按unicode码顺序排列。    \n","source":"_posts/2016-07-24-Javascript内置对象.md","raw":"---\ntitle: Javascript内置对象\ndate: 2016-07-24 12:21:35\ntags:\n- JavaScript\ncategories:\n- 笔记\n---\n\n## 什么是对象  \nJavaScript中的所有事物都是对象，如：字符串、数值、数组、函数等，每个对象带有**属性**和**方法**。  \n<!-- more -->\n- **对象的属性**\n\t- 定义：反映该对象某些特定的性质的。如：字符串的长度、图像的长宽等\n\t- 访问对象属性：`objectName.propertyName`  \n- **对象的方法**\n\t- 定义：能够在对象上执行的动作。例如，表单的“提交”(Submit)，时间的“获取”(getYear)等\n\t- 访问对象的方法：`objectName.methodName()`\n\n## Date对象\nDate对象可以储存任意一个日期，并且可以精确到毫秒数（1/1000 秒）。  \n- 定义一个时间对象：`var myDate=new Date(); `  \n- Date对象中处理时间和日期的常用方法：  \n\n| 方法名称 | 功能|\n| --------|--------|\n| `get/setDate()` | 返回/设置日期(1 ~ 31)|\n| `get/setFullYear()` | 返回/设置年份，用四位数表示|\n| `get/setYear()` | 返回/设置年份|\n| `get/setMonth()` | 返回/设置月份(0 ~ 11)|\n| `get/setDay()` | 返回/设置星期(0 ~ 6)|\n| `get/setHours()` | 返回/设置小时(0 ~ 23)|\n| `get/setMinutes()` | 返回/设置分钟(0 ~ 59)|\n| `get/setSeconds()` | 返回/设置秒钟(0 ~ 59)|\n| `get/setMilliSeconds()` | 返回/设置毫秒(0 ~ 999)|\n| `get/setTime()` | 返回/设置时间(毫秒)|\n\n## String字符串对象\n- **Array数组对象的部分方法**  \n\t- **返回指定位置的字符**  \n\t\t`stringObject.charAt(index)`  \n\t\t`index`：*必需*。表示字符串中某个位置的数字(字符在字符串中的下标)。  \n\t- **返回指定的字符串首次出现的位置**  \n\t\t`stringObject.indexOf(substring, startpos)`  \n\t\t`substring`：*必需*。需要检索的字符串值。\n\t\t`startpos`：*可选*。整数，表示字符开始检索的位置，取值范围为`0`到`stringObject.length-1`。如省略此参数，则从被检索字符串首字符开始检索。  \n\t- **字符串分割**  \n\t\t`stringObject.split(separator,limit)`  \n\t\t`separator`：*必需*。表示从该参数指定的位置分割`stringObject`。  \n\t\t`limit`：*可选*。表示分割的次数，如设置该参数，返回的子串数量不会多于该参数。  \n\t- **提取字符串**  \n\t\t`stringObject.substring(starPos,stopPos)`  \n\t\t`starPos`：*必需*。一个非负的整数，表示开始位置。  \n\t\t`stopPos`：*可选*。一个非负的整数，表示结束位置，如省略该参数，返回的子串一直到`stringObject`的结尾。  \n\t- **提取指定书目字符串**  \n\t\t`stringObject.substr(startPos,length)`  \n\t\t`starPos`：*必需*。一个非负的整数，表示开始位置。  \n\t\t`length`：*可选*。一个非负的整数，表示提取字符串的长度，如省略该参数，返回的子串一直到`stringObject`的结尾。  \n\n## Math对象\nMath对象，提供对数据的数学计算。Math 对象是一个固有的对象，无需创建它，直接把 Math 作为对象使用就可以调用其所有属性和方法。这是它与Date,String对象的区别。  \n- **Math对象的部分属性**\n\n| 属性 | 说明 |\n| ----- | ----- |\n| `Math.E` | 返回算术常量e，即自然对数的底数(约2.718) |\n| `Math.PI` | 返回圆周率(约3.14159) |\n\n- **Math对象的部分方法**  \n\t- **向上取整**  \n\t`Math.ceil(x)`  \n\t`x`：*必需*。必须是一个数值。  \n\t- **向下取整**  \n\t`Math.floor(x)`  \n\t`x`：*必需*。必须是一个数值。  \n\t- **四舍五入**  \n\t`Math.round(x)`  \n\t`x`：*必需*。必须是一个数值。  \n\t- **随机数**  \n\t`Math.random();`  \n\t返回一个大于或等于0但小于1的符号为正的数字值。  \n\n## Array数组对象\n数组对象是一个对象的集合，里边的对象可以是不同类型的。数组的每一个成员对象都有一个“下标”，用来表示它在数组中的位置，是从0开始的。  \n- **Array数组对象的部分方法**  \n\t- **数组连接**  \n\t`arrayObject.concat(array1,array2,...,arrayN)`  \n\t该方法用于连接两个或多个数组。此方法返回一个新数组，不改变原来的数组。  \n\t- **指定分隔符连接数组元素**  \n\t`arrayObject.join(separator)`  \n\t`separator`：*可选*。表示要使用的分隔符，如果省略该参数，则使用逗号作为分隔符。  \n\t- **颠倒数组元素顺序**  \n\t`arrayObject.reverse()`  \n\t该方法会改变原来的数组，而不会创建新的数组。  \n\t- **选定元素**  \n\t`arrayObject.slice(start,end)`  \n\t`start`：*必需*。规定从何处开始选取，如果是负数，那么它规定的是从数组尾部开始算起的元素。-1指最后一个元素，-2指倒数第二个元素。   \n\t`end`：*可选*。规定从何处结束选取，如果这个参数是负数，那么它规定的是从数组尾部开始算起的元素。    \n\t- **数组排序**  \n\t`arrayObject.sort(方法函数)`  \n\t`方法函数`：*可选*。规定排序顺序，必须是函数。如果不指定<方法函数>，则按unicode码顺序排列。    \n","slug":"Javascript内置对象","published":1,"updated":"2018-03-27T13:52:33.768Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjskilak80006g9zbhh5ei4qu","content":"<h2 id=\"什么是对象\"><a href=\"#什么是对象\" class=\"headerlink\" title=\"什么是对象\"></a>什么是对象</h2><p>JavaScript中的所有事物都是对象，如：字符串、数值、数组、函数等，每个对象带有<strong>属性</strong>和<strong>方法</strong>。<br><a id=\"more\"></a></p>\n<ul>\n<li><strong>对象的属性</strong><ul>\n<li>定义：反映该对象某些特定的性质的。如：字符串的长度、图像的长宽等</li>\n<li>访问对象属性：<code>objectName.propertyName</code>  </li>\n</ul>\n</li>\n<li><strong>对象的方法</strong><ul>\n<li>定义：能够在对象上执行的动作。例如，表单的“提交”(Submit)，时间的“获取”(getYear)等</li>\n<li>访问对象的方法：<code>objectName.methodName()</code></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Date对象\"><a href=\"#Date对象\" class=\"headerlink\" title=\"Date对象\"></a>Date对象</h2><p>Date对象可以储存任意一个日期，并且可以精确到毫秒数（1/1000 秒）。  </p>\n<ul>\n<li>定义一个时间对象：<code>var myDate=new Date();</code>  </li>\n<li>Date对象中处理时间和日期的常用方法：  </li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>方法名称</th>\n<th>功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>get/setDate()</code></td>\n<td>返回/设置日期(1 ~ 31)</td>\n</tr>\n<tr>\n<td><code>get/setFullYear()</code></td>\n<td>返回/设置年份，用四位数表示</td>\n</tr>\n<tr>\n<td><code>get/setYear()</code></td>\n<td>返回/设置年份</td>\n</tr>\n<tr>\n<td><code>get/setMonth()</code></td>\n<td>返回/设置月份(0 ~ 11)</td>\n</tr>\n<tr>\n<td><code>get/setDay()</code></td>\n<td>返回/设置星期(0 ~ 6)</td>\n</tr>\n<tr>\n<td><code>get/setHours()</code></td>\n<td>返回/设置小时(0 ~ 23)</td>\n</tr>\n<tr>\n<td><code>get/setMinutes()</code></td>\n<td>返回/设置分钟(0 ~ 59)</td>\n</tr>\n<tr>\n<td><code>get/setSeconds()</code></td>\n<td>返回/设置秒钟(0 ~ 59)</td>\n</tr>\n<tr>\n<td><code>get/setMilliSeconds()</code></td>\n<td>返回/设置毫秒(0 ~ 999)</td>\n</tr>\n<tr>\n<td><code>get/setTime()</code></td>\n<td>返回/设置时间(毫秒)</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"String字符串对象\"><a href=\"#String字符串对象\" class=\"headerlink\" title=\"String字符串对象\"></a>String字符串对象</h2><ul>\n<li><strong>Array数组对象的部分方法</strong>  <ul>\n<li><strong>返回指定位置的字符</strong><br>  <code>stringObject.charAt(index)</code><br>  <code>index</code>：<em>必需</em>。表示字符串中某个位置的数字(字符在字符串中的下标)。  </li>\n<li><strong>返回指定的字符串首次出现的位置</strong><br>  <code>stringObject.indexOf(substring, startpos)</code><br>  <code>substring</code>：<em>必需</em>。需要检索的字符串值。<br>  <code>startpos</code>：<em>可选</em>。整数，表示字符开始检索的位置，取值范围为<code>0</code>到<code>stringObject.length-1</code>。如省略此参数，则从被检索字符串首字符开始检索。  </li>\n<li><strong>字符串分割</strong><br>  <code>stringObject.split(separator,limit)</code><br>  <code>separator</code>：<em>必需</em>。表示从该参数指定的位置分割<code>stringObject</code>。<br>  <code>limit</code>：<em>可选</em>。表示分割的次数，如设置该参数，返回的子串数量不会多于该参数。  </li>\n<li><strong>提取字符串</strong><br>  <code>stringObject.substring(starPos,stopPos)</code><br>  <code>starPos</code>：<em>必需</em>。一个非负的整数，表示开始位置。<br>  <code>stopPos</code>：<em>可选</em>。一个非负的整数，表示结束位置，如省略该参数，返回的子串一直到<code>stringObject</code>的结尾。  </li>\n<li><strong>提取指定书目字符串</strong><br>  <code>stringObject.substr(startPos,length)</code><br>  <code>starPos</code>：<em>必需</em>。一个非负的整数，表示开始位置。<br>  <code>length</code>：<em>可选</em>。一个非负的整数，表示提取字符串的长度，如省略该参数，返回的子串一直到<code>stringObject</code>的结尾。  </li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Math对象\"><a href=\"#Math对象\" class=\"headerlink\" title=\"Math对象\"></a>Math对象</h2><p>Math对象，提供对数据的数学计算。Math 对象是一个固有的对象，无需创建它，直接把 Math 作为对象使用就可以调用其所有属性和方法。这是它与Date,String对象的区别。  </p>\n<ul>\n<li><strong>Math对象的部分属性</strong></li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>Math.E</code></td>\n<td>返回算术常量e，即自然对数的底数(约2.718)</td>\n</tr>\n<tr>\n<td><code>Math.PI</code></td>\n<td>返回圆周率(约3.14159)</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li><strong>Math对象的部分方法</strong>  <ul>\n<li><strong>向上取整</strong><br><code>Math.ceil(x)</code><br><code>x</code>：<em>必需</em>。必须是一个数值。  </li>\n<li><strong>向下取整</strong><br><code>Math.floor(x)</code><br><code>x</code>：<em>必需</em>。必须是一个数值。  </li>\n<li><strong>四舍五入</strong><br><code>Math.round(x)</code><br><code>x</code>：<em>必需</em>。必须是一个数值。  </li>\n<li><strong>随机数</strong><br><code>Math.random();</code><br>返回一个大于或等于0但小于1的符号为正的数字值。  </li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Array数组对象\"><a href=\"#Array数组对象\" class=\"headerlink\" title=\"Array数组对象\"></a>Array数组对象</h2><p>数组对象是一个对象的集合，里边的对象可以是不同类型的。数组的每一个成员对象都有一个“下标”，用来表示它在数组中的位置，是从0开始的。  </p>\n<ul>\n<li><strong>Array数组对象的部分方法</strong>  <ul>\n<li><strong>数组连接</strong><br><code>arrayObject.concat(array1,array2,...,arrayN)</code><br>该方法用于连接两个或多个数组。此方法返回一个新数组，不改变原来的数组。  </li>\n<li><strong>指定分隔符连接数组元素</strong><br><code>arrayObject.join(separator)</code><br><code>separator</code>：<em>可选</em>。表示要使用的分隔符，如果省略该参数，则使用逗号作为分隔符。  </li>\n<li><strong>颠倒数组元素顺序</strong><br><code>arrayObject.reverse()</code><br>该方法会改变原来的数组，而不会创建新的数组。  </li>\n<li><strong>选定元素</strong><br><code>arrayObject.slice(start,end)</code><br><code>start</code>：<em>必需</em>。规定从何处开始选取，如果是负数，那么它规定的是从数组尾部开始算起的元素。-1指最后一个元素，-2指倒数第二个元素。<br><code>end</code>：<em>可选</em>。规定从何处结束选取，如果这个参数是负数，那么它规定的是从数组尾部开始算起的元素。    </li>\n<li><strong>数组排序</strong><br><code>arrayObject.sort(方法函数)</code><br><code>方法函数</code>：<em>可选</em>。规定排序顺序，必须是函数。如果不指定&lt;方法函数&gt;，则按unicode码顺序排列。    </li>\n</ul>\n</li>\n</ul>\n","site":{"data":{"next":{"favicon":"/favicon.ico","keywords":"Hexo, NexT","rss":null,"since":2016,"authoricon":"heart","copyright":true,"canonical":true,"seo":true,"index_with_subtitle":false,"menu":{"home":"/","categories":"/categories/","archives":"/archives/","tags":"/tags/","about":"/about/"},"menu_icons":{"enable":true,"home":"home","about":"user","categories":"th","schedule":"calendar","tags":"tags","archives":"archive","sitemap":"sitemap","commonweal":"heartbeat"},"scheme":"Mist","social":{"Github":"https://github.com/ricosmall"},"social_icons":{"enable":true,"GitHub":"github","Twitter":"twitter","Weibo":"weibo"},"avatar":"/uploads/avatar.png","toc":{"enable":true,"number":true,"wrap":false},"sidebar":{"position":"left","display":"post","offset":12,"offset_float":0,"b2t":false,"scrollpercent":false,"onmobile":false},"scroll_to_more":true,"save_scroll":false,"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"post_meta":{"item_text":true,"created_at":true,"updated_at":false,"categories":true},"post_wordcount":{"item_text":true,"wordcount":false,"min2read":false,"separated_meta":true},"post_copyright":{"enable":false,"license":"CC BY-NC-SA 3.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/3.0/"},"custom_logo":{"enabled":false,"image":null},"highlight_theme":"night bright","font":{"enable":true,"host":null,"global":{"external":true,"family":"Lato"},"headings":{"external":true,"family":null},"posts":{"external":true,"family":null},"logo":{"external":true,"family":null,"size":null},"codes":{"external":true,"family":"Menlo, Monospace","size":null}},"mathjax":{"enable":true,"per_page":false,"cdn":"//cdn.bootcss.com/mathjax/2.7.1/latest.js?config=TeX-AMS-MML_HTMLorMML"},"han":false,"disqus":{"enable":false,"shortname":"ricosmall","count":false},"changyan":{"enable":false,"appid":null,"appkey":null},"duoshuo_info":{"ua_enable":true,"admin_enable":false,"user_id":0},"facebook_sdk":{"enable":false,"app_id":null,"fb_admin":null,"like_button":null,"webmaster":null},"facebook_comments_plugin":{"enable":false,"num_of_posts":10,"width":"100%","scheme":"light"},"vkontakte_api":{"enable":false,"app_id":null,"like":true,"comments":true,"num_of_posts":10},"rating":{"enable":false,"id":null,"color":"fc6423"},"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null},"busuanzi_count":{"enable":true,"site_uv":true,"site_uv_header":"<i class=\"fa fa-user\"></i>访问人数","site_uv_footer":null,"site_pv":true,"site_pv_header":"<i class=\"fa fa-eye\"></i>总访问量","site_pv_footer":"次","page_pv":true,"page_pv_header":"<i class=\"fa fa-file-o\"></i>浏览","page_pv_footer":"次"},"baidu_push":false,"calendar":{"enable":false,"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"timeZone":null,"showDeleted":false,"singleEvents":true,"maxResults":250},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1},"exturl":false,"use_motion":true,"fancybox":true,"pace":false,"pace_theme":"pace-theme-minimal","canvas_nest":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false,"canvas_ribbon":false,"vendors":{"_internal":"lib","jquery":null,"fancybox":null,"fancybox_css":null,"fastclick":null,"lazyload":null,"velocity":null,"velocity_ui":null,"ua_parser":null,"fontawesome":null,"algolia_instant_js":null,"algolia_instant_css":null,"pace":null,"pace_css":null,"canvas_nest":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_ribbon":null,"han":null},"css":"css","js":"js","images":"images","version":"5.1.1"}}},"excerpt":"<h2 id=\"什么是对象\"><a href=\"#什么是对象\" class=\"headerlink\" title=\"什么是对象\"></a>什么是对象</h2><p>JavaScript中的所有事物都是对象，如：字符串、数值、数组、函数等，每个对象带有<strong>属性</strong>和<strong>方法</strong>。<br>","more":"</p>\n<ul>\n<li><strong>对象的属性</strong><ul>\n<li>定义：反映该对象某些特定的性质的。如：字符串的长度、图像的长宽等</li>\n<li>访问对象属性：<code>objectName.propertyName</code>  </li>\n</ul>\n</li>\n<li><strong>对象的方法</strong><ul>\n<li>定义：能够在对象上执行的动作。例如，表单的“提交”(Submit)，时间的“获取”(getYear)等</li>\n<li>访问对象的方法：<code>objectName.methodName()</code></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Date对象\"><a href=\"#Date对象\" class=\"headerlink\" title=\"Date对象\"></a>Date对象</h2><p>Date对象可以储存任意一个日期，并且可以精确到毫秒数（1/1000 秒）。  </p>\n<ul>\n<li>定义一个时间对象：<code>var myDate=new Date();</code>  </li>\n<li>Date对象中处理时间和日期的常用方法：  </li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>方法名称</th>\n<th>功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>get/setDate()</code></td>\n<td>返回/设置日期(1 ~ 31)</td>\n</tr>\n<tr>\n<td><code>get/setFullYear()</code></td>\n<td>返回/设置年份，用四位数表示</td>\n</tr>\n<tr>\n<td><code>get/setYear()</code></td>\n<td>返回/设置年份</td>\n</tr>\n<tr>\n<td><code>get/setMonth()</code></td>\n<td>返回/设置月份(0 ~ 11)</td>\n</tr>\n<tr>\n<td><code>get/setDay()</code></td>\n<td>返回/设置星期(0 ~ 6)</td>\n</tr>\n<tr>\n<td><code>get/setHours()</code></td>\n<td>返回/设置小时(0 ~ 23)</td>\n</tr>\n<tr>\n<td><code>get/setMinutes()</code></td>\n<td>返回/设置分钟(0 ~ 59)</td>\n</tr>\n<tr>\n<td><code>get/setSeconds()</code></td>\n<td>返回/设置秒钟(0 ~ 59)</td>\n</tr>\n<tr>\n<td><code>get/setMilliSeconds()</code></td>\n<td>返回/设置毫秒(0 ~ 999)</td>\n</tr>\n<tr>\n<td><code>get/setTime()</code></td>\n<td>返回/设置时间(毫秒)</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"String字符串对象\"><a href=\"#String字符串对象\" class=\"headerlink\" title=\"String字符串对象\"></a>String字符串对象</h2><ul>\n<li><strong>Array数组对象的部分方法</strong>  <ul>\n<li><strong>返回指定位置的字符</strong><br>  <code>stringObject.charAt(index)</code><br>  <code>index</code>：<em>必需</em>。表示字符串中某个位置的数字(字符在字符串中的下标)。  </li>\n<li><strong>返回指定的字符串首次出现的位置</strong><br>  <code>stringObject.indexOf(substring, startpos)</code><br>  <code>substring</code>：<em>必需</em>。需要检索的字符串值。<br>  <code>startpos</code>：<em>可选</em>。整数，表示字符开始检索的位置，取值范围为<code>0</code>到<code>stringObject.length-1</code>。如省略此参数，则从被检索字符串首字符开始检索。  </li>\n<li><strong>字符串分割</strong><br>  <code>stringObject.split(separator,limit)</code><br>  <code>separator</code>：<em>必需</em>。表示从该参数指定的位置分割<code>stringObject</code>。<br>  <code>limit</code>：<em>可选</em>。表示分割的次数，如设置该参数，返回的子串数量不会多于该参数。  </li>\n<li><strong>提取字符串</strong><br>  <code>stringObject.substring(starPos,stopPos)</code><br>  <code>starPos</code>：<em>必需</em>。一个非负的整数，表示开始位置。<br>  <code>stopPos</code>：<em>可选</em>。一个非负的整数，表示结束位置，如省略该参数，返回的子串一直到<code>stringObject</code>的结尾。  </li>\n<li><strong>提取指定书目字符串</strong><br>  <code>stringObject.substr(startPos,length)</code><br>  <code>starPos</code>：<em>必需</em>。一个非负的整数，表示开始位置。<br>  <code>length</code>：<em>可选</em>。一个非负的整数，表示提取字符串的长度，如省略该参数，返回的子串一直到<code>stringObject</code>的结尾。  </li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Math对象\"><a href=\"#Math对象\" class=\"headerlink\" title=\"Math对象\"></a>Math对象</h2><p>Math对象，提供对数据的数学计算。Math 对象是一个固有的对象，无需创建它，直接把 Math 作为对象使用就可以调用其所有属性和方法。这是它与Date,String对象的区别。  </p>\n<ul>\n<li><strong>Math对象的部分属性</strong></li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>Math.E</code></td>\n<td>返回算术常量e，即自然对数的底数(约2.718)</td>\n</tr>\n<tr>\n<td><code>Math.PI</code></td>\n<td>返回圆周率(约3.14159)</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li><strong>Math对象的部分方法</strong>  <ul>\n<li><strong>向上取整</strong><br><code>Math.ceil(x)</code><br><code>x</code>：<em>必需</em>。必须是一个数值。  </li>\n<li><strong>向下取整</strong><br><code>Math.floor(x)</code><br><code>x</code>：<em>必需</em>。必须是一个数值。  </li>\n<li><strong>四舍五入</strong><br><code>Math.round(x)</code><br><code>x</code>：<em>必需</em>。必须是一个数值。  </li>\n<li><strong>随机数</strong><br><code>Math.random();</code><br>返回一个大于或等于0但小于1的符号为正的数字值。  </li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Array数组对象\"><a href=\"#Array数组对象\" class=\"headerlink\" title=\"Array数组对象\"></a>Array数组对象</h2><p>数组对象是一个对象的集合，里边的对象可以是不同类型的。数组的每一个成员对象都有一个“下标”，用来表示它在数组中的位置，是从0开始的。  </p>\n<ul>\n<li><strong>Array数组对象的部分方法</strong>  <ul>\n<li><strong>数组连接</strong><br><code>arrayObject.concat(array1,array2,...,arrayN)</code><br>该方法用于连接两个或多个数组。此方法返回一个新数组，不改变原来的数组。  </li>\n<li><strong>指定分隔符连接数组元素</strong><br><code>arrayObject.join(separator)</code><br><code>separator</code>：<em>可选</em>。表示要使用的分隔符，如果省略该参数，则使用逗号作为分隔符。  </li>\n<li><strong>颠倒数组元素顺序</strong><br><code>arrayObject.reverse()</code><br>该方法会改变原来的数组，而不会创建新的数组。  </li>\n<li><strong>选定元素</strong><br><code>arrayObject.slice(start,end)</code><br><code>start</code>：<em>必需</em>。规定从何处开始选取，如果是负数，那么它规定的是从数组尾部开始算起的元素。-1指最后一个元素，-2指倒数第二个元素。<br><code>end</code>：<em>可选</em>。规定从何处结束选取，如果这个参数是负数，那么它规定的是从数组尾部开始算起的元素。    </li>\n<li><strong>数组排序</strong><br><code>arrayObject.sort(方法函数)</code><br><code>方法函数</code>：<em>可选</em>。规定排序顺序，必须是函数。如果不指定&lt;方法函数&gt;，则按unicode码顺序排列。    </li>\n</ul>\n</li>\n</ul>"},{"title":"将代码同时push到两个不同的远程仓库","date":"2017-03-03T01:47:06.000Z","_content":"\n## 为何要将代码push到两个仓库\n\n我自己的博客，本来是放在github托管的。但是大家都知道，github在国内访问速度不好，有时候甚至无法访问。因此我就想同时在coding上也放一份，这样就可以实现在国内正常流畅地访问了。\n\n<!-- more -->\n\n## 方法\n\n简单地说，就是在git的config文件中remote下面增加一个远程仓库地址。添加方式有两种：\n\n1. 直接修改`.git`文件夹下面的config文件，找到`[remote 'origin']`，在下面增加一行，输入想要增加的远程仓库的地址。示例效果如下：\n\n```\n[remote \"origin\"]\n\n    url = git@github.com:ricosmall/ricosmall.github.io.git\n    url = git@git.coding.net:ricosmall/ricosmall.coding.me.git\n```\n\n2. 用命令行的方式添加：\n\n默认无远程仓库地址设置的情况下，添加第一个仓库地址：\n\n```\ngit remote add origin git@github.com:ricosmall/ricosmall.github.io.git\n```\n\n再添加第二个仓库地址：\n\n```\ngit remote add origin git@git.coding.net:ricosmall/ricosmall.coding.me.git\n```\n\n这样就算完成了。\n\n之后你再push代码的时候，和往常一样：\n\n```\ngit push origin master\n```\n就可以了。\n\n## 总结\n\n之前一直没有试过去找方法，采取的方式就是push到一个仓库之后，删掉remote.url。然后再重新添加另一个仓库地址，再push一次。真是麻烦到没朋友，还容易导致两边的代码不同步。有了这个方法，一切都解决了。你试试吧。\n","source":"_posts/2017-03-03-将代码同时push到两个不同的远程仓库.md","raw":"---\ntitle: 将代码同时push到两个不同的远程仓库\ndate: 2017-03-03 09:47:06\ntags:\n- git\ncategories:\n- 教程\n---\n\n## 为何要将代码push到两个仓库\n\n我自己的博客，本来是放在github托管的。但是大家都知道，github在国内访问速度不好，有时候甚至无法访问。因此我就想同时在coding上也放一份，这样就可以实现在国内正常流畅地访问了。\n\n<!-- more -->\n\n## 方法\n\n简单地说，就是在git的config文件中remote下面增加一个远程仓库地址。添加方式有两种：\n\n1. 直接修改`.git`文件夹下面的config文件，找到`[remote 'origin']`，在下面增加一行，输入想要增加的远程仓库的地址。示例效果如下：\n\n```\n[remote \"origin\"]\n\n    url = git@github.com:ricosmall/ricosmall.github.io.git\n    url = git@git.coding.net:ricosmall/ricosmall.coding.me.git\n```\n\n2. 用命令行的方式添加：\n\n默认无远程仓库地址设置的情况下，添加第一个仓库地址：\n\n```\ngit remote add origin git@github.com:ricosmall/ricosmall.github.io.git\n```\n\n再添加第二个仓库地址：\n\n```\ngit remote add origin git@git.coding.net:ricosmall/ricosmall.coding.me.git\n```\n\n这样就算完成了。\n\n之后你再push代码的时候，和往常一样：\n\n```\ngit push origin master\n```\n就可以了。\n\n## 总结\n\n之前一直没有试过去找方法，采取的方式就是push到一个仓库之后，删掉remote.url。然后再重新添加另一个仓库地址，再push一次。真是麻烦到没朋友，还容易导致两边的代码不同步。有了这个方法，一切都解决了。你试试吧。\n","slug":"将代码同时push到两个不同的远程仓库","published":1,"updated":"2018-03-27T13:52:33.768Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjskilak90007g9zbkx8l80cq","content":"<h2 id=\"为何要将代码push到两个仓库\"><a href=\"#为何要将代码push到两个仓库\" class=\"headerlink\" title=\"为何要将代码push到两个仓库\"></a>为何要将代码push到两个仓库</h2><p>我自己的博客，本来是放在github托管的。但是大家都知道，github在国内访问速度不好，有时候甚至无法访问。因此我就想同时在coding上也放一份，这样就可以实现在国内正常流畅地访问了。</p>\n<a id=\"more\"></a>\n<h2 id=\"方法\"><a href=\"#方法\" class=\"headerlink\" title=\"方法\"></a>方法</h2><p>简单地说，就是在git的config文件中remote下面增加一个远程仓库地址。添加方式有两种：</p>\n<ol>\n<li>直接修改<code>.git</code>文件夹下面的config文件，找到<code>[remote &#39;origin&#39;]</code>，在下面增加一行，输入想要增加的远程仓库的地址。示例效果如下：</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[remote &quot;origin&quot;]</span><br><span class=\"line\"></span><br><span class=\"line\">    url = git@github.com:ricosmall/ricosmall.github.io.git</span><br><span class=\"line\">    url = git@git.coding.net:ricosmall/ricosmall.coding.me.git</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>用命令行的方式添加：</li>\n</ol>\n<p>默认无远程仓库地址设置的情况下，添加第一个仓库地址：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote add origin git@github.com:ricosmall/ricosmall.github.io.git</span><br></pre></td></tr></table></figure>\n<p>再添加第二个仓库地址：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote add origin git@git.coding.net:ricosmall/ricosmall.coding.me.git</span><br></pre></td></tr></table></figure>\n<p>这样就算完成了。</p>\n<p>之后你再push代码的时候，和往常一样：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push origin master</span><br></pre></td></tr></table></figure>\n<p>就可以了。</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>之前一直没有试过去找方法，采取的方式就是push到一个仓库之后，删掉remote.url。然后再重新添加另一个仓库地址，再push一次。真是麻烦到没朋友，还容易导致两边的代码不同步。有了这个方法，一切都解决了。你试试吧。</p>\n","site":{"data":{"next":{"favicon":"/favicon.ico","keywords":"Hexo, NexT","rss":null,"since":2016,"authoricon":"heart","copyright":true,"canonical":true,"seo":true,"index_with_subtitle":false,"menu":{"home":"/","categories":"/categories/","archives":"/archives/","tags":"/tags/","about":"/about/"},"menu_icons":{"enable":true,"home":"home","about":"user","categories":"th","schedule":"calendar","tags":"tags","archives":"archive","sitemap":"sitemap","commonweal":"heartbeat"},"scheme":"Mist","social":{"Github":"https://github.com/ricosmall"},"social_icons":{"enable":true,"GitHub":"github","Twitter":"twitter","Weibo":"weibo"},"avatar":"/uploads/avatar.png","toc":{"enable":true,"number":true,"wrap":false},"sidebar":{"position":"left","display":"post","offset":12,"offset_float":0,"b2t":false,"scrollpercent":false,"onmobile":false},"scroll_to_more":true,"save_scroll":false,"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"post_meta":{"item_text":true,"created_at":true,"updated_at":false,"categories":true},"post_wordcount":{"item_text":true,"wordcount":false,"min2read":false,"separated_meta":true},"post_copyright":{"enable":false,"license":"CC BY-NC-SA 3.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/3.0/"},"custom_logo":{"enabled":false,"image":null},"highlight_theme":"night bright","font":{"enable":true,"host":null,"global":{"external":true,"family":"Lato"},"headings":{"external":true,"family":null},"posts":{"external":true,"family":null},"logo":{"external":true,"family":null,"size":null},"codes":{"external":true,"family":"Menlo, Monospace","size":null}},"mathjax":{"enable":true,"per_page":false,"cdn":"//cdn.bootcss.com/mathjax/2.7.1/latest.js?config=TeX-AMS-MML_HTMLorMML"},"han":false,"disqus":{"enable":false,"shortname":"ricosmall","count":false},"changyan":{"enable":false,"appid":null,"appkey":null},"duoshuo_info":{"ua_enable":true,"admin_enable":false,"user_id":0},"facebook_sdk":{"enable":false,"app_id":null,"fb_admin":null,"like_button":null,"webmaster":null},"facebook_comments_plugin":{"enable":false,"num_of_posts":10,"width":"100%","scheme":"light"},"vkontakte_api":{"enable":false,"app_id":null,"like":true,"comments":true,"num_of_posts":10},"rating":{"enable":false,"id":null,"color":"fc6423"},"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null},"busuanzi_count":{"enable":true,"site_uv":true,"site_uv_header":"<i class=\"fa fa-user\"></i>访问人数","site_uv_footer":null,"site_pv":true,"site_pv_header":"<i class=\"fa fa-eye\"></i>总访问量","site_pv_footer":"次","page_pv":true,"page_pv_header":"<i class=\"fa fa-file-o\"></i>浏览","page_pv_footer":"次"},"baidu_push":false,"calendar":{"enable":false,"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"timeZone":null,"showDeleted":false,"singleEvents":true,"maxResults":250},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1},"exturl":false,"use_motion":true,"fancybox":true,"pace":false,"pace_theme":"pace-theme-minimal","canvas_nest":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false,"canvas_ribbon":false,"vendors":{"_internal":"lib","jquery":null,"fancybox":null,"fancybox_css":null,"fastclick":null,"lazyload":null,"velocity":null,"velocity_ui":null,"ua_parser":null,"fontawesome":null,"algolia_instant_js":null,"algolia_instant_css":null,"pace":null,"pace_css":null,"canvas_nest":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_ribbon":null,"han":null},"css":"css","js":"js","images":"images","version":"5.1.1"}}},"excerpt":"<h2 id=\"为何要将代码push到两个仓库\"><a href=\"#为何要将代码push到两个仓库\" class=\"headerlink\" title=\"为何要将代码push到两个仓库\"></a>为何要将代码push到两个仓库</h2><p>我自己的博客，本来是放在github托管的。但是大家都知道，github在国内访问速度不好，有时候甚至无法访问。因此我就想同时在coding上也放一份，这样就可以实现在国内正常流畅地访问了。</p>","more":"<h2 id=\"方法\"><a href=\"#方法\" class=\"headerlink\" title=\"方法\"></a>方法</h2><p>简单地说，就是在git的config文件中remote下面增加一个远程仓库地址。添加方式有两种：</p>\n<ol>\n<li>直接修改<code>.git</code>文件夹下面的config文件，找到<code>[remote &#39;origin&#39;]</code>，在下面增加一行，输入想要增加的远程仓库的地址。示例效果如下：</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[remote &quot;origin&quot;]</span><br><span class=\"line\"></span><br><span class=\"line\">    url = git@github.com:ricosmall/ricosmall.github.io.git</span><br><span class=\"line\">    url = git@git.coding.net:ricosmall/ricosmall.coding.me.git</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>用命令行的方式添加：</li>\n</ol>\n<p>默认无远程仓库地址设置的情况下，添加第一个仓库地址：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote add origin git@github.com:ricosmall/ricosmall.github.io.git</span><br></pre></td></tr></table></figure>\n<p>再添加第二个仓库地址：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote add origin git@git.coding.net:ricosmall/ricosmall.coding.me.git</span><br></pre></td></tr></table></figure>\n<p>这样就算完成了。</p>\n<p>之后你再push代码的时候，和往常一样：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push origin master</span><br></pre></td></tr></table></figure>\n<p>就可以了。</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>之前一直没有试过去找方法，采取的方式就是push到一个仓库之后，删掉remote.url。然后再重新添加另一个仓库地址，再push一次。真是麻烦到没朋友，还容易导致两边的代码不同步。有了这个方法，一切都解决了。你试试吧。</p>"},{"title":"前端开发聚合、分享、期刊订阅类网站","date":"2017-03-16T08:22:10.000Z","_content":"\n\n> 本文转载自[WEB前端开发](http://www.css88.com/archives/7136)\n\n### [JavaScript Weekly](http://javascriptweekly.com/)\n\n一个总结JavaScript新闻和文章的免费电子邮件周刊。\n\n<!-- more -->\n\n### [掘金](https://juejin.im/)\n\n一个只有高手分享的社区，无论是程序员、设计师还是产品经理，都可以在这里找到相关领域的高质量内容。\n\n### [CSS Weekly](http://css-weekly.com/)\n\n一个概述最新的CSS文章、教程、工具和试验的免费电子周刊。\n\n### [奇舞周刊](https://weekly.75team.com/)\n\n360前端，奇舞团博客整理的前端周刊，内容比较丰富，涵盖最新中文前端技术原创和翻译文章以及最新资讯。\n\n### [Echo JS](http://www.echojs.com/)\n\nEcho JS 是一个社区驱动的新闻网站，专注于JavaScript开发，HTML5和前端新闻。\n\n### [FEX 技术周刊](http://fex.baidu.com/weekly/)\n\n百度FEX整理的技术周刊，同时推荐中英文文章，内容很多很全。\n\n### [Web Designer News](http://www.webdesignernews.com/)\n\n是为WEB开发者和设计师提供一个发现最新和最重要的WEB相关消息的地方，用户贡献的内容需要网站管理员批准才能发布。\n\n### [众成翻译每周精选](http://zcfy.baomitu.com/)\n\n国外优秀文章的翻译。\n\n### [开发者头条](https://toutiao.io/c/fe/)\n\n开发者头条内容很多，部分是机器人抓的，所以质量不好说。\n\n### [Front-end Front](http://frontendfront.com/)\n\n许多前端文章feed。\n\n### [FrontEnd Focus](http://frontendfocus.co/)\n\n每周推送一次的最佳前端新闻、文章和教程。\n\n### [DDFE技术周刊](https://zhuanlan.zhihu.com/ddfe-weekly/)\n\n滴滴出行公共前端团队。\n\n### [JSK Weekly](https://javascriptkicks.com/)\n\n做你邮箱中最好的JavaScript时事资讯。\n","source":"_posts/2017-03-16-前端开发聚合、分享、期刊订阅类网站.md","raw":"---\ntitle: 前端开发聚合、分享、期刊订阅类网站\ndate: 2017-03-16 16:22:10\ntags:\n- JavaScript\n- 前端开发\ncategories:\n- 转载\n---\n\n\n> 本文转载自[WEB前端开发](http://www.css88.com/archives/7136)\n\n### [JavaScript Weekly](http://javascriptweekly.com/)\n\n一个总结JavaScript新闻和文章的免费电子邮件周刊。\n\n<!-- more -->\n\n### [掘金](https://juejin.im/)\n\n一个只有高手分享的社区，无论是程序员、设计师还是产品经理，都可以在这里找到相关领域的高质量内容。\n\n### [CSS Weekly](http://css-weekly.com/)\n\n一个概述最新的CSS文章、教程、工具和试验的免费电子周刊。\n\n### [奇舞周刊](https://weekly.75team.com/)\n\n360前端，奇舞团博客整理的前端周刊，内容比较丰富，涵盖最新中文前端技术原创和翻译文章以及最新资讯。\n\n### [Echo JS](http://www.echojs.com/)\n\nEcho JS 是一个社区驱动的新闻网站，专注于JavaScript开发，HTML5和前端新闻。\n\n### [FEX 技术周刊](http://fex.baidu.com/weekly/)\n\n百度FEX整理的技术周刊，同时推荐中英文文章，内容很多很全。\n\n### [Web Designer News](http://www.webdesignernews.com/)\n\n是为WEB开发者和设计师提供一个发现最新和最重要的WEB相关消息的地方，用户贡献的内容需要网站管理员批准才能发布。\n\n### [众成翻译每周精选](http://zcfy.baomitu.com/)\n\n国外优秀文章的翻译。\n\n### [开发者头条](https://toutiao.io/c/fe/)\n\n开发者头条内容很多，部分是机器人抓的，所以质量不好说。\n\n### [Front-end Front](http://frontendfront.com/)\n\n许多前端文章feed。\n\n### [FrontEnd Focus](http://frontendfocus.co/)\n\n每周推送一次的最佳前端新闻、文章和教程。\n\n### [DDFE技术周刊](https://zhuanlan.zhihu.com/ddfe-weekly/)\n\n滴滴出行公共前端团队。\n\n### [JSK Weekly](https://javascriptkicks.com/)\n\n做你邮箱中最好的JavaScript时事资讯。\n","slug":"前端开发聚合、分享、期刊订阅类网站","published":1,"updated":"2018-03-27T13:52:33.768Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjskilaka0008g9zbct7v62v5","content":"<blockquote>\n<p>本文转载自<a href=\"http://www.css88.com/archives/7136\" target=\"_blank\" rel=\"noopener\">WEB前端开发</a></p>\n</blockquote>\n<h3 id=\"JavaScript-Weekly\"><a href=\"#JavaScript-Weekly\" class=\"headerlink\" title=\"JavaScript Weekly\"></a><a href=\"http://javascriptweekly.com/\" target=\"_blank\" rel=\"noopener\">JavaScript Weekly</a></h3><p>一个总结JavaScript新闻和文章的免费电子邮件周刊。</p>\n<a id=\"more\"></a>\n<h3 id=\"掘金\"><a href=\"#掘金\" class=\"headerlink\" title=\"掘金\"></a><a href=\"https://juejin.im/\" target=\"_blank\" rel=\"noopener\">掘金</a></h3><p>一个只有高手分享的社区，无论是程序员、设计师还是产品经理，都可以在这里找到相关领域的高质量内容。</p>\n<h3 id=\"CSS-Weekly\"><a href=\"#CSS-Weekly\" class=\"headerlink\" title=\"CSS Weekly\"></a><a href=\"http://css-weekly.com/\" target=\"_blank\" rel=\"noopener\">CSS Weekly</a></h3><p>一个概述最新的CSS文章、教程、工具和试验的免费电子周刊。</p>\n<h3 id=\"奇舞周刊\"><a href=\"#奇舞周刊\" class=\"headerlink\" title=\"奇舞周刊\"></a><a href=\"https://weekly.75team.com/\" target=\"_blank\" rel=\"noopener\">奇舞周刊</a></h3><p>360前端，奇舞团博客整理的前端周刊，内容比较丰富，涵盖最新中文前端技术原创和翻译文章以及最新资讯。</p>\n<h3 id=\"Echo-JS\"><a href=\"#Echo-JS\" class=\"headerlink\" title=\"Echo JS\"></a><a href=\"http://www.echojs.com/\" target=\"_blank\" rel=\"noopener\">Echo JS</a></h3><p>Echo JS 是一个社区驱动的新闻网站，专注于JavaScript开发，HTML5和前端新闻。</p>\n<h3 id=\"FEX-技术周刊\"><a href=\"#FEX-技术周刊\" class=\"headerlink\" title=\"FEX 技术周刊\"></a><a href=\"http://fex.baidu.com/weekly/\" target=\"_blank\" rel=\"noopener\">FEX 技术周刊</a></h3><p>百度FEX整理的技术周刊，同时推荐中英文文章，内容很多很全。</p>\n<h3 id=\"Web-Designer-News\"><a href=\"#Web-Designer-News\" class=\"headerlink\" title=\"Web Designer News\"></a><a href=\"http://www.webdesignernews.com/\" target=\"_blank\" rel=\"noopener\">Web Designer News</a></h3><p>是为WEB开发者和设计师提供一个发现最新和最重要的WEB相关消息的地方，用户贡献的内容需要网站管理员批准才能发布。</p>\n<h3 id=\"众成翻译每周精选\"><a href=\"#众成翻译每周精选\" class=\"headerlink\" title=\"众成翻译每周精选\"></a><a href=\"http://zcfy.baomitu.com/\" target=\"_blank\" rel=\"noopener\">众成翻译每周精选</a></h3><p>国外优秀文章的翻译。</p>\n<h3 id=\"开发者头条\"><a href=\"#开发者头条\" class=\"headerlink\" title=\"开发者头条\"></a><a href=\"https://toutiao.io/c/fe/\" target=\"_blank\" rel=\"noopener\">开发者头条</a></h3><p>开发者头条内容很多，部分是机器人抓的，所以质量不好说。</p>\n<h3 id=\"Front-end-Front\"><a href=\"#Front-end-Front\" class=\"headerlink\" title=\"Front-end Front\"></a><a href=\"http://frontendfront.com/\" target=\"_blank\" rel=\"noopener\">Front-end Front</a></h3><p>许多前端文章feed。</p>\n<h3 id=\"FrontEnd-Focus\"><a href=\"#FrontEnd-Focus\" class=\"headerlink\" title=\"FrontEnd Focus\"></a><a href=\"http://frontendfocus.co/\" target=\"_blank\" rel=\"noopener\">FrontEnd Focus</a></h3><p>每周推送一次的最佳前端新闻、文章和教程。</p>\n<h3 id=\"DDFE技术周刊\"><a href=\"#DDFE技术周刊\" class=\"headerlink\" title=\"DDFE技术周刊\"></a><a href=\"https://zhuanlan.zhihu.com/ddfe-weekly/\" target=\"_blank\" rel=\"noopener\">DDFE技术周刊</a></h3><p>滴滴出行公共前端团队。</p>\n<h3 id=\"JSK-Weekly\"><a href=\"#JSK-Weekly\" class=\"headerlink\" title=\"JSK Weekly\"></a><a href=\"https://javascriptkicks.com/\" target=\"_blank\" rel=\"noopener\">JSK Weekly</a></h3><p>做你邮箱中最好的JavaScript时事资讯。</p>\n","site":{"data":{"next":{"favicon":"/favicon.ico","keywords":"Hexo, NexT","rss":null,"since":2016,"authoricon":"heart","copyright":true,"canonical":true,"seo":true,"index_with_subtitle":false,"menu":{"home":"/","categories":"/categories/","archives":"/archives/","tags":"/tags/","about":"/about/"},"menu_icons":{"enable":true,"home":"home","about":"user","categories":"th","schedule":"calendar","tags":"tags","archives":"archive","sitemap":"sitemap","commonweal":"heartbeat"},"scheme":"Mist","social":{"Github":"https://github.com/ricosmall"},"social_icons":{"enable":true,"GitHub":"github","Twitter":"twitter","Weibo":"weibo"},"avatar":"/uploads/avatar.png","toc":{"enable":true,"number":true,"wrap":false},"sidebar":{"position":"left","display":"post","offset":12,"offset_float":0,"b2t":false,"scrollpercent":false,"onmobile":false},"scroll_to_more":true,"save_scroll":false,"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"post_meta":{"item_text":true,"created_at":true,"updated_at":false,"categories":true},"post_wordcount":{"item_text":true,"wordcount":false,"min2read":false,"separated_meta":true},"post_copyright":{"enable":false,"license":"CC BY-NC-SA 3.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/3.0/"},"custom_logo":{"enabled":false,"image":null},"highlight_theme":"night bright","font":{"enable":true,"host":null,"global":{"external":true,"family":"Lato"},"headings":{"external":true,"family":null},"posts":{"external":true,"family":null},"logo":{"external":true,"family":null,"size":null},"codes":{"external":true,"family":"Menlo, Monospace","size":null}},"mathjax":{"enable":true,"per_page":false,"cdn":"//cdn.bootcss.com/mathjax/2.7.1/latest.js?config=TeX-AMS-MML_HTMLorMML"},"han":false,"disqus":{"enable":false,"shortname":"ricosmall","count":false},"changyan":{"enable":false,"appid":null,"appkey":null},"duoshuo_info":{"ua_enable":true,"admin_enable":false,"user_id":0},"facebook_sdk":{"enable":false,"app_id":null,"fb_admin":null,"like_button":null,"webmaster":null},"facebook_comments_plugin":{"enable":false,"num_of_posts":10,"width":"100%","scheme":"light"},"vkontakte_api":{"enable":false,"app_id":null,"like":true,"comments":true,"num_of_posts":10},"rating":{"enable":false,"id":null,"color":"fc6423"},"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null},"busuanzi_count":{"enable":true,"site_uv":true,"site_uv_header":"<i class=\"fa fa-user\"></i>访问人数","site_uv_footer":null,"site_pv":true,"site_pv_header":"<i class=\"fa fa-eye\"></i>总访问量","site_pv_footer":"次","page_pv":true,"page_pv_header":"<i class=\"fa fa-file-o\"></i>浏览","page_pv_footer":"次"},"baidu_push":false,"calendar":{"enable":false,"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"timeZone":null,"showDeleted":false,"singleEvents":true,"maxResults":250},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1},"exturl":false,"use_motion":true,"fancybox":true,"pace":false,"pace_theme":"pace-theme-minimal","canvas_nest":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false,"canvas_ribbon":false,"vendors":{"_internal":"lib","jquery":null,"fancybox":null,"fancybox_css":null,"fastclick":null,"lazyload":null,"velocity":null,"velocity_ui":null,"ua_parser":null,"fontawesome":null,"algolia_instant_js":null,"algolia_instant_css":null,"pace":null,"pace_css":null,"canvas_nest":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_ribbon":null,"han":null},"css":"css","js":"js","images":"images","version":"5.1.1"}}},"excerpt":"<blockquote>\n<p>本文转载自<a href=\"http://www.css88.com/archives/7136\" target=\"_blank\" rel=\"noopener\">WEB前端开发</a></p>\n</blockquote>\n<h3 id=\"JavaScript-Weekly\"><a href=\"#JavaScript-Weekly\" class=\"headerlink\" title=\"JavaScript Weekly\"></a><a href=\"http://javascriptweekly.com/\" target=\"_blank\" rel=\"noopener\">JavaScript Weekly</a></h3><p>一个总结JavaScript新闻和文章的免费电子邮件周刊。</p>","more":"<h3 id=\"掘金\"><a href=\"#掘金\" class=\"headerlink\" title=\"掘金\"></a><a href=\"https://juejin.im/\" target=\"_blank\" rel=\"noopener\">掘金</a></h3><p>一个只有高手分享的社区，无论是程序员、设计师还是产品经理，都可以在这里找到相关领域的高质量内容。</p>\n<h3 id=\"CSS-Weekly\"><a href=\"#CSS-Weekly\" class=\"headerlink\" title=\"CSS Weekly\"></a><a href=\"http://css-weekly.com/\" target=\"_blank\" rel=\"noopener\">CSS Weekly</a></h3><p>一个概述最新的CSS文章、教程、工具和试验的免费电子周刊。</p>\n<h3 id=\"奇舞周刊\"><a href=\"#奇舞周刊\" class=\"headerlink\" title=\"奇舞周刊\"></a><a href=\"https://weekly.75team.com/\" target=\"_blank\" rel=\"noopener\">奇舞周刊</a></h3><p>360前端，奇舞团博客整理的前端周刊，内容比较丰富，涵盖最新中文前端技术原创和翻译文章以及最新资讯。</p>\n<h3 id=\"Echo-JS\"><a href=\"#Echo-JS\" class=\"headerlink\" title=\"Echo JS\"></a><a href=\"http://www.echojs.com/\" target=\"_blank\" rel=\"noopener\">Echo JS</a></h3><p>Echo JS 是一个社区驱动的新闻网站，专注于JavaScript开发，HTML5和前端新闻。</p>\n<h3 id=\"FEX-技术周刊\"><a href=\"#FEX-技术周刊\" class=\"headerlink\" title=\"FEX 技术周刊\"></a><a href=\"http://fex.baidu.com/weekly/\" target=\"_blank\" rel=\"noopener\">FEX 技术周刊</a></h3><p>百度FEX整理的技术周刊，同时推荐中英文文章，内容很多很全。</p>\n<h3 id=\"Web-Designer-News\"><a href=\"#Web-Designer-News\" class=\"headerlink\" title=\"Web Designer News\"></a><a href=\"http://www.webdesignernews.com/\" target=\"_blank\" rel=\"noopener\">Web Designer News</a></h3><p>是为WEB开发者和设计师提供一个发现最新和最重要的WEB相关消息的地方，用户贡献的内容需要网站管理员批准才能发布。</p>\n<h3 id=\"众成翻译每周精选\"><a href=\"#众成翻译每周精选\" class=\"headerlink\" title=\"众成翻译每周精选\"></a><a href=\"http://zcfy.baomitu.com/\" target=\"_blank\" rel=\"noopener\">众成翻译每周精选</a></h3><p>国外优秀文章的翻译。</p>\n<h3 id=\"开发者头条\"><a href=\"#开发者头条\" class=\"headerlink\" title=\"开发者头条\"></a><a href=\"https://toutiao.io/c/fe/\" target=\"_blank\" rel=\"noopener\">开发者头条</a></h3><p>开发者头条内容很多，部分是机器人抓的，所以质量不好说。</p>\n<h3 id=\"Front-end-Front\"><a href=\"#Front-end-Front\" class=\"headerlink\" title=\"Front-end Front\"></a><a href=\"http://frontendfront.com/\" target=\"_blank\" rel=\"noopener\">Front-end Front</a></h3><p>许多前端文章feed。</p>\n<h3 id=\"FrontEnd-Focus\"><a href=\"#FrontEnd-Focus\" class=\"headerlink\" title=\"FrontEnd Focus\"></a><a href=\"http://frontendfocus.co/\" target=\"_blank\" rel=\"noopener\">FrontEnd Focus</a></h3><p>每周推送一次的最佳前端新闻、文章和教程。</p>\n<h3 id=\"DDFE技术周刊\"><a href=\"#DDFE技术周刊\" class=\"headerlink\" title=\"DDFE技术周刊\"></a><a href=\"https://zhuanlan.zhihu.com/ddfe-weekly/\" target=\"_blank\" rel=\"noopener\">DDFE技术周刊</a></h3><p>滴滴出行公共前端团队。</p>\n<h3 id=\"JSK-Weekly\"><a href=\"#JSK-Weekly\" class=\"headerlink\" title=\"JSK Weekly\"></a><a href=\"https://javascriptkicks.com/\" target=\"_blank\" rel=\"noopener\">JSK Weekly</a></h3><p>做你邮箱中最好的JavaScript时事资讯。</p>"},{"title":"JavaScript、jQuery、算法相关的面试题","date":"2017-03-21T13:17:28.000Z","_content":"\n这是一次电话面试加远程QQ监督机试。\n\n<!--more-->\n\n## 电话面试\n\n问题：\n\n一些我答对了的简单问题就不列出来了\n\n- 快速排序怎么实现的？算法复杂度？用的什么思想？是稳定排序还是非稳定排序？\n- jQuery中自定义事件的实现原理？(bind, trigger)\n- 如何处理过多的回调嵌套？Promise的实现原理？\n- 请描述三次握手和四次挥手。\n\n### 快速排序怎么实现的？算法复杂度？用的什么思想？是稳定排序还是非稳定排序？\n\n快速排序的的JavaScript实现如下：\n\n```javascript\nvar quickSort = (arr) => {\n\n    if (arr.length <= 1) return arr;\n\n    let pivotIndex = ~~(arr.length/2),\n        pivot = arr.splice(pivotIndex, 1)[0],\n        left = [],\n        right = [];\n\n    for (let i = 0; i < arr.length; i++) {\n\n        if (arr[i] < pivot) {\n            left.push(arr[i]);\n        } else {\n            right.push(arr[i]);\n        }\n\n    }\n\n    return quickSort(left).concat([pivot], quickSort(right));\n};\n\n```\n\n快速排序的时间复杂度平均为`O(n*log(n))`，最差的情况为`O(n^2)`。采用的是分治的思想。是非稳定排序。\n\n\n### jQuery中自定义事件的实现原理？(bind, trigger)\n\n\n## 机试\n\n问题：\n\n- 写一个函数，实现大整数的加法。\n- 每次走1级或者2级阶梯，走到第n级阶梯的方式有多少种？请运用动态规划的思想。\n\n### 写一个函数，实现大整数的加法。\n\n我的答案：\n\n```javascript\nvar add = (a, b) => {\n\n    if (a.length === 0 || b.length === 0) return;\n\n    if (parseInt(a) < 0 || parseInt(b) < 0) return;\n\n    if (parseInt(a) === 0 && parseInt(b) === 0) return '0';\n\n    var string2Array = (str) => str.split('');\n\n    var arrA = string2Array(a),\n        arrB = string2Array(b);\n\n    var lenA = arrA.length,\n        lenB = arrB.length;\n\n    if (lenA > lenB) {\n\n        arrB = Array(lenA - lenB + 1).join('0').split('').concat(arrB);\n\n    } else if (lenA < lenB) {\n\n        arrA = Array(lenB - lenA + 1).join('0').split('').concat(arrA);\n\n    }\n\n    var tempArr = arrA.map((item, index) => parseInt(item) + parseInt(arrB[index]));\n\n    var i = tempArr.length - 1;\n\n    while (i >= 0) {\n\n        let currentVal = tempArr[i].toString();\n\n        if (currentVal >= 10) {\n\n            tempArr[i] = currentVal.substr(1);\n\n            if (i === 0) {\n\n                tempArr.unshift(currentVal.substr(0, 1));\n\n                break;\n            }\n\n            tempArr[i-1] = parseInt(tempArr[i - 1]) + parseInt(currentVal.substr(0, 1));\n\n        } else {\n\n            tempArr[i] = currentVal.toString();\n        }\n\n        i--;\n    }\n\n    var result = tempArr.join('').replace(/^0+/, '');\n\n    return result;\n};\n\n```\n\n这个答案还是我第二次才写出来的，但是提交之后明显被鄙视了。面试官的回答就是，你既然用了`parseInt`,为什么不直接来个\n\n```javascript\nvar add = (a, b) => parseInt(a) + parseInt(b);\n\n```\n\n就好了？\n\n我表示很无语，但又无法反驳。面试肯定挂了，但是我还是不放弃追求真理的决心，我去网上找最优解，结果真的吓到我了。请看代码：\n\n```javascript\nvar sumOfString = (a, b) => {\n    \n    let result = '',\n        tempVal = 0,\n        arra = a.split(''),\n        arrb = b.split('');\n\n    while (arra.length || arrb.length || tempVal) {\n\n        tempVal += ~~arra.pop() + ~~arrb.pop();\n\n        result = tempVal % 10 + result;\n\n        tempVal = tempVal > 9;\n    }\n\n    return result.replace(/^0+/, '');\n\n};\n\n```\n\n简单到不能忍。里面的技巧打死也想不到：\n\n- `arra.length || arrb.length || tempVal`: 巧妙的循环边界条件\n- `~~arra.pop()`: 把字符串转换成数字并取整\n- `tempVal = tempVal > 9`: 如果`=`右边的判断正确，则`tempVal`的值为`true`，下次循环进入第一步计算的时候又会转换成`1`，从而实现进位。同样可以解释为`false`的情况。\n\n\n### 每次走1级或者2级阶梯，走到第n级阶梯的方式有多少种？请运用动态规划的思想。\n\n实现方式如下：\n\n```javascript\nvar methodsToStepN(n) {\n\n    if (n <= 0) return 0;\n\n    if (n === 1) return 1;\n\n    if (n === 2) return 2;\n\n    return methodToStepN(n - 1) + methodToStepN(n - 2);\n\n};\n\n```\n\n","source":"_posts/2017-03-21-JavaScript、jQuery、算法相关的面试题.md","raw":"---\ntitle: JavaScript、jQuery、算法相关的面试题\ndate: 2017-03-21 21:17:28\ntags:\n- JavaScript\n- jQuery\n- Promise\n- Algorithm\ncategories:\n- 面试\n---\n\n这是一次电话面试加远程QQ监督机试。\n\n<!--more-->\n\n## 电话面试\n\n问题：\n\n一些我答对了的简单问题就不列出来了\n\n- 快速排序怎么实现的？算法复杂度？用的什么思想？是稳定排序还是非稳定排序？\n- jQuery中自定义事件的实现原理？(bind, trigger)\n- 如何处理过多的回调嵌套？Promise的实现原理？\n- 请描述三次握手和四次挥手。\n\n### 快速排序怎么实现的？算法复杂度？用的什么思想？是稳定排序还是非稳定排序？\n\n快速排序的的JavaScript实现如下：\n\n```javascript\nvar quickSort = (arr) => {\n\n    if (arr.length <= 1) return arr;\n\n    let pivotIndex = ~~(arr.length/2),\n        pivot = arr.splice(pivotIndex, 1)[0],\n        left = [],\n        right = [];\n\n    for (let i = 0; i < arr.length; i++) {\n\n        if (arr[i] < pivot) {\n            left.push(arr[i]);\n        } else {\n            right.push(arr[i]);\n        }\n\n    }\n\n    return quickSort(left).concat([pivot], quickSort(right));\n};\n\n```\n\n快速排序的时间复杂度平均为`O(n*log(n))`，最差的情况为`O(n^2)`。采用的是分治的思想。是非稳定排序。\n\n\n### jQuery中自定义事件的实现原理？(bind, trigger)\n\n\n## 机试\n\n问题：\n\n- 写一个函数，实现大整数的加法。\n- 每次走1级或者2级阶梯，走到第n级阶梯的方式有多少种？请运用动态规划的思想。\n\n### 写一个函数，实现大整数的加法。\n\n我的答案：\n\n```javascript\nvar add = (a, b) => {\n\n    if (a.length === 0 || b.length === 0) return;\n\n    if (parseInt(a) < 0 || parseInt(b) < 0) return;\n\n    if (parseInt(a) === 0 && parseInt(b) === 0) return '0';\n\n    var string2Array = (str) => str.split('');\n\n    var arrA = string2Array(a),\n        arrB = string2Array(b);\n\n    var lenA = arrA.length,\n        lenB = arrB.length;\n\n    if (lenA > lenB) {\n\n        arrB = Array(lenA - lenB + 1).join('0').split('').concat(arrB);\n\n    } else if (lenA < lenB) {\n\n        arrA = Array(lenB - lenA + 1).join('0').split('').concat(arrA);\n\n    }\n\n    var tempArr = arrA.map((item, index) => parseInt(item) + parseInt(arrB[index]));\n\n    var i = tempArr.length - 1;\n\n    while (i >= 0) {\n\n        let currentVal = tempArr[i].toString();\n\n        if (currentVal >= 10) {\n\n            tempArr[i] = currentVal.substr(1);\n\n            if (i === 0) {\n\n                tempArr.unshift(currentVal.substr(0, 1));\n\n                break;\n            }\n\n            tempArr[i-1] = parseInt(tempArr[i - 1]) + parseInt(currentVal.substr(0, 1));\n\n        } else {\n\n            tempArr[i] = currentVal.toString();\n        }\n\n        i--;\n    }\n\n    var result = tempArr.join('').replace(/^0+/, '');\n\n    return result;\n};\n\n```\n\n这个答案还是我第二次才写出来的，但是提交之后明显被鄙视了。面试官的回答就是，你既然用了`parseInt`,为什么不直接来个\n\n```javascript\nvar add = (a, b) => parseInt(a) + parseInt(b);\n\n```\n\n就好了？\n\n我表示很无语，但又无法反驳。面试肯定挂了，但是我还是不放弃追求真理的决心，我去网上找最优解，结果真的吓到我了。请看代码：\n\n```javascript\nvar sumOfString = (a, b) => {\n    \n    let result = '',\n        tempVal = 0,\n        arra = a.split(''),\n        arrb = b.split('');\n\n    while (arra.length || arrb.length || tempVal) {\n\n        tempVal += ~~arra.pop() + ~~arrb.pop();\n\n        result = tempVal % 10 + result;\n\n        tempVal = tempVal > 9;\n    }\n\n    return result.replace(/^0+/, '');\n\n};\n\n```\n\n简单到不能忍。里面的技巧打死也想不到：\n\n- `arra.length || arrb.length || tempVal`: 巧妙的循环边界条件\n- `~~arra.pop()`: 把字符串转换成数字并取整\n- `tempVal = tempVal > 9`: 如果`=`右边的判断正确，则`tempVal`的值为`true`，下次循环进入第一步计算的时候又会转换成`1`，从而实现进位。同样可以解释为`false`的情况。\n\n\n### 每次走1级或者2级阶梯，走到第n级阶梯的方式有多少种？请运用动态规划的思想。\n\n实现方式如下：\n\n```javascript\nvar methodsToStepN(n) {\n\n    if (n <= 0) return 0;\n\n    if (n === 1) return 1;\n\n    if (n === 2) return 2;\n\n    return methodToStepN(n - 1) + methodToStepN(n - 2);\n\n};\n\n```\n\n","slug":"JavaScript、jQuery、算法相关的面试题","published":1,"updated":"2018-03-27T13:52:33.768Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjskilakd000cg9zbbwzwxgwf","content":"<p>这是一次电话面试加远程QQ监督机试。</p>\n<a id=\"more\"></a>\n<h2 id=\"电话面试\"><a href=\"#电话面试\" class=\"headerlink\" title=\"电话面试\"></a>电话面试</h2><p>问题：</p>\n<p>一些我答对了的简单问题就不列出来了</p>\n<ul>\n<li>快速排序怎么实现的？算法复杂度？用的什么思想？是稳定排序还是非稳定排序？</li>\n<li>jQuery中自定义事件的实现原理？(bind, trigger)</li>\n<li>如何处理过多的回调嵌套？Promise的实现原理？</li>\n<li>请描述三次握手和四次挥手。</li>\n</ul>\n<h3 id=\"快速排序怎么实现的？算法复杂度？用的什么思想？是稳定排序还是非稳定排序？\"><a href=\"#快速排序怎么实现的？算法复杂度？用的什么思想？是稳定排序还是非稳定排序？\" class=\"headerlink\" title=\"快速排序怎么实现的？算法复杂度？用的什么思想？是稳定排序还是非稳定排序？\"></a>快速排序怎么实现的？算法复杂度？用的什么思想？是稳定排序还是非稳定排序？</h3><p>快速排序的的JavaScript实现如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> quickSort = <span class=\"function\">(<span class=\"params\">arr</span>) =&gt;</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (arr.length &lt;= <span class=\"number\">1</span>) <span class=\"keyword\">return</span> arr;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">let</span> pivotIndex = ~~(arr.length/<span class=\"number\">2</span>),</span><br><span class=\"line\">        pivot = arr.splice(pivotIndex, <span class=\"number\">1</span>)[<span class=\"number\">0</span>],</span><br><span class=\"line\">        left = [],</span><br><span class=\"line\">        right = [];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (arr[i] &lt; pivot) &#123;</span><br><span class=\"line\">            left.push(arr[i]);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            right.push(arr[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> quickSort(left).concat([pivot], quickSort(right));</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>快速排序的时间复杂度平均为<code>O(n*log(n))</code>，最差的情况为<code>O(n^2)</code>。采用的是分治的思想。是非稳定排序。</p>\n<h3 id=\"jQuery中自定义事件的实现原理？-bind-trigger\"><a href=\"#jQuery中自定义事件的实现原理？-bind-trigger\" class=\"headerlink\" title=\"jQuery中自定义事件的实现原理？(bind, trigger)\"></a>jQuery中自定义事件的实现原理？(bind, trigger)</h3><h2 id=\"机试\"><a href=\"#机试\" class=\"headerlink\" title=\"机试\"></a>机试</h2><p>问题：</p>\n<ul>\n<li>写一个函数，实现大整数的加法。</li>\n<li>每次走1级或者2级阶梯，走到第n级阶梯的方式有多少种？请运用动态规划的思想。</li>\n</ul>\n<h3 id=\"写一个函数，实现大整数的加法。\"><a href=\"#写一个函数，实现大整数的加法。\" class=\"headerlink\" title=\"写一个函数，实现大整数的加法。\"></a>写一个函数，实现大整数的加法。</h3><p>我的答案：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> add = <span class=\"function\">(<span class=\"params\">a, b</span>) =&gt;</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (a.length === <span class=\"number\">0</span> || b.length === <span class=\"number\">0</span>) <span class=\"keyword\">return</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">parseInt</span>(a) &lt; <span class=\"number\">0</span> || <span class=\"built_in\">parseInt</span>(b) &lt; <span class=\"number\">0</span>) <span class=\"keyword\">return</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">parseInt</span>(a) === <span class=\"number\">0</span> &amp;&amp; <span class=\"built_in\">parseInt</span>(b) === <span class=\"number\">0</span>) <span class=\"keyword\">return</span> <span class=\"string\">'0'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> string2Array = <span class=\"function\">(<span class=\"params\">str</span>) =&gt;</span> str.split(<span class=\"string\">''</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> arrA = string2Array(a),</span><br><span class=\"line\">        arrB = string2Array(b);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> lenA = arrA.length,</span><br><span class=\"line\">        lenB = arrB.length;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (lenA &gt; lenB) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        arrB = <span class=\"built_in\">Array</span>(lenA - lenB + <span class=\"number\">1</span>).join(<span class=\"string\">'0'</span>).split(<span class=\"string\">''</span>).concat(arrB);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (lenA &lt; lenB) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        arrA = <span class=\"built_in\">Array</span>(lenB - lenA + <span class=\"number\">1</span>).join(<span class=\"string\">'0'</span>).split(<span class=\"string\">''</span>).concat(arrA);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> tempArr = arrA.map(<span class=\"function\">(<span class=\"params\">item, index</span>) =&gt;</span> <span class=\"built_in\">parseInt</span>(item) + <span class=\"built_in\">parseInt</span>(arrB[index]));</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> i = tempArr.length - <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (i &gt;= <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">let</span> currentVal = tempArr[i].toString();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (currentVal &gt;= <span class=\"number\">10</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            tempArr[i] = currentVal.substr(<span class=\"number\">1</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">                tempArr.unshift(currentVal.substr(<span class=\"number\">0</span>, <span class=\"number\">1</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            tempArr[i<span class=\"number\">-1</span>] = <span class=\"built_in\">parseInt</span>(tempArr[i - <span class=\"number\">1</span>]) + <span class=\"built_in\">parseInt</span>(currentVal.substr(<span class=\"number\">0</span>, <span class=\"number\">1</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            tempArr[i] = currentVal.toString();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        i--;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> result = tempArr.join(<span class=\"string\">''</span>).replace(<span class=\"regexp\">/^0+/</span>, <span class=\"string\">''</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>这个答案还是我第二次才写出来的，但是提交之后明显被鄙视了。面试官的回答就是，你既然用了<code>parseInt</code>,为什么不直接来个</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> add = <span class=\"function\">(<span class=\"params\">a, b</span>) =&gt;</span> <span class=\"built_in\">parseInt</span>(a) + <span class=\"built_in\">parseInt</span>(b);</span><br></pre></td></tr></table></figure>\n<p>就好了？</p>\n<p>我表示很无语，但又无法反驳。面试肯定挂了，但是我还是不放弃追求真理的决心，我去网上找最优解，结果真的吓到我了。请看代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> sumOfString = <span class=\"function\">(<span class=\"params\">a, b</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">let</span> result = <span class=\"string\">''</span>,</span><br><span class=\"line\">        tempVal = <span class=\"number\">0</span>,</span><br><span class=\"line\">        arra = a.split(<span class=\"string\">''</span>),</span><br><span class=\"line\">        arrb = b.split(<span class=\"string\">''</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (arra.length || arrb.length || tempVal) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        tempVal += ~~arra.pop() + ~~arrb.pop();</span><br><span class=\"line\"></span><br><span class=\"line\">        result = tempVal % <span class=\"number\">10</span> + result;</span><br><span class=\"line\"></span><br><span class=\"line\">        tempVal = tempVal &gt; <span class=\"number\">9</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> result.replace(<span class=\"regexp\">/^0+/</span>, <span class=\"string\">''</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>简单到不能忍。里面的技巧打死也想不到：</p>\n<ul>\n<li><code>arra.length || arrb.length || tempVal</code>: 巧妙的循环边界条件</li>\n<li><code>~~arra.pop()</code>: 把字符串转换成数字并取整</li>\n<li><code>tempVal = tempVal &gt; 9</code>: 如果<code>=</code>右边的判断正确，则<code>tempVal</code>的值为<code>true</code>，下次循环进入第一步计算的时候又会转换成<code>1</code>，从而实现进位。同样可以解释为<code>false</code>的情况。</li>\n</ul>\n<h3 id=\"每次走1级或者2级阶梯，走到第n级阶梯的方式有多少种？请运用动态规划的思想。\"><a href=\"#每次走1级或者2级阶梯，走到第n级阶梯的方式有多少种？请运用动态规划的思想。\" class=\"headerlink\" title=\"每次走1级或者2级阶梯，走到第n级阶梯的方式有多少种？请运用动态规划的思想。\"></a>每次走1级或者2级阶梯，走到第n级阶梯的方式有多少种？请运用动态规划的思想。</h3><p>实现方式如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> methodsToStepN(n) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (n &lt;= <span class=\"number\">0</span>) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (n === <span class=\"number\">1</span>) <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (n === <span class=\"number\">2</span>) <span class=\"keyword\">return</span> <span class=\"number\">2</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> methodToStepN(n - <span class=\"number\">1</span>) + methodToStepN(n - <span class=\"number\">2</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n","site":{"data":{"next":{"favicon":"/favicon.ico","keywords":"Hexo, NexT","rss":null,"since":2016,"authoricon":"heart","copyright":true,"canonical":true,"seo":true,"index_with_subtitle":false,"menu":{"home":"/","categories":"/categories/","archives":"/archives/","tags":"/tags/","about":"/about/"},"menu_icons":{"enable":true,"home":"home","about":"user","categories":"th","schedule":"calendar","tags":"tags","archives":"archive","sitemap":"sitemap","commonweal":"heartbeat"},"scheme":"Mist","social":{"Github":"https://github.com/ricosmall"},"social_icons":{"enable":true,"GitHub":"github","Twitter":"twitter","Weibo":"weibo"},"avatar":"/uploads/avatar.png","toc":{"enable":true,"number":true,"wrap":false},"sidebar":{"position":"left","display":"post","offset":12,"offset_float":0,"b2t":false,"scrollpercent":false,"onmobile":false},"scroll_to_more":true,"save_scroll":false,"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"post_meta":{"item_text":true,"created_at":true,"updated_at":false,"categories":true},"post_wordcount":{"item_text":true,"wordcount":false,"min2read":false,"separated_meta":true},"post_copyright":{"enable":false,"license":"CC BY-NC-SA 3.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/3.0/"},"custom_logo":{"enabled":false,"image":null},"highlight_theme":"night bright","font":{"enable":true,"host":null,"global":{"external":true,"family":"Lato"},"headings":{"external":true,"family":null},"posts":{"external":true,"family":null},"logo":{"external":true,"family":null,"size":null},"codes":{"external":true,"family":"Menlo, Monospace","size":null}},"mathjax":{"enable":true,"per_page":false,"cdn":"//cdn.bootcss.com/mathjax/2.7.1/latest.js?config=TeX-AMS-MML_HTMLorMML"},"han":false,"disqus":{"enable":false,"shortname":"ricosmall","count":false},"changyan":{"enable":false,"appid":null,"appkey":null},"duoshuo_info":{"ua_enable":true,"admin_enable":false,"user_id":0},"facebook_sdk":{"enable":false,"app_id":null,"fb_admin":null,"like_button":null,"webmaster":null},"facebook_comments_plugin":{"enable":false,"num_of_posts":10,"width":"100%","scheme":"light"},"vkontakte_api":{"enable":false,"app_id":null,"like":true,"comments":true,"num_of_posts":10},"rating":{"enable":false,"id":null,"color":"fc6423"},"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null},"busuanzi_count":{"enable":true,"site_uv":true,"site_uv_header":"<i class=\"fa fa-user\"></i>访问人数","site_uv_footer":null,"site_pv":true,"site_pv_header":"<i class=\"fa fa-eye\"></i>总访问量","site_pv_footer":"次","page_pv":true,"page_pv_header":"<i class=\"fa fa-file-o\"></i>浏览","page_pv_footer":"次"},"baidu_push":false,"calendar":{"enable":false,"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"timeZone":null,"showDeleted":false,"singleEvents":true,"maxResults":250},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1},"exturl":false,"use_motion":true,"fancybox":true,"pace":false,"pace_theme":"pace-theme-minimal","canvas_nest":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false,"canvas_ribbon":false,"vendors":{"_internal":"lib","jquery":null,"fancybox":null,"fancybox_css":null,"fastclick":null,"lazyload":null,"velocity":null,"velocity_ui":null,"ua_parser":null,"fontawesome":null,"algolia_instant_js":null,"algolia_instant_css":null,"pace":null,"pace_css":null,"canvas_nest":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_ribbon":null,"han":null},"css":"css","js":"js","images":"images","version":"5.1.1"}}},"excerpt":"<p>这是一次电话面试加远程QQ监督机试。</p>","more":"<h2 id=\"电话面试\"><a href=\"#电话面试\" class=\"headerlink\" title=\"电话面试\"></a>电话面试</h2><p>问题：</p>\n<p>一些我答对了的简单问题就不列出来了</p>\n<ul>\n<li>快速排序怎么实现的？算法复杂度？用的什么思想？是稳定排序还是非稳定排序？</li>\n<li>jQuery中自定义事件的实现原理？(bind, trigger)</li>\n<li>如何处理过多的回调嵌套？Promise的实现原理？</li>\n<li>请描述三次握手和四次挥手。</li>\n</ul>\n<h3 id=\"快速排序怎么实现的？算法复杂度？用的什么思想？是稳定排序还是非稳定排序？\"><a href=\"#快速排序怎么实现的？算法复杂度？用的什么思想？是稳定排序还是非稳定排序？\" class=\"headerlink\" title=\"快速排序怎么实现的？算法复杂度？用的什么思想？是稳定排序还是非稳定排序？\"></a>快速排序怎么实现的？算法复杂度？用的什么思想？是稳定排序还是非稳定排序？</h3><p>快速排序的的JavaScript实现如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> quickSort = <span class=\"function\">(<span class=\"params\">arr</span>) =&gt;</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (arr.length &lt;= <span class=\"number\">1</span>) <span class=\"keyword\">return</span> arr;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">let</span> pivotIndex = ~~(arr.length/<span class=\"number\">2</span>),</span><br><span class=\"line\">        pivot = arr.splice(pivotIndex, <span class=\"number\">1</span>)[<span class=\"number\">0</span>],</span><br><span class=\"line\">        left = [],</span><br><span class=\"line\">        right = [];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (arr[i] &lt; pivot) &#123;</span><br><span class=\"line\">            left.push(arr[i]);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            right.push(arr[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> quickSort(left).concat([pivot], quickSort(right));</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>快速排序的时间复杂度平均为<code>O(n*log(n))</code>，最差的情况为<code>O(n^2)</code>。采用的是分治的思想。是非稳定排序。</p>\n<h3 id=\"jQuery中自定义事件的实现原理？-bind-trigger\"><a href=\"#jQuery中自定义事件的实现原理？-bind-trigger\" class=\"headerlink\" title=\"jQuery中自定义事件的实现原理？(bind, trigger)\"></a>jQuery中自定义事件的实现原理？(bind, trigger)</h3><h2 id=\"机试\"><a href=\"#机试\" class=\"headerlink\" title=\"机试\"></a>机试</h2><p>问题：</p>\n<ul>\n<li>写一个函数，实现大整数的加法。</li>\n<li>每次走1级或者2级阶梯，走到第n级阶梯的方式有多少种？请运用动态规划的思想。</li>\n</ul>\n<h3 id=\"写一个函数，实现大整数的加法。\"><a href=\"#写一个函数，实现大整数的加法。\" class=\"headerlink\" title=\"写一个函数，实现大整数的加法。\"></a>写一个函数，实现大整数的加法。</h3><p>我的答案：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> add = <span class=\"function\">(<span class=\"params\">a, b</span>) =&gt;</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (a.length === <span class=\"number\">0</span> || b.length === <span class=\"number\">0</span>) <span class=\"keyword\">return</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">parseInt</span>(a) &lt; <span class=\"number\">0</span> || <span class=\"built_in\">parseInt</span>(b) &lt; <span class=\"number\">0</span>) <span class=\"keyword\">return</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">parseInt</span>(a) === <span class=\"number\">0</span> &amp;&amp; <span class=\"built_in\">parseInt</span>(b) === <span class=\"number\">0</span>) <span class=\"keyword\">return</span> <span class=\"string\">'0'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> string2Array = <span class=\"function\">(<span class=\"params\">str</span>) =&gt;</span> str.split(<span class=\"string\">''</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> arrA = string2Array(a),</span><br><span class=\"line\">        arrB = string2Array(b);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> lenA = arrA.length,</span><br><span class=\"line\">        lenB = arrB.length;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (lenA &gt; lenB) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        arrB = <span class=\"built_in\">Array</span>(lenA - lenB + <span class=\"number\">1</span>).join(<span class=\"string\">'0'</span>).split(<span class=\"string\">''</span>).concat(arrB);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (lenA &lt; lenB) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        arrA = <span class=\"built_in\">Array</span>(lenB - lenA + <span class=\"number\">1</span>).join(<span class=\"string\">'0'</span>).split(<span class=\"string\">''</span>).concat(arrA);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> tempArr = arrA.map(<span class=\"function\">(<span class=\"params\">item, index</span>) =&gt;</span> <span class=\"built_in\">parseInt</span>(item) + <span class=\"built_in\">parseInt</span>(arrB[index]));</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> i = tempArr.length - <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (i &gt;= <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">let</span> currentVal = tempArr[i].toString();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (currentVal &gt;= <span class=\"number\">10</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            tempArr[i] = currentVal.substr(<span class=\"number\">1</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">                tempArr.unshift(currentVal.substr(<span class=\"number\">0</span>, <span class=\"number\">1</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            tempArr[i<span class=\"number\">-1</span>] = <span class=\"built_in\">parseInt</span>(tempArr[i - <span class=\"number\">1</span>]) + <span class=\"built_in\">parseInt</span>(currentVal.substr(<span class=\"number\">0</span>, <span class=\"number\">1</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            tempArr[i] = currentVal.toString();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        i--;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> result = tempArr.join(<span class=\"string\">''</span>).replace(<span class=\"regexp\">/^0+/</span>, <span class=\"string\">''</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>这个答案还是我第二次才写出来的，但是提交之后明显被鄙视了。面试官的回答就是，你既然用了<code>parseInt</code>,为什么不直接来个</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> add = <span class=\"function\">(<span class=\"params\">a, b</span>) =&gt;</span> <span class=\"built_in\">parseInt</span>(a) + <span class=\"built_in\">parseInt</span>(b);</span><br></pre></td></tr></table></figure>\n<p>就好了？</p>\n<p>我表示很无语，但又无法反驳。面试肯定挂了，但是我还是不放弃追求真理的决心，我去网上找最优解，结果真的吓到我了。请看代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> sumOfString = <span class=\"function\">(<span class=\"params\">a, b</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">let</span> result = <span class=\"string\">''</span>,</span><br><span class=\"line\">        tempVal = <span class=\"number\">0</span>,</span><br><span class=\"line\">        arra = a.split(<span class=\"string\">''</span>),</span><br><span class=\"line\">        arrb = b.split(<span class=\"string\">''</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (arra.length || arrb.length || tempVal) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        tempVal += ~~arra.pop() + ~~arrb.pop();</span><br><span class=\"line\"></span><br><span class=\"line\">        result = tempVal % <span class=\"number\">10</span> + result;</span><br><span class=\"line\"></span><br><span class=\"line\">        tempVal = tempVal &gt; <span class=\"number\">9</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> result.replace(<span class=\"regexp\">/^0+/</span>, <span class=\"string\">''</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>简单到不能忍。里面的技巧打死也想不到：</p>\n<ul>\n<li><code>arra.length || arrb.length || tempVal</code>: 巧妙的循环边界条件</li>\n<li><code>~~arra.pop()</code>: 把字符串转换成数字并取整</li>\n<li><code>tempVal = tempVal &gt; 9</code>: 如果<code>=</code>右边的判断正确，则<code>tempVal</code>的值为<code>true</code>，下次循环进入第一步计算的时候又会转换成<code>1</code>，从而实现进位。同样可以解释为<code>false</code>的情况。</li>\n</ul>\n<h3 id=\"每次走1级或者2级阶梯，走到第n级阶梯的方式有多少种？请运用动态规划的思想。\"><a href=\"#每次走1级或者2级阶梯，走到第n级阶梯的方式有多少种？请运用动态规划的思想。\" class=\"headerlink\" title=\"每次走1级或者2级阶梯，走到第n级阶梯的方式有多少种？请运用动态规划的思想。\"></a>每次走1级或者2级阶梯，走到第n级阶梯的方式有多少种？请运用动态规划的思想。</h3><p>实现方式如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> methodsToStepN(n) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (n &lt;= <span class=\"number\">0</span>) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (n === <span class=\"number\">1</span>) <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (n === <span class=\"number\">2</span>) <span class=\"keyword\">return</span> <span class=\"number\">2</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> methodToStepN(n - <span class=\"number\">1</span>) + methodToStepN(n - <span class=\"number\">2</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>"},{"title":"Mac常用软件收集","date":"2017-05-04T14:02:33.000Z","_content":"\n### macOS\n\n作为开发者，macOS是最合适的平台。有人可能无法理解，我的建议是试试就知道。\n\n<!--more-->\n\n### 常用软件\n\n[Snip](http://snip.qq.com/) 截图软件，qq 开发一款很好用的截图工具。\n[Alfred](https://www.alfredapp.com/) 快速启动、搜索工具，比自带的 spotlight 强太多了。\n[Launchbar](https://www.obdev.at/products/launchbar/index.html) 同 Alfred，但是理念不同，也很强大。\n[Cornerstone](https://cornerstone.assembla.com/) 强大的 mac 版 SVN 版本管理 GUI 软件。\n[MacDown](https://macdown.uranusjr.com/) mac 版 Markdown 编辑器。\n[MPlayerX](http://mplayerx.org/) mac 版视频播放器，好用。\n[The Unarchiver](https://theunarchiver.com/) mac 版文件解压工具。\n[Spectacle](https://www.spectacleapp.com/) mac 版分屏工具。\n","source":"_posts/2017-05-04-Mac常用软件收集.md","raw":"---\ntitle: Mac常用软件收集\ndate: 2017-05-04 22:02:33\ntags:\n- macOS\n- software\ncategories:\n- 收藏\n---\n\n### macOS\n\n作为开发者，macOS是最合适的平台。有人可能无法理解，我的建议是试试就知道。\n\n<!--more-->\n\n### 常用软件\n\n[Snip](http://snip.qq.com/) 截图软件，qq 开发一款很好用的截图工具。\n[Alfred](https://www.alfredapp.com/) 快速启动、搜索工具，比自带的 spotlight 强太多了。\n[Launchbar](https://www.obdev.at/products/launchbar/index.html) 同 Alfred，但是理念不同，也很强大。\n[Cornerstone](https://cornerstone.assembla.com/) 强大的 mac 版 SVN 版本管理 GUI 软件。\n[MacDown](https://macdown.uranusjr.com/) mac 版 Markdown 编辑器。\n[MPlayerX](http://mplayerx.org/) mac 版视频播放器，好用。\n[The Unarchiver](https://theunarchiver.com/) mac 版文件解压工具。\n[Spectacle](https://www.spectacleapp.com/) mac 版分屏工具。\n","slug":"Mac常用软件收集","published":1,"updated":"2018-03-28T14:21:13.845Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjskilakf000dg9zbzorzcjes","content":"<h3 id=\"macOS\"><a href=\"#macOS\" class=\"headerlink\" title=\"macOS\"></a>macOS</h3><p>作为开发者，macOS是最合适的平台。有人可能无法理解，我的建议是试试就知道。</p>\n<a id=\"more\"></a>\n<h3 id=\"常用软件\"><a href=\"#常用软件\" class=\"headerlink\" title=\"常用软件\"></a>常用软件</h3><p><a href=\"http://snip.qq.com/\" target=\"_blank\" rel=\"noopener\">Snip</a> 截图软件，qq 开发一款很好用的截图工具。<br><a href=\"https://www.alfredapp.com/\" target=\"_blank\" rel=\"noopener\">Alfred</a> 快速启动、搜索工具，比自带的 spotlight 强太多了。<br><a href=\"https://www.obdev.at/products/launchbar/index.html\" target=\"_blank\" rel=\"noopener\">Launchbar</a> 同 Alfred，但是理念不同，也很强大。<br><a href=\"https://cornerstone.assembla.com/\" target=\"_blank\" rel=\"noopener\">Cornerstone</a> 强大的 mac 版 SVN 版本管理 GUI 软件。<br><a href=\"https://macdown.uranusjr.com/\" target=\"_blank\" rel=\"noopener\">MacDown</a> mac 版 Markdown 编辑器。<br><a href=\"http://mplayerx.org/\" target=\"_blank\" rel=\"noopener\">MPlayerX</a> mac 版视频播放器，好用。<br><a href=\"https://theunarchiver.com/\" target=\"_blank\" rel=\"noopener\">The Unarchiver</a> mac 版文件解压工具。<br><a href=\"https://www.spectacleapp.com/\" target=\"_blank\" rel=\"noopener\">Spectacle</a> mac 版分屏工具。</p>\n","site":{"data":{"next":{"favicon":"/favicon.ico","keywords":"Hexo, NexT","rss":null,"since":2016,"authoricon":"heart","copyright":true,"canonical":true,"seo":true,"index_with_subtitle":false,"menu":{"home":"/","categories":"/categories/","archives":"/archives/","tags":"/tags/","about":"/about/"},"menu_icons":{"enable":true,"home":"home","about":"user","categories":"th","schedule":"calendar","tags":"tags","archives":"archive","sitemap":"sitemap","commonweal":"heartbeat"},"scheme":"Mist","social":{"Github":"https://github.com/ricosmall"},"social_icons":{"enable":true,"GitHub":"github","Twitter":"twitter","Weibo":"weibo"},"avatar":"/uploads/avatar.png","toc":{"enable":true,"number":true,"wrap":false},"sidebar":{"position":"left","display":"post","offset":12,"offset_float":0,"b2t":false,"scrollpercent":false,"onmobile":false},"scroll_to_more":true,"save_scroll":false,"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"post_meta":{"item_text":true,"created_at":true,"updated_at":false,"categories":true},"post_wordcount":{"item_text":true,"wordcount":false,"min2read":false,"separated_meta":true},"post_copyright":{"enable":false,"license":"CC BY-NC-SA 3.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/3.0/"},"custom_logo":{"enabled":false,"image":null},"highlight_theme":"night bright","font":{"enable":true,"host":null,"global":{"external":true,"family":"Lato"},"headings":{"external":true,"family":null},"posts":{"external":true,"family":null},"logo":{"external":true,"family":null,"size":null},"codes":{"external":true,"family":"Menlo, Monospace","size":null}},"mathjax":{"enable":true,"per_page":false,"cdn":"//cdn.bootcss.com/mathjax/2.7.1/latest.js?config=TeX-AMS-MML_HTMLorMML"},"han":false,"disqus":{"enable":false,"shortname":"ricosmall","count":false},"changyan":{"enable":false,"appid":null,"appkey":null},"duoshuo_info":{"ua_enable":true,"admin_enable":false,"user_id":0},"facebook_sdk":{"enable":false,"app_id":null,"fb_admin":null,"like_button":null,"webmaster":null},"facebook_comments_plugin":{"enable":false,"num_of_posts":10,"width":"100%","scheme":"light"},"vkontakte_api":{"enable":false,"app_id":null,"like":true,"comments":true,"num_of_posts":10},"rating":{"enable":false,"id":null,"color":"fc6423"},"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null},"busuanzi_count":{"enable":true,"site_uv":true,"site_uv_header":"<i class=\"fa fa-user\"></i>访问人数","site_uv_footer":null,"site_pv":true,"site_pv_header":"<i class=\"fa fa-eye\"></i>总访问量","site_pv_footer":"次","page_pv":true,"page_pv_header":"<i class=\"fa fa-file-o\"></i>浏览","page_pv_footer":"次"},"baidu_push":false,"calendar":{"enable":false,"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"timeZone":null,"showDeleted":false,"singleEvents":true,"maxResults":250},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1},"exturl":false,"use_motion":true,"fancybox":true,"pace":false,"pace_theme":"pace-theme-minimal","canvas_nest":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false,"canvas_ribbon":false,"vendors":{"_internal":"lib","jquery":null,"fancybox":null,"fancybox_css":null,"fastclick":null,"lazyload":null,"velocity":null,"velocity_ui":null,"ua_parser":null,"fontawesome":null,"algolia_instant_js":null,"algolia_instant_css":null,"pace":null,"pace_css":null,"canvas_nest":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_ribbon":null,"han":null},"css":"css","js":"js","images":"images","version":"5.1.1"}}},"excerpt":"<h3 id=\"macOS\"><a href=\"#macOS\" class=\"headerlink\" title=\"macOS\"></a>macOS</h3><p>作为开发者，macOS是最合适的平台。有人可能无法理解，我的建议是试试就知道。</p>","more":"<h3 id=\"常用软件\"><a href=\"#常用软件\" class=\"headerlink\" title=\"常用软件\"></a>常用软件</h3><p><a href=\"http://snip.qq.com/\" target=\"_blank\" rel=\"noopener\">Snip</a> 截图软件，qq 开发一款很好用的截图工具。<br><a href=\"https://www.alfredapp.com/\" target=\"_blank\" rel=\"noopener\">Alfred</a> 快速启动、搜索工具，比自带的 spotlight 强太多了。<br><a href=\"https://www.obdev.at/products/launchbar/index.html\" target=\"_blank\" rel=\"noopener\">Launchbar</a> 同 Alfred，但是理念不同，也很强大。<br><a href=\"https://cornerstone.assembla.com/\" target=\"_blank\" rel=\"noopener\">Cornerstone</a> 强大的 mac 版 SVN 版本管理 GUI 软件。<br><a href=\"https://macdown.uranusjr.com/\" target=\"_blank\" rel=\"noopener\">MacDown</a> mac 版 Markdown 编辑器。<br><a href=\"http://mplayerx.org/\" target=\"_blank\" rel=\"noopener\">MPlayerX</a> mac 版视频播放器，好用。<br><a href=\"https://theunarchiver.com/\" target=\"_blank\" rel=\"noopener\">The Unarchiver</a> mac 版文件解压工具。<br><a href=\"https://www.spectacleapp.com/\" target=\"_blank\" rel=\"noopener\">Spectacle</a> mac 版分屏工具。</p>"},{"title":"大整数加法、乘法的JavaScript实现","date":"2017-03-30T09:56:45.000Z","_content":"\n> 在某些情况下，我们要处理很大的整数，它无法在计算机硬件能直接表示的范围内进行处理。若用浮点数来表示它，则只能近似地表示它的大小，计算结果中的有效数字也受到限制。若要精确地表示大整数并在计算结果中要求精确地得到所有位数上的数字，就必须用软件的方法来实现大整数的算术运算。\n\n> -- 引用[混沌](https://sites.google.com/a/chaoskey.com/algorithm/02/02)的原话。\n\n<!-- more -->\n\n## 大整数加法\n\n在另一篇文章中已经整理过，在这里再贴一次吧。这不是我自己想出来的方法，这是在网上找的大神写的方法，具体源头我也没找到。至少我找到的算法里面没有比这个更简单的了。\n\n```javascript\n// 方法\nvar bigNumStringAddition = (a, b) => {\n\n    let result = '',\n        tempVal = 0,\n        arra = a.split(''),\n        arrb = b.split('');\n\n    while (arra.length || arrb.length || tempVal) {\n\n        tempVal += ~~arra.pop() + ~~arrb.pop();\n\n        result = tempVal % 10 + result;\n\n        tempVal = tempVal > 9;\n    }\n\n    return result.replace(/^0+/, '');\n\n};\n\n// 测试\nbigNumStringAddition('87683997878946347862738468726348289374972938479823749872938479234923846237672364732478237492394738748273948789237487238472389478923748782364723647823847283974', '92734897238947832456237489273498723984782365783465782634786287346782638472983749823748357634785278348273498723894792387489327487238478234827389472938748923748235862384782374');\n\n// '92734897238947920140235368219846586723251092131755157607724767170532511411462984747594595307150010826510991118633540661438116724725716707216868396687531288471883686232066348'\n```\n\n## 大整数乘法\n\n大整数加法的JavaScript实现和大整数乘法的JavaScript实现是我在两次面试中碰到的问题。大整数加法的算法我找到了上面的算法，各种奇淫技巧，简单得不行。大整数乘法呢我没有找到满意的算法，先把自己写的贴上来吧。\n\n```javascript\n// 方法\nvar bigNumStringMultiply = (a, b) => {\n\n    let arra = a.split('').reverse(),\n        arrb = b.split('').reverse(),\n        lena = arra.length,\n        lenb = arrb.length,\n        result = Array(lena + lenb + 1).join('0').split('');\n\n    arra.map((itema, indexa) => {\n        arrb.map((itemb, indexb) => {\n            result[indexa + indexb] = +result[indexa + indexb] + itema * itemb;\n        });\n    });\n\n    result.map((item, index) => {\n        if (item >= 10) {\n            result[index + 1] = ~~result[index + 1] + ~~(result[index] / 10);\n            result[index] %= 10;\n        }\n    });\n\n    return result.reverse().join('').replace(/^0+/, '');\n}\n\n// 测试\nbigNumStringMultiply('87683997878946347862738468726348289374972938479823749872938479234923846237672364732478237492394738748273948789237487238472389478923748782364723647823847283974', '92734897238947832456237489273498723984782365783465782634786287346782638472983749823748357634785278348273498723894792387489327487238478234827389472938748923748235862384782374');\n\n// '8131366532804209271848777343148089734867540084740313073714626072147803459519225889924153683477346079879903114543791258684883828524130882115379440144725160920757443592354053118047908949159167193991569423470425543890534108742857689635336451466135028613346191424578161286549581455047710048500852396172271754236155746244567328967874276'\n```\n","source":"_posts/2017-03-30-大整数加法、乘法的JavaScript实现.md","raw":"---\ntitle: 大整数加法、乘法的JavaScript实现\ndate: 2017-03-30 17:56:45\ntags:\n- JavaScript\n- algorithm\n- 大整数加法\n- 大整数乘法\ncategories:\n- 算法\n---\n\n> 在某些情况下，我们要处理很大的整数，它无法在计算机硬件能直接表示的范围内进行处理。若用浮点数来表示它，则只能近似地表示它的大小，计算结果中的有效数字也受到限制。若要精确地表示大整数并在计算结果中要求精确地得到所有位数上的数字，就必须用软件的方法来实现大整数的算术运算。\n\n> -- 引用[混沌](https://sites.google.com/a/chaoskey.com/algorithm/02/02)的原话。\n\n<!-- more -->\n\n## 大整数加法\n\n在另一篇文章中已经整理过，在这里再贴一次吧。这不是我自己想出来的方法，这是在网上找的大神写的方法，具体源头我也没找到。至少我找到的算法里面没有比这个更简单的了。\n\n```javascript\n// 方法\nvar bigNumStringAddition = (a, b) => {\n\n    let result = '',\n        tempVal = 0,\n        arra = a.split(''),\n        arrb = b.split('');\n\n    while (arra.length || arrb.length || tempVal) {\n\n        tempVal += ~~arra.pop() + ~~arrb.pop();\n\n        result = tempVal % 10 + result;\n\n        tempVal = tempVal > 9;\n    }\n\n    return result.replace(/^0+/, '');\n\n};\n\n// 测试\nbigNumStringAddition('87683997878946347862738468726348289374972938479823749872938479234923846237672364732478237492394738748273948789237487238472389478923748782364723647823847283974', '92734897238947832456237489273498723984782365783465782634786287346782638472983749823748357634785278348273498723894792387489327487238478234827389472938748923748235862384782374');\n\n// '92734897238947920140235368219846586723251092131755157607724767170532511411462984747594595307150010826510991118633540661438116724725716707216868396687531288471883686232066348'\n```\n\n## 大整数乘法\n\n大整数加法的JavaScript实现和大整数乘法的JavaScript实现是我在两次面试中碰到的问题。大整数加法的算法我找到了上面的算法，各种奇淫技巧，简单得不行。大整数乘法呢我没有找到满意的算法，先把自己写的贴上来吧。\n\n```javascript\n// 方法\nvar bigNumStringMultiply = (a, b) => {\n\n    let arra = a.split('').reverse(),\n        arrb = b.split('').reverse(),\n        lena = arra.length,\n        lenb = arrb.length,\n        result = Array(lena + lenb + 1).join('0').split('');\n\n    arra.map((itema, indexa) => {\n        arrb.map((itemb, indexb) => {\n            result[indexa + indexb] = +result[indexa + indexb] + itema * itemb;\n        });\n    });\n\n    result.map((item, index) => {\n        if (item >= 10) {\n            result[index + 1] = ~~result[index + 1] + ~~(result[index] / 10);\n            result[index] %= 10;\n        }\n    });\n\n    return result.reverse().join('').replace(/^0+/, '');\n}\n\n// 测试\nbigNumStringMultiply('87683997878946347862738468726348289374972938479823749872938479234923846237672364732478237492394738748273948789237487238472389478923748782364723647823847283974', '92734897238947832456237489273498723984782365783465782634786287346782638472983749823748357634785278348273498723894792387489327487238478234827389472938748923748235862384782374');\n\n// '8131366532804209271848777343148089734867540084740313073714626072147803459519225889924153683477346079879903114543791258684883828524130882115379440144725160920757443592354053118047908949159167193991569423470425543890534108742857689635336451466135028613346191424578161286549581455047710048500852396172271754236155746244567328967874276'\n```\n","slug":"大整数加法、乘法的JavaScript实现","published":1,"updated":"2018-03-27T13:52:33.768Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjskilaki000hg9zb048aend3","content":"<blockquote>\n<p>在某些情况下，我们要处理很大的整数，它无法在计算机硬件能直接表示的范围内进行处理。若用浮点数来表示它，则只能近似地表示它的大小，计算结果中的有效数字也受到限制。若要精确地表示大整数并在计算结果中要求精确地得到所有位数上的数字，就必须用软件的方法来实现大整数的算术运算。</p>\n</blockquote>\n<blockquote>\n<p>– 引用<a href=\"https://sites.google.com/a/chaoskey.com/algorithm/02/02\" target=\"_blank\" rel=\"noopener\">混沌</a>的原话。</p>\n</blockquote>\n<a id=\"more\"></a>\n<h2 id=\"大整数加法\"><a href=\"#大整数加法\" class=\"headerlink\" title=\"大整数加法\"></a>大整数加法</h2><p>在另一篇文章中已经整理过，在这里再贴一次吧。这不是我自己想出来的方法，这是在网上找的大神写的方法，具体源头我也没找到。至少我找到的算法里面没有比这个更简单的了。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 方法</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> bigNumStringAddition = <span class=\"function\">(<span class=\"params\">a, b</span>) =&gt;</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">let</span> result = <span class=\"string\">''</span>,</span><br><span class=\"line\">        tempVal = <span class=\"number\">0</span>,</span><br><span class=\"line\">        arra = a.split(<span class=\"string\">''</span>),</span><br><span class=\"line\">        arrb = b.split(<span class=\"string\">''</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (arra.length || arrb.length || tempVal) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        tempVal += ~~arra.pop() + ~~arrb.pop();</span><br><span class=\"line\"></span><br><span class=\"line\">        result = tempVal % <span class=\"number\">10</span> + result;</span><br><span class=\"line\"></span><br><span class=\"line\">        tempVal = tempVal &gt; <span class=\"number\">9</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> result.replace(<span class=\"regexp\">/^0+/</span>, <span class=\"string\">''</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 测试</span></span><br><span class=\"line\">bigNumStringAddition(<span class=\"string\">'87683997878946347862738468726348289374972938479823749872938479234923846237672364732478237492394738748273948789237487238472389478923748782364723647823847283974'</span>, <span class=\"string\">'92734897238947832456237489273498723984782365783465782634786287346782638472983749823748357634785278348273498723894792387489327487238478234827389472938748923748235862384782374'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// '92734897238947920140235368219846586723251092131755157607724767170532511411462984747594595307150010826510991118633540661438116724725716707216868396687531288471883686232066348'</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"大整数乘法\"><a href=\"#大整数乘法\" class=\"headerlink\" title=\"大整数乘法\"></a>大整数乘法</h2><p>大整数加法的JavaScript实现和大整数乘法的JavaScript实现是我在两次面试中碰到的问题。大整数加法的算法我找到了上面的算法，各种奇淫技巧，简单得不行。大整数乘法呢我没有找到满意的算法，先把自己写的贴上来吧。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 方法</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> bigNumStringMultiply = <span class=\"function\">(<span class=\"params\">a, b</span>) =&gt;</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">let</span> arra = a.split(<span class=\"string\">''</span>).reverse(),</span><br><span class=\"line\">        arrb = b.split(<span class=\"string\">''</span>).reverse(),</span><br><span class=\"line\">        lena = arra.length,</span><br><span class=\"line\">        lenb = arrb.length,</span><br><span class=\"line\">        result = <span class=\"built_in\">Array</span>(lena + lenb + <span class=\"number\">1</span>).join(<span class=\"string\">'0'</span>).split(<span class=\"string\">''</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    arra.map(<span class=\"function\">(<span class=\"params\">itema, indexa</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        arrb.map(<span class=\"function\">(<span class=\"params\">itemb, indexb</span>) =&gt;</span> &#123;</span><br><span class=\"line\">            result[indexa + indexb] = +result[indexa + indexb] + itema * itemb;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    result.map(<span class=\"function\">(<span class=\"params\">item, index</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (item &gt;= <span class=\"number\">10</span>) &#123;</span><br><span class=\"line\">            result[index + <span class=\"number\">1</span>] = ~~result[index + <span class=\"number\">1</span>] + ~~(result[index] / <span class=\"number\">10</span>);</span><br><span class=\"line\">            result[index] %= <span class=\"number\">10</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> result.reverse().join(<span class=\"string\">''</span>).replace(<span class=\"regexp\">/^0+/</span>, <span class=\"string\">''</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 测试</span></span><br><span class=\"line\">bigNumStringMultiply(<span class=\"string\">'87683997878946347862738468726348289374972938479823749872938479234923846237672364732478237492394738748273948789237487238472389478923748782364723647823847283974'</span>, <span class=\"string\">'92734897238947832456237489273498723984782365783465782634786287346782638472983749823748357634785278348273498723894792387489327487238478234827389472938748923748235862384782374'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// '8131366532804209271848777343148089734867540084740313073714626072147803459519225889924153683477346079879903114543791258684883828524130882115379440144725160920757443592354053118047908949159167193991569423470425543890534108742857689635336451466135028613346191424578161286549581455047710048500852396172271754236155746244567328967874276'</span></span><br></pre></td></tr></table></figure>\n","site":{"data":{"next":{"favicon":"/favicon.ico","keywords":"Hexo, NexT","rss":null,"since":2016,"authoricon":"heart","copyright":true,"canonical":true,"seo":true,"index_with_subtitle":false,"menu":{"home":"/","categories":"/categories/","archives":"/archives/","tags":"/tags/","about":"/about/"},"menu_icons":{"enable":true,"home":"home","about":"user","categories":"th","schedule":"calendar","tags":"tags","archives":"archive","sitemap":"sitemap","commonweal":"heartbeat"},"scheme":"Mist","social":{"Github":"https://github.com/ricosmall"},"social_icons":{"enable":true,"GitHub":"github","Twitter":"twitter","Weibo":"weibo"},"avatar":"/uploads/avatar.png","toc":{"enable":true,"number":true,"wrap":false},"sidebar":{"position":"left","display":"post","offset":12,"offset_float":0,"b2t":false,"scrollpercent":false,"onmobile":false},"scroll_to_more":true,"save_scroll":false,"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"post_meta":{"item_text":true,"created_at":true,"updated_at":false,"categories":true},"post_wordcount":{"item_text":true,"wordcount":false,"min2read":false,"separated_meta":true},"post_copyright":{"enable":false,"license":"CC BY-NC-SA 3.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/3.0/"},"custom_logo":{"enabled":false,"image":null},"highlight_theme":"night bright","font":{"enable":true,"host":null,"global":{"external":true,"family":"Lato"},"headings":{"external":true,"family":null},"posts":{"external":true,"family":null},"logo":{"external":true,"family":null,"size":null},"codes":{"external":true,"family":"Menlo, Monospace","size":null}},"mathjax":{"enable":true,"per_page":false,"cdn":"//cdn.bootcss.com/mathjax/2.7.1/latest.js?config=TeX-AMS-MML_HTMLorMML"},"han":false,"disqus":{"enable":false,"shortname":"ricosmall","count":false},"changyan":{"enable":false,"appid":null,"appkey":null},"duoshuo_info":{"ua_enable":true,"admin_enable":false,"user_id":0},"facebook_sdk":{"enable":false,"app_id":null,"fb_admin":null,"like_button":null,"webmaster":null},"facebook_comments_plugin":{"enable":false,"num_of_posts":10,"width":"100%","scheme":"light"},"vkontakte_api":{"enable":false,"app_id":null,"like":true,"comments":true,"num_of_posts":10},"rating":{"enable":false,"id":null,"color":"fc6423"},"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null},"busuanzi_count":{"enable":true,"site_uv":true,"site_uv_header":"<i class=\"fa fa-user\"></i>访问人数","site_uv_footer":null,"site_pv":true,"site_pv_header":"<i class=\"fa fa-eye\"></i>总访问量","site_pv_footer":"次","page_pv":true,"page_pv_header":"<i class=\"fa fa-file-o\"></i>浏览","page_pv_footer":"次"},"baidu_push":false,"calendar":{"enable":false,"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"timeZone":null,"showDeleted":false,"singleEvents":true,"maxResults":250},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1},"exturl":false,"use_motion":true,"fancybox":true,"pace":false,"pace_theme":"pace-theme-minimal","canvas_nest":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false,"canvas_ribbon":false,"vendors":{"_internal":"lib","jquery":null,"fancybox":null,"fancybox_css":null,"fastclick":null,"lazyload":null,"velocity":null,"velocity_ui":null,"ua_parser":null,"fontawesome":null,"algolia_instant_js":null,"algolia_instant_css":null,"pace":null,"pace_css":null,"canvas_nest":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_ribbon":null,"han":null},"css":"css","js":"js","images":"images","version":"5.1.1"}}},"excerpt":"<blockquote>\n<p>在某些情况下，我们要处理很大的整数，它无法在计算机硬件能直接表示的范围内进行处理。若用浮点数来表示它，则只能近似地表示它的大小，计算结果中的有效数字也受到限制。若要精确地表示大整数并在计算结果中要求精确地得到所有位数上的数字，就必须用软件的方法来实现大整数的算术运算。</p>\n</blockquote>\n<blockquote>\n<p>– 引用<a href=\"https://sites.google.com/a/chaoskey.com/algorithm/02/02\" target=\"_blank\" rel=\"noopener\">混沌</a>的原话。</p>\n</blockquote>","more":"<h2 id=\"大整数加法\"><a href=\"#大整数加法\" class=\"headerlink\" title=\"大整数加法\"></a>大整数加法</h2><p>在另一篇文章中已经整理过，在这里再贴一次吧。这不是我自己想出来的方法，这是在网上找的大神写的方法，具体源头我也没找到。至少我找到的算法里面没有比这个更简单的了。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 方法</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> bigNumStringAddition = <span class=\"function\">(<span class=\"params\">a, b</span>) =&gt;</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">let</span> result = <span class=\"string\">''</span>,</span><br><span class=\"line\">        tempVal = <span class=\"number\">0</span>,</span><br><span class=\"line\">        arra = a.split(<span class=\"string\">''</span>),</span><br><span class=\"line\">        arrb = b.split(<span class=\"string\">''</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (arra.length || arrb.length || tempVal) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        tempVal += ~~arra.pop() + ~~arrb.pop();</span><br><span class=\"line\"></span><br><span class=\"line\">        result = tempVal % <span class=\"number\">10</span> + result;</span><br><span class=\"line\"></span><br><span class=\"line\">        tempVal = tempVal &gt; <span class=\"number\">9</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> result.replace(<span class=\"regexp\">/^0+/</span>, <span class=\"string\">''</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 测试</span></span><br><span class=\"line\">bigNumStringAddition(<span class=\"string\">'87683997878946347862738468726348289374972938479823749872938479234923846237672364732478237492394738748273948789237487238472389478923748782364723647823847283974'</span>, <span class=\"string\">'92734897238947832456237489273498723984782365783465782634786287346782638472983749823748357634785278348273498723894792387489327487238478234827389472938748923748235862384782374'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// '92734897238947920140235368219846586723251092131755157607724767170532511411462984747594595307150010826510991118633540661438116724725716707216868396687531288471883686232066348'</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"大整数乘法\"><a href=\"#大整数乘法\" class=\"headerlink\" title=\"大整数乘法\"></a>大整数乘法</h2><p>大整数加法的JavaScript实现和大整数乘法的JavaScript实现是我在两次面试中碰到的问题。大整数加法的算法我找到了上面的算法，各种奇淫技巧，简单得不行。大整数乘法呢我没有找到满意的算法，先把自己写的贴上来吧。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 方法</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> bigNumStringMultiply = <span class=\"function\">(<span class=\"params\">a, b</span>) =&gt;</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">let</span> arra = a.split(<span class=\"string\">''</span>).reverse(),</span><br><span class=\"line\">        arrb = b.split(<span class=\"string\">''</span>).reverse(),</span><br><span class=\"line\">        lena = arra.length,</span><br><span class=\"line\">        lenb = arrb.length,</span><br><span class=\"line\">        result = <span class=\"built_in\">Array</span>(lena + lenb + <span class=\"number\">1</span>).join(<span class=\"string\">'0'</span>).split(<span class=\"string\">''</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    arra.map(<span class=\"function\">(<span class=\"params\">itema, indexa</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        arrb.map(<span class=\"function\">(<span class=\"params\">itemb, indexb</span>) =&gt;</span> &#123;</span><br><span class=\"line\">            result[indexa + indexb] = +result[indexa + indexb] + itema * itemb;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    result.map(<span class=\"function\">(<span class=\"params\">item, index</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (item &gt;= <span class=\"number\">10</span>) &#123;</span><br><span class=\"line\">            result[index + <span class=\"number\">1</span>] = ~~result[index + <span class=\"number\">1</span>] + ~~(result[index] / <span class=\"number\">10</span>);</span><br><span class=\"line\">            result[index] %= <span class=\"number\">10</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> result.reverse().join(<span class=\"string\">''</span>).replace(<span class=\"regexp\">/^0+/</span>, <span class=\"string\">''</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 测试</span></span><br><span class=\"line\">bigNumStringMultiply(<span class=\"string\">'87683997878946347862738468726348289374972938479823749872938479234923846237672364732478237492394738748273948789237487238472389478923748782364723647823847283974'</span>, <span class=\"string\">'92734897238947832456237489273498723984782365783465782634786287346782638472983749823748357634785278348273498723894792387489327487238478234827389472938748923748235862384782374'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// '8131366532804209271848777343148089734867540084740313073714626072147803459519225889924153683477346079879903114543791258684883828524130882115379440144725160920757443592354053118047908949159167193991569423470425543890534108742857689635336451466135028613346191424578161286549581455047710048500852396172271754236155746244567328967874276'</span></span><br></pre></td></tr></table></figure>"},{"title":"JavaScript创建对象的方式汇总","date":"2017-05-27T02:15:01.000Z","_content":"\nJavaScript中创建对象的方式有很多种，每一种方式都有相应的优缺点，总结如下。\n\n<!-- more -->\n\n## 工厂模式\n\n```javascript\nfunction createPerson( name ) {\n    var obj = new Object();\n\n    obj.name = name;\n    obj.getName = function () {\n        console.log( this.name );\n    };\n\n    return obj;\n}\n\nvar person = createPerson('John');\n```\n\n- 优点：简单直观\n- 缺点：所有实例都指向同一个原型，无法辨识\n\n## 构造函数模式\n\n```javascript\nfunction Person( name ) {\n    this.name = name;\n\n    this.getName = function () {\n        console.log( this.name );\n    };\n}\n\nvar person1 = new Person( 'John' );\n```\n\n- 优点：实例可以识别一个特定的原型\n- 缺点：每次实例化都会重新创建所有的方法\n\n## 构造函数模式优化\n\n```javascript\nfunction Person( name ) {\n    this.name = name;\n    this.getName = getName;\n}\n\nfunction getName() {\n    console.log( this.name );\n}\n```\n\n- 优点：解决了每次实例化都要创建所有方法的问题\n- 缺点：没有封装性可言\n\n## 原型模式\n\n```javascript\nfunction Person( name ) {\n\n}\n\nPerson.prototype.name = 'John';\n\nPerson.prototype.getName= function () {\n    console.log( this.name );\n};\n\nvar person1 = new Person();\n```\n\n- 优点：方法共享，不会被重建\n- 缺点：所有属性都是共享的；不能初始化参数\n\n## 原型模式优化\n\n```javascript\nfunction Person( name ) {\n\n}\n\nPerson.prototype = {\n    name: 'John',\n    getName: function () {\n        console.log( this.name );\n    }\n};\n\nvar person1 = new Person();\n```\n\n- 优点：有一定的封装性\n- 缺点：重写了原型，丢失了constructor属性\n\n## 原型模式再优化\n\n```javascript\nfunction Person( name ) {\n\n}\n\nPerson.prototype = {\n    constructor: Person,\n    name: 'John',\n    getName: function () {\n        console.log( this.name );\n    }\n};\n\nvar person1 = new Person();\n```\n\n- 优点：可以通过constructor找到对应的构造函数\n- 缺点：原型模式的公共缺点\n\n## 组合模式\n\n```javascript\nfunction Person( name ) {\n    this.name = name;\n}\n\nPerson.prototype = {\n    constructor: Person,\n    getName: function () {\n        console.log( this.name );\n    }\n};\n\nvar person1 = new Person( 'John' );\n```\n\n- 优点：使用广泛的模式，没有明显的毛病\n- 缺点：需要更好的封装性\n\n## 动态原型模式\n\n```javascript\nfunction Person( name ) {\n    this.name = name;\n\n    if (typeof this.getName !== 'function') {\n\n        Person.prototype.getName = function () {\n            console.log( this.name );\n        };\n    }\n}\n\nvar person1 = new Person( 'John' );\n```\n\n- 优点：按需创建方法\n- 缺点：没有明显的缺点\n\n## 寄生构造函数模式\n\n```javascript\nfunction Person( name ) {\n\n    var obj = new Object();\n\n    obj.name = name;\n    obj.getName = function () {\n        console.log( this.name );\n    };\n}\n\nvar person1 = new Person( 'John' );\n\nconsole.log( person1 instanceof Person ); // false\nconsole.log( person1 instanceof Object ); // true\n```\n\n寄生构造函数和工厂模式的区别就是实例化的时候需要new。\n\n- 优点：可以在不影响原生对象基础上扩展原生对象的方法、属性，形成新的构造函数\n- 缺点：instanceof无法指向构造函数\n\n## 稳妥构造函数模式\n\n```javascript\nfunction person( name ) {\n\n    var obj = new Object();\n\n    obj.getName = function () {\n        console.log( name );\n    }\n}\n\nvar person1 = person( 'John' );\n```\n\n稳妥对象，指的是没有公共属性，方法中也不引用this的对象。\n\n与寄生构造函数模式有两点不同：\n\n1. 方法中不引用this\n2. 实例化不用new\n\n- 优点：适合用在比较安全的环境\n- 缺点：和工厂模式一样，无法识别对象类型\n","source":"_posts/2017-05-27-JavaScript创建对象的方式汇总.md","raw":"---\ntitle: JavaScript创建对象的方式汇总\ndate: 2017-05-27 10:15:01\ntags:\n- JavaScript\n- 构造函数\n- JavaScript对象\ncategories:\n- 笔记\n---\n\nJavaScript中创建对象的方式有很多种，每一种方式都有相应的优缺点，总结如下。\n\n<!-- more -->\n\n## 工厂模式\n\n```javascript\nfunction createPerson( name ) {\n    var obj = new Object();\n\n    obj.name = name;\n    obj.getName = function () {\n        console.log( this.name );\n    };\n\n    return obj;\n}\n\nvar person = createPerson('John');\n```\n\n- 优点：简单直观\n- 缺点：所有实例都指向同一个原型，无法辨识\n\n## 构造函数模式\n\n```javascript\nfunction Person( name ) {\n    this.name = name;\n\n    this.getName = function () {\n        console.log( this.name );\n    };\n}\n\nvar person1 = new Person( 'John' );\n```\n\n- 优点：实例可以识别一个特定的原型\n- 缺点：每次实例化都会重新创建所有的方法\n\n## 构造函数模式优化\n\n```javascript\nfunction Person( name ) {\n    this.name = name;\n    this.getName = getName;\n}\n\nfunction getName() {\n    console.log( this.name );\n}\n```\n\n- 优点：解决了每次实例化都要创建所有方法的问题\n- 缺点：没有封装性可言\n\n## 原型模式\n\n```javascript\nfunction Person( name ) {\n\n}\n\nPerson.prototype.name = 'John';\n\nPerson.prototype.getName= function () {\n    console.log( this.name );\n};\n\nvar person1 = new Person();\n```\n\n- 优点：方法共享，不会被重建\n- 缺点：所有属性都是共享的；不能初始化参数\n\n## 原型模式优化\n\n```javascript\nfunction Person( name ) {\n\n}\n\nPerson.prototype = {\n    name: 'John',\n    getName: function () {\n        console.log( this.name );\n    }\n};\n\nvar person1 = new Person();\n```\n\n- 优点：有一定的封装性\n- 缺点：重写了原型，丢失了constructor属性\n\n## 原型模式再优化\n\n```javascript\nfunction Person( name ) {\n\n}\n\nPerson.prototype = {\n    constructor: Person,\n    name: 'John',\n    getName: function () {\n        console.log( this.name );\n    }\n};\n\nvar person1 = new Person();\n```\n\n- 优点：可以通过constructor找到对应的构造函数\n- 缺点：原型模式的公共缺点\n\n## 组合模式\n\n```javascript\nfunction Person( name ) {\n    this.name = name;\n}\n\nPerson.prototype = {\n    constructor: Person,\n    getName: function () {\n        console.log( this.name );\n    }\n};\n\nvar person1 = new Person( 'John' );\n```\n\n- 优点：使用广泛的模式，没有明显的毛病\n- 缺点：需要更好的封装性\n\n## 动态原型模式\n\n```javascript\nfunction Person( name ) {\n    this.name = name;\n\n    if (typeof this.getName !== 'function') {\n\n        Person.prototype.getName = function () {\n            console.log( this.name );\n        };\n    }\n}\n\nvar person1 = new Person( 'John' );\n```\n\n- 优点：按需创建方法\n- 缺点：没有明显的缺点\n\n## 寄生构造函数模式\n\n```javascript\nfunction Person( name ) {\n\n    var obj = new Object();\n\n    obj.name = name;\n    obj.getName = function () {\n        console.log( this.name );\n    };\n}\n\nvar person1 = new Person( 'John' );\n\nconsole.log( person1 instanceof Person ); // false\nconsole.log( person1 instanceof Object ); // true\n```\n\n寄生构造函数和工厂模式的区别就是实例化的时候需要new。\n\n- 优点：可以在不影响原生对象基础上扩展原生对象的方法、属性，形成新的构造函数\n- 缺点：instanceof无法指向构造函数\n\n## 稳妥构造函数模式\n\n```javascript\nfunction person( name ) {\n\n    var obj = new Object();\n\n    obj.getName = function () {\n        console.log( name );\n    }\n}\n\nvar person1 = person( 'John' );\n```\n\n稳妥对象，指的是没有公共属性，方法中也不引用this的对象。\n\n与寄生构造函数模式有两点不同：\n\n1. 方法中不引用this\n2. 实例化不用new\n\n- 优点：适合用在比较安全的环境\n- 缺点：和工厂模式一样，无法识别对象类型\n","slug":"JavaScript创建对象的方式汇总","published":1,"updated":"2018-03-27T13:52:33.770Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjskilakj000jg9zbcz2i0vqs","content":"<p>JavaScript中创建对象的方式有很多种，每一种方式都有相应的优缺点，总结如下。</p>\n<a id=\"more\"></a>\n<h2 id=\"工厂模式\"><a href=\"#工厂模式\" class=\"headerlink\" title=\"工厂模式\"></a>工厂模式</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">createPerson</span>(<span class=\"params\"> name </span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> obj = <span class=\"keyword\">new</span> <span class=\"built_in\">Object</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    obj.name = name;</span><br><span class=\"line\">    obj.getName = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log( <span class=\"keyword\">this</span>.name );</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> obj;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> person = createPerson(<span class=\"string\">'John'</span>);</span><br></pre></td></tr></table></figure>\n<ul>\n<li>优点：简单直观</li>\n<li>缺点：所有实例都指向同一个原型，无法辨识</li>\n</ul>\n<h2 id=\"构造函数模式\"><a href=\"#构造函数模式\" class=\"headerlink\" title=\"构造函数模式\"></a>构造函数模式</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Person</span>(<span class=\"params\"> name </span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.getName = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log( <span class=\"keyword\">this</span>.name );</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> person1 = <span class=\"keyword\">new</span> Person( <span class=\"string\">'John'</span> );</span><br></pre></td></tr></table></figure>\n<ul>\n<li>优点：实例可以识别一个特定的原型</li>\n<li>缺点：每次实例化都会重新创建所有的方法</li>\n</ul>\n<h2 id=\"构造函数模式优化\"><a href=\"#构造函数模式优化\" class=\"headerlink\" title=\"构造函数模式优化\"></a>构造函数模式优化</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Person</span>(<span class=\"params\"> name </span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.getName = getName;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getName</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log( <span class=\"keyword\">this</span>.name );</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>优点：解决了每次实例化都要创建所有方法的问题</li>\n<li>缺点：没有封装性可言</li>\n</ul>\n<h2 id=\"原型模式\"><a href=\"#原型模式\" class=\"headerlink\" title=\"原型模式\"></a>原型模式</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Person</span>(<span class=\"params\"> name </span>) </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Person.prototype.name = <span class=\"string\">'John'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">Person.prototype.getName= <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log( <span class=\"keyword\">this</span>.name );</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> person1 = <span class=\"keyword\">new</span> Person();</span><br></pre></td></tr></table></figure>\n<ul>\n<li>优点：方法共享，不会被重建</li>\n<li>缺点：所有属性都是共享的；不能初始化参数</li>\n</ul>\n<h2 id=\"原型模式优化\"><a href=\"#原型模式优化\" class=\"headerlink\" title=\"原型模式优化\"></a>原型模式优化</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Person</span>(<span class=\"params\"> name </span>) </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Person.prototype = &#123;</span><br><span class=\"line\">    name: <span class=\"string\">'John'</span>,</span><br><span class=\"line\">    getName: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log( <span class=\"keyword\">this</span>.name );</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> person1 = <span class=\"keyword\">new</span> Person();</span><br></pre></td></tr></table></figure>\n<ul>\n<li>优点：有一定的封装性</li>\n<li>缺点：重写了原型，丢失了constructor属性</li>\n</ul>\n<h2 id=\"原型模式再优化\"><a href=\"#原型模式再优化\" class=\"headerlink\" title=\"原型模式再优化\"></a>原型模式再优化</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Person</span>(<span class=\"params\"> name </span>) </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Person.prototype = &#123;</span><br><span class=\"line\">    <span class=\"keyword\">constructor</span>: Person,</span><br><span class=\"line\">    name: 'John',</span><br><span class=\"line\">    getName: function () &#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log( <span class=\"keyword\">this</span>.name );</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> person1 = <span class=\"keyword\">new</span> Person();</span><br></pre></td></tr></table></figure>\n<ul>\n<li>优点：可以通过constructor找到对应的构造函数</li>\n<li>缺点：原型模式的公共缺点</li>\n</ul>\n<h2 id=\"组合模式\"><a href=\"#组合模式\" class=\"headerlink\" title=\"组合模式\"></a>组合模式</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Person</span>(<span class=\"params\"> name </span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Person.prototype = &#123;</span><br><span class=\"line\">    <span class=\"keyword\">constructor</span>: Person,</span><br><span class=\"line\">    getName: function () &#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log( <span class=\"keyword\">this</span>.name );</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> person1 = <span class=\"keyword\">new</span> Person( <span class=\"string\">'John'</span> );</span><br></pre></td></tr></table></figure>\n<ul>\n<li>优点：使用广泛的模式，没有明显的毛病</li>\n<li>缺点：需要更好的封装性</li>\n</ul>\n<h2 id=\"动态原型模式\"><a href=\"#动态原型模式\" class=\"headerlink\" title=\"动态原型模式\"></a>动态原型模式</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Person</span>(<span class=\"params\"> name </span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> <span class=\"keyword\">this</span>.getName !== <span class=\"string\">'function'</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        Person.prototype.getName = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log( <span class=\"keyword\">this</span>.name );</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> person1 = <span class=\"keyword\">new</span> Person( <span class=\"string\">'John'</span> );</span><br></pre></td></tr></table></figure>\n<ul>\n<li>优点：按需创建方法</li>\n<li>缺点：没有明显的缺点</li>\n</ul>\n<h2 id=\"寄生构造函数模式\"><a href=\"#寄生构造函数模式\" class=\"headerlink\" title=\"寄生构造函数模式\"></a>寄生构造函数模式</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Person</span>(<span class=\"params\"> name </span>) </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> obj = <span class=\"keyword\">new</span> <span class=\"built_in\">Object</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    obj.name = name;</span><br><span class=\"line\">    obj.getName = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log( <span class=\"keyword\">this</span>.name );</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> person1 = <span class=\"keyword\">new</span> Person( <span class=\"string\">'John'</span> );</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( person1 <span class=\"keyword\">instanceof</span> Person ); <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( person1 <span class=\"keyword\">instanceof</span> <span class=\"built_in\">Object</span> ); <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n<p>寄生构造函数和工厂模式的区别就是实例化的时候需要new。</p>\n<ul>\n<li>优点：可以在不影响原生对象基础上扩展原生对象的方法、属性，形成新的构造函数</li>\n<li>缺点：instanceof无法指向构造函数</li>\n</ul>\n<h2 id=\"稳妥构造函数模式\"><a href=\"#稳妥构造函数模式\" class=\"headerlink\" title=\"稳妥构造函数模式\"></a>稳妥构造函数模式</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">person</span>(<span class=\"params\"> name </span>) </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> obj = <span class=\"keyword\">new</span> <span class=\"built_in\">Object</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    obj.getName = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log( name );</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> person1 = person( <span class=\"string\">'John'</span> );</span><br></pre></td></tr></table></figure>\n<p>稳妥对象，指的是没有公共属性，方法中也不引用this的对象。</p>\n<p>与寄生构造函数模式有两点不同：</p>\n<ol>\n<li>方法中不引用this</li>\n<li>实例化不用new</li>\n</ol>\n<ul>\n<li>优点：适合用在比较安全的环境</li>\n<li>缺点：和工厂模式一样，无法识别对象类型</li>\n</ul>\n","site":{"data":{"next":{"favicon":"/favicon.ico","keywords":"Hexo, NexT","rss":null,"since":2016,"authoricon":"heart","copyright":true,"canonical":true,"seo":true,"index_with_subtitle":false,"menu":{"home":"/","categories":"/categories/","archives":"/archives/","tags":"/tags/","about":"/about/"},"menu_icons":{"enable":true,"home":"home","about":"user","categories":"th","schedule":"calendar","tags":"tags","archives":"archive","sitemap":"sitemap","commonweal":"heartbeat"},"scheme":"Mist","social":{"Github":"https://github.com/ricosmall"},"social_icons":{"enable":true,"GitHub":"github","Twitter":"twitter","Weibo":"weibo"},"avatar":"/uploads/avatar.png","toc":{"enable":true,"number":true,"wrap":false},"sidebar":{"position":"left","display":"post","offset":12,"offset_float":0,"b2t":false,"scrollpercent":false,"onmobile":false},"scroll_to_more":true,"save_scroll":false,"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"post_meta":{"item_text":true,"created_at":true,"updated_at":false,"categories":true},"post_wordcount":{"item_text":true,"wordcount":false,"min2read":false,"separated_meta":true},"post_copyright":{"enable":false,"license":"CC BY-NC-SA 3.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/3.0/"},"custom_logo":{"enabled":false,"image":null},"highlight_theme":"night bright","font":{"enable":true,"host":null,"global":{"external":true,"family":"Lato"},"headings":{"external":true,"family":null},"posts":{"external":true,"family":null},"logo":{"external":true,"family":null,"size":null},"codes":{"external":true,"family":"Menlo, Monospace","size":null}},"mathjax":{"enable":true,"per_page":false,"cdn":"//cdn.bootcss.com/mathjax/2.7.1/latest.js?config=TeX-AMS-MML_HTMLorMML"},"han":false,"disqus":{"enable":false,"shortname":"ricosmall","count":false},"changyan":{"enable":false,"appid":null,"appkey":null},"duoshuo_info":{"ua_enable":true,"admin_enable":false,"user_id":0},"facebook_sdk":{"enable":false,"app_id":null,"fb_admin":null,"like_button":null,"webmaster":null},"facebook_comments_plugin":{"enable":false,"num_of_posts":10,"width":"100%","scheme":"light"},"vkontakte_api":{"enable":false,"app_id":null,"like":true,"comments":true,"num_of_posts":10},"rating":{"enable":false,"id":null,"color":"fc6423"},"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null},"busuanzi_count":{"enable":true,"site_uv":true,"site_uv_header":"<i class=\"fa fa-user\"></i>访问人数","site_uv_footer":null,"site_pv":true,"site_pv_header":"<i class=\"fa fa-eye\"></i>总访问量","site_pv_footer":"次","page_pv":true,"page_pv_header":"<i class=\"fa fa-file-o\"></i>浏览","page_pv_footer":"次"},"baidu_push":false,"calendar":{"enable":false,"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"timeZone":null,"showDeleted":false,"singleEvents":true,"maxResults":250},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1},"exturl":false,"use_motion":true,"fancybox":true,"pace":false,"pace_theme":"pace-theme-minimal","canvas_nest":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false,"canvas_ribbon":false,"vendors":{"_internal":"lib","jquery":null,"fancybox":null,"fancybox_css":null,"fastclick":null,"lazyload":null,"velocity":null,"velocity_ui":null,"ua_parser":null,"fontawesome":null,"algolia_instant_js":null,"algolia_instant_css":null,"pace":null,"pace_css":null,"canvas_nest":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_ribbon":null,"han":null},"css":"css","js":"js","images":"images","version":"5.1.1"}}},"excerpt":"<p>JavaScript中创建对象的方式有很多种，每一种方式都有相应的优缺点，总结如下。</p>","more":"<h2 id=\"工厂模式\"><a href=\"#工厂模式\" class=\"headerlink\" title=\"工厂模式\"></a>工厂模式</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">createPerson</span>(<span class=\"params\"> name </span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> obj = <span class=\"keyword\">new</span> <span class=\"built_in\">Object</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    obj.name = name;</span><br><span class=\"line\">    obj.getName = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log( <span class=\"keyword\">this</span>.name );</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> obj;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> person = createPerson(<span class=\"string\">'John'</span>);</span><br></pre></td></tr></table></figure>\n<ul>\n<li>优点：简单直观</li>\n<li>缺点：所有实例都指向同一个原型，无法辨识</li>\n</ul>\n<h2 id=\"构造函数模式\"><a href=\"#构造函数模式\" class=\"headerlink\" title=\"构造函数模式\"></a>构造函数模式</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Person</span>(<span class=\"params\"> name </span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.getName = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log( <span class=\"keyword\">this</span>.name );</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> person1 = <span class=\"keyword\">new</span> Person( <span class=\"string\">'John'</span> );</span><br></pre></td></tr></table></figure>\n<ul>\n<li>优点：实例可以识别一个特定的原型</li>\n<li>缺点：每次实例化都会重新创建所有的方法</li>\n</ul>\n<h2 id=\"构造函数模式优化\"><a href=\"#构造函数模式优化\" class=\"headerlink\" title=\"构造函数模式优化\"></a>构造函数模式优化</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Person</span>(<span class=\"params\"> name </span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.getName = getName;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getName</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log( <span class=\"keyword\">this</span>.name );</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>优点：解决了每次实例化都要创建所有方法的问题</li>\n<li>缺点：没有封装性可言</li>\n</ul>\n<h2 id=\"原型模式\"><a href=\"#原型模式\" class=\"headerlink\" title=\"原型模式\"></a>原型模式</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Person</span>(<span class=\"params\"> name </span>) </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Person.prototype.name = <span class=\"string\">'John'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">Person.prototype.getName= <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log( <span class=\"keyword\">this</span>.name );</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> person1 = <span class=\"keyword\">new</span> Person();</span><br></pre></td></tr></table></figure>\n<ul>\n<li>优点：方法共享，不会被重建</li>\n<li>缺点：所有属性都是共享的；不能初始化参数</li>\n</ul>\n<h2 id=\"原型模式优化\"><a href=\"#原型模式优化\" class=\"headerlink\" title=\"原型模式优化\"></a>原型模式优化</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Person</span>(<span class=\"params\"> name </span>) </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Person.prototype = &#123;</span><br><span class=\"line\">    name: <span class=\"string\">'John'</span>,</span><br><span class=\"line\">    getName: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log( <span class=\"keyword\">this</span>.name );</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> person1 = <span class=\"keyword\">new</span> Person();</span><br></pre></td></tr></table></figure>\n<ul>\n<li>优点：有一定的封装性</li>\n<li>缺点：重写了原型，丢失了constructor属性</li>\n</ul>\n<h2 id=\"原型模式再优化\"><a href=\"#原型模式再优化\" class=\"headerlink\" title=\"原型模式再优化\"></a>原型模式再优化</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Person</span>(<span class=\"params\"> name </span>) </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Person.prototype = &#123;</span><br><span class=\"line\">    <span class=\"keyword\">constructor</span>: Person,</span><br><span class=\"line\">    name: 'John',</span><br><span class=\"line\">    getName: function () &#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log( <span class=\"keyword\">this</span>.name );</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> person1 = <span class=\"keyword\">new</span> Person();</span><br></pre></td></tr></table></figure>\n<ul>\n<li>优点：可以通过constructor找到对应的构造函数</li>\n<li>缺点：原型模式的公共缺点</li>\n</ul>\n<h2 id=\"组合模式\"><a href=\"#组合模式\" class=\"headerlink\" title=\"组合模式\"></a>组合模式</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Person</span>(<span class=\"params\"> name </span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Person.prototype = &#123;</span><br><span class=\"line\">    <span class=\"keyword\">constructor</span>: Person,</span><br><span class=\"line\">    getName: function () &#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log( <span class=\"keyword\">this</span>.name );</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> person1 = <span class=\"keyword\">new</span> Person( <span class=\"string\">'John'</span> );</span><br></pre></td></tr></table></figure>\n<ul>\n<li>优点：使用广泛的模式，没有明显的毛病</li>\n<li>缺点：需要更好的封装性</li>\n</ul>\n<h2 id=\"动态原型模式\"><a href=\"#动态原型模式\" class=\"headerlink\" title=\"动态原型模式\"></a>动态原型模式</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Person</span>(<span class=\"params\"> name </span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> <span class=\"keyword\">this</span>.getName !== <span class=\"string\">'function'</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        Person.prototype.getName = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log( <span class=\"keyword\">this</span>.name );</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> person1 = <span class=\"keyword\">new</span> Person( <span class=\"string\">'John'</span> );</span><br></pre></td></tr></table></figure>\n<ul>\n<li>优点：按需创建方法</li>\n<li>缺点：没有明显的缺点</li>\n</ul>\n<h2 id=\"寄生构造函数模式\"><a href=\"#寄生构造函数模式\" class=\"headerlink\" title=\"寄生构造函数模式\"></a>寄生构造函数模式</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Person</span>(<span class=\"params\"> name </span>) </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> obj = <span class=\"keyword\">new</span> <span class=\"built_in\">Object</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    obj.name = name;</span><br><span class=\"line\">    obj.getName = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log( <span class=\"keyword\">this</span>.name );</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> person1 = <span class=\"keyword\">new</span> Person( <span class=\"string\">'John'</span> );</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( person1 <span class=\"keyword\">instanceof</span> Person ); <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( person1 <span class=\"keyword\">instanceof</span> <span class=\"built_in\">Object</span> ); <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n<p>寄生构造函数和工厂模式的区别就是实例化的时候需要new。</p>\n<ul>\n<li>优点：可以在不影响原生对象基础上扩展原生对象的方法、属性，形成新的构造函数</li>\n<li>缺点：instanceof无法指向构造函数</li>\n</ul>\n<h2 id=\"稳妥构造函数模式\"><a href=\"#稳妥构造函数模式\" class=\"headerlink\" title=\"稳妥构造函数模式\"></a>稳妥构造函数模式</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">person</span>(<span class=\"params\"> name </span>) </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> obj = <span class=\"keyword\">new</span> <span class=\"built_in\">Object</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    obj.getName = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log( name );</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> person1 = person( <span class=\"string\">'John'</span> );</span><br></pre></td></tr></table></figure>\n<p>稳妥对象，指的是没有公共属性，方法中也不引用this的对象。</p>\n<p>与寄生构造函数模式有两点不同：</p>\n<ol>\n<li>方法中不引用this</li>\n<li>实例化不用new</li>\n</ol>\n<ul>\n<li>优点：适合用在比较安全的环境</li>\n<li>缺点：和工厂模式一样，无法识别对象类型</li>\n</ul>"},{"title":"可视化算法","date":"2017-07-20T00:59:30.000Z","_content":"\n一篇赏心悦目的可视化算法文章。\n\n**[Visualizing Algorithms](https://bost.ocks.org/mike/algorithms/)**\n\n附上大牛的博客：**[Mike Bostock](https://bost.ocks.org/mike/)**\n","source":"_posts/2017-07-20-可视化算法.md","raw":"---\ntitle: 可视化算法\ndate: 2017-07-20 08:59:30\ntags:\n- Algorithm\n- 可视化算法\ncategories:\n- 转载\n---\n\n一篇赏心悦目的可视化算法文章。\n\n**[Visualizing Algorithms](https://bost.ocks.org/mike/algorithms/)**\n\n附上大牛的博客：**[Mike Bostock](https://bost.ocks.org/mike/)**\n","slug":"可视化算法","published":1,"updated":"2018-03-27T13:52:33.770Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjskilakm000ng9zb7j3lb1g3","content":"<p>一篇赏心悦目的可视化算法文章。</p>\n<p><strong><a href=\"https://bost.ocks.org/mike/algorithms/\" target=\"_blank\" rel=\"noopener\">Visualizing Algorithms</a></strong></p>\n<p>附上大牛的博客：<strong><a href=\"https://bost.ocks.org/mike/\" target=\"_blank\" rel=\"noopener\">Mike Bostock</a></strong></p>\n","site":{"data":{"next":{"favicon":"/favicon.ico","keywords":"Hexo, NexT","rss":null,"since":2016,"authoricon":"heart","copyright":true,"canonical":true,"seo":true,"index_with_subtitle":false,"menu":{"home":"/","categories":"/categories/","archives":"/archives/","tags":"/tags/","about":"/about/"},"menu_icons":{"enable":true,"home":"home","about":"user","categories":"th","schedule":"calendar","tags":"tags","archives":"archive","sitemap":"sitemap","commonweal":"heartbeat"},"scheme":"Mist","social":{"Github":"https://github.com/ricosmall"},"social_icons":{"enable":true,"GitHub":"github","Twitter":"twitter","Weibo":"weibo"},"avatar":"/uploads/avatar.png","toc":{"enable":true,"number":true,"wrap":false},"sidebar":{"position":"left","display":"post","offset":12,"offset_float":0,"b2t":false,"scrollpercent":false,"onmobile":false},"scroll_to_more":true,"save_scroll":false,"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"post_meta":{"item_text":true,"created_at":true,"updated_at":false,"categories":true},"post_wordcount":{"item_text":true,"wordcount":false,"min2read":false,"separated_meta":true},"post_copyright":{"enable":false,"license":"CC BY-NC-SA 3.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/3.0/"},"custom_logo":{"enabled":false,"image":null},"highlight_theme":"night bright","font":{"enable":true,"host":null,"global":{"external":true,"family":"Lato"},"headings":{"external":true,"family":null},"posts":{"external":true,"family":null},"logo":{"external":true,"family":null,"size":null},"codes":{"external":true,"family":"Menlo, Monospace","size":null}},"mathjax":{"enable":true,"per_page":false,"cdn":"//cdn.bootcss.com/mathjax/2.7.1/latest.js?config=TeX-AMS-MML_HTMLorMML"},"han":false,"disqus":{"enable":false,"shortname":"ricosmall","count":false},"changyan":{"enable":false,"appid":null,"appkey":null},"duoshuo_info":{"ua_enable":true,"admin_enable":false,"user_id":0},"facebook_sdk":{"enable":false,"app_id":null,"fb_admin":null,"like_button":null,"webmaster":null},"facebook_comments_plugin":{"enable":false,"num_of_posts":10,"width":"100%","scheme":"light"},"vkontakte_api":{"enable":false,"app_id":null,"like":true,"comments":true,"num_of_posts":10},"rating":{"enable":false,"id":null,"color":"fc6423"},"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null},"busuanzi_count":{"enable":true,"site_uv":true,"site_uv_header":"<i class=\"fa fa-user\"></i>访问人数","site_uv_footer":null,"site_pv":true,"site_pv_header":"<i class=\"fa fa-eye\"></i>总访问量","site_pv_footer":"次","page_pv":true,"page_pv_header":"<i class=\"fa fa-file-o\"></i>浏览","page_pv_footer":"次"},"baidu_push":false,"calendar":{"enable":false,"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"timeZone":null,"showDeleted":false,"singleEvents":true,"maxResults":250},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1},"exturl":false,"use_motion":true,"fancybox":true,"pace":false,"pace_theme":"pace-theme-minimal","canvas_nest":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false,"canvas_ribbon":false,"vendors":{"_internal":"lib","jquery":null,"fancybox":null,"fancybox_css":null,"fastclick":null,"lazyload":null,"velocity":null,"velocity_ui":null,"ua_parser":null,"fontawesome":null,"algolia_instant_js":null,"algolia_instant_css":null,"pace":null,"pace_css":null,"canvas_nest":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_ribbon":null,"han":null},"css":"css","js":"js","images":"images","version":"5.1.1"}}},"excerpt":"","more":"<p>一篇赏心悦目的可视化算法文章。</p>\n<p><strong><a href=\"https://bost.ocks.org/mike/algorithms/\" target=\"_blank\" rel=\"noopener\">Visualizing Algorithms</a></strong></p>\n<p>附上大牛的博客：<strong><a href=\"https://bost.ocks.org/mike/\" target=\"_blank\" rel=\"noopener\">Mike Bostock</a></strong></p>\n"},{"title":"JavaScript标准编码风格","date":"2017-07-04T02:24:03.000Z","_content":"\n> JavaScript 代码规范，自带 linter & 代码自动修正\n\n> - **无须配置。** 史上最便捷的统一代码风格的方式，轻松拥有。\n> - **自动代码格式化。** 只需运行 standard --fix 从此和脏乱差的代码说再见。\n> - **提前发现风格及程序问题。** 减少代码审查过程中反反复复的修改过程，节约时间。\n\n<!-- more -->\n\n**[JavaScript标准风格（首页）](https://standardjs.com/readme-zhcn.html)**\n\n**[JavaScript Standard Style（全文）](https://standardjs.com/rules-zhcn.html#javascript-standard-style)**\n\n下面是ExpressJS项目中遵循该风格的示例代码：\n\n```javascript\n/*!\n * body-parser\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar deprecate = require('depd')('body-parser')\n\n/**\n * Cache of loaded parsers.\n * @private\n */\n\nvar parsers = Object.create(null)\n\n/**\n * @typedef Parsers\n * @type {function}\n * @property {function} json\n * @property {function} raw\n * @property {function} text\n * @property {function} urlencoded\n */\n\n/**\n * Module exports.\n * @type {Parsers}\n */\n\nexports = module.exports = deprecate.function(bodyParser,\n  'bodyParser: use individual json/urlencoded middlewares')\n\n/**\n * JSON parser.\n * @public\n */\n\nObject.defineProperty(exports, 'json', {\n  configurable: true,\n  enumerable: true,\n  get: createParserGetter('json')\n})\n\n/**\n * Raw parser.\n * @public\n */\n\nObject.defineProperty(exports, 'raw', {\n  configurable: true,\n  enumerable: true,\n  get: createParserGetter('raw')\n})\n\n/**\n * Text parser.\n * @public\n */\n\nObject.defineProperty(exports, 'text', {\n  configurable: true,\n  enumerable: true,\n  get: createParserGetter('text')\n})\n\n/**\n * URL-encoded parser.\n * @public\n */\n\nObject.defineProperty(exports, 'urlencoded', {\n  configurable: true,\n  enumerable: true,\n  get: createParserGetter('urlencoded')\n})\n\n/**\n * Create a middleware to parse json and urlencoded bodies.\n *\n * @param {object} [options]\n * @return {function}\n * @deprecated\n * @public\n */\n\nfunction bodyParser (options) {\n  var opts = {}\n\n  // exclude type option\n  if (options) {\n    for (var prop in options) {\n      if (prop !== 'type') {\n        opts[prop] = options[prop]\n      }\n    }\n  }\n\n  var _urlencoded = exports.urlencoded(opts)\n  var _json = exports.json(opts)\n\n  return function bodyParser (req, res, next) {\n    _json(req, res, function (err) {\n      if (err) return next(err)\n      _urlencoded(req, res, next)\n    })\n  }\n}\n\n/**\n * Create a getter for loading a parser.\n * @private\n */\n\nfunction createParserGetter (name) {\n  return function get () {\n    return loadParser(name)\n  }\n}\n\n/**\n * Load a parser module.\n * @private\n */\n\nfunction loadParser (parserName) {\n  var parser = parsers[parserName]\n\n  if (parser !== undefined) {\n    return parser\n  }\n\n  // this uses a switch for static require analysis\n  switch (parserName) {\n    case 'json':\n      parser = require('./lib/types/json')\n      break\n    case 'raw':\n      parser = require('./lib/types/raw')\n      break\n    case 'text':\n      parser = require('./lib/types/text')\n      break\n    case 'urlencoded':\n      parser = require('./lib/types/urlencoded')\n      break\n  }\n\n  // store to prevent invoking require()\n  return (parsers[parserName] = parser)\n}\n```\n","source":"_posts/2017-07-04-JavaScript标准编码风格.md","raw":"---\ntitle: JavaScript标准编码风格\ndate: 2017-07-04 10:24:03\ntags:\n- JavaScript\n- 编码风格\ncategories:\n- 规范\n---\n\n> JavaScript 代码规范，自带 linter & 代码自动修正\n\n> - **无须配置。** 史上最便捷的统一代码风格的方式，轻松拥有。\n> - **自动代码格式化。** 只需运行 standard --fix 从此和脏乱差的代码说再见。\n> - **提前发现风格及程序问题。** 减少代码审查过程中反反复复的修改过程，节约时间。\n\n<!-- more -->\n\n**[JavaScript标准风格（首页）](https://standardjs.com/readme-zhcn.html)**\n\n**[JavaScript Standard Style（全文）](https://standardjs.com/rules-zhcn.html#javascript-standard-style)**\n\n下面是ExpressJS项目中遵循该风格的示例代码：\n\n```javascript\n/*!\n * body-parser\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar deprecate = require('depd')('body-parser')\n\n/**\n * Cache of loaded parsers.\n * @private\n */\n\nvar parsers = Object.create(null)\n\n/**\n * @typedef Parsers\n * @type {function}\n * @property {function} json\n * @property {function} raw\n * @property {function} text\n * @property {function} urlencoded\n */\n\n/**\n * Module exports.\n * @type {Parsers}\n */\n\nexports = module.exports = deprecate.function(bodyParser,\n  'bodyParser: use individual json/urlencoded middlewares')\n\n/**\n * JSON parser.\n * @public\n */\n\nObject.defineProperty(exports, 'json', {\n  configurable: true,\n  enumerable: true,\n  get: createParserGetter('json')\n})\n\n/**\n * Raw parser.\n * @public\n */\n\nObject.defineProperty(exports, 'raw', {\n  configurable: true,\n  enumerable: true,\n  get: createParserGetter('raw')\n})\n\n/**\n * Text parser.\n * @public\n */\n\nObject.defineProperty(exports, 'text', {\n  configurable: true,\n  enumerable: true,\n  get: createParserGetter('text')\n})\n\n/**\n * URL-encoded parser.\n * @public\n */\n\nObject.defineProperty(exports, 'urlencoded', {\n  configurable: true,\n  enumerable: true,\n  get: createParserGetter('urlencoded')\n})\n\n/**\n * Create a middleware to parse json and urlencoded bodies.\n *\n * @param {object} [options]\n * @return {function}\n * @deprecated\n * @public\n */\n\nfunction bodyParser (options) {\n  var opts = {}\n\n  // exclude type option\n  if (options) {\n    for (var prop in options) {\n      if (prop !== 'type') {\n        opts[prop] = options[prop]\n      }\n    }\n  }\n\n  var _urlencoded = exports.urlencoded(opts)\n  var _json = exports.json(opts)\n\n  return function bodyParser (req, res, next) {\n    _json(req, res, function (err) {\n      if (err) return next(err)\n      _urlencoded(req, res, next)\n    })\n  }\n}\n\n/**\n * Create a getter for loading a parser.\n * @private\n */\n\nfunction createParserGetter (name) {\n  return function get () {\n    return loadParser(name)\n  }\n}\n\n/**\n * Load a parser module.\n * @private\n */\n\nfunction loadParser (parserName) {\n  var parser = parsers[parserName]\n\n  if (parser !== undefined) {\n    return parser\n  }\n\n  // this uses a switch for static require analysis\n  switch (parserName) {\n    case 'json':\n      parser = require('./lib/types/json')\n      break\n    case 'raw':\n      parser = require('./lib/types/raw')\n      break\n    case 'text':\n      parser = require('./lib/types/text')\n      break\n    case 'urlencoded':\n      parser = require('./lib/types/urlencoded')\n      break\n  }\n\n  // store to prevent invoking require()\n  return (parsers[parserName] = parser)\n}\n```\n","slug":"JavaScript标准编码风格","published":1,"updated":"2018-03-27T13:52:33.770Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjskilakn000pg9zbf3s869tx","content":"<blockquote>\n<p>JavaScript 代码规范，自带 linter &amp; 代码自动修正</p>\n</blockquote>\n<blockquote>\n<ul>\n<li><strong>无须配置。</strong> 史上最便捷的统一代码风格的方式，轻松拥有。</li>\n<li><strong>自动代码格式化。</strong> 只需运行 standard –fix 从此和脏乱差的代码说再见。</li>\n<li><strong>提前发现风格及程序问题。</strong> 减少代码审查过程中反反复复的修改过程，节约时间。</li>\n</ul>\n</blockquote>\n<a id=\"more\"></a>\n<p><strong><a href=\"https://standardjs.com/readme-zhcn.html\" target=\"_blank\" rel=\"noopener\">JavaScript标准风格（首页）</a></strong></p>\n<p><strong><a href=\"https://standardjs.com/rules-zhcn.html#javascript-standard-style\" target=\"_blank\" rel=\"noopener\">JavaScript Standard Style（全文）</a></strong></p>\n<p>下面是ExpressJS项目中遵循该风格的示例代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*!</span></span><br><span class=\"line\"><span class=\"comment\"> * body-parser</span></span><br><span class=\"line\"><span class=\"comment\"> * Copyright(c) 2014-2015 Douglas Christopher Wilson</span></span><br><span class=\"line\"><span class=\"comment\"> * MIT Licensed</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">'use strict'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Module dependencies.</span></span><br><span class=\"line\"><span class=\"comment\"> * @private</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> deprecate = <span class=\"built_in\">require</span>(<span class=\"string\">'depd'</span>)(<span class=\"string\">'body-parser'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Cache of loaded parsers.</span></span><br><span class=\"line\"><span class=\"comment\"> * @private</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> parsers = <span class=\"built_in\">Object</span>.create(<span class=\"literal\">null</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * @typedef Parsers</span></span><br><span class=\"line\"><span class=\"comment\"> * @type &#123;function&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> * @property &#123;function&#125; json</span></span><br><span class=\"line\"><span class=\"comment\"> * @property &#123;function&#125; raw</span></span><br><span class=\"line\"><span class=\"comment\"> * @property &#123;function&#125; text</span></span><br><span class=\"line\"><span class=\"comment\"> * @property &#123;function&#125; urlencoded</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Module exports.</span></span><br><span class=\"line\"><span class=\"comment\"> * @type &#123;Parsers&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\">exports = <span class=\"built_in\">module</span>.exports = deprecate.function(bodyParser,</span><br><span class=\"line\">  <span class=\"string\">'bodyParser: use individual json/urlencoded middlewares'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * JSON parser.</span></span><br><span class=\"line\"><span class=\"comment\"> * @public</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">Object</span>.defineProperty(exports, <span class=\"string\">'json'</span>, &#123;</span><br><span class=\"line\">  configurable: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  enumerable: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  <span class=\"keyword\">get</span>: createParserGetter('json')</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">/**</span><br><span class=\"line\"> * Raw parser.</span><br><span class=\"line\"> * @public</span><br><span class=\"line\"> */</span><br><span class=\"line\"></span><br><span class=\"line\">Object.defineProperty(exports, 'raw', &#123;</span><br><span class=\"line\">  configurable: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  enumerable: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  <span class=\"keyword\">get</span>: createParserGetter('raw')</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">/**</span><br><span class=\"line\"> * Text parser.</span><br><span class=\"line\"> * @public</span><br><span class=\"line\"> */</span><br><span class=\"line\"></span><br><span class=\"line\">Object.defineProperty(exports, 'text', &#123;</span><br><span class=\"line\">  configurable: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  enumerable: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  <span class=\"keyword\">get</span>: createParserGetter('text')</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">/**</span><br><span class=\"line\"> * URL-encoded parser.</span><br><span class=\"line\"> * @public</span><br><span class=\"line\"> */</span><br><span class=\"line\"></span><br><span class=\"line\">Object.defineProperty(exports, 'urlencoded', &#123;</span><br><span class=\"line\">  configurable: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  enumerable: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  <span class=\"keyword\">get</span>: createParserGetter('urlencoded')</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">/**</span><br><span class=\"line\"> * Create a middleware to parse json and urlencoded bodies.</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * @param &#123;object&#125; [options]</span><br><span class=\"line\"> * @<span class=\"keyword\">return</span> &#123;<span class=\"function\"><span class=\"keyword\">function</span>&#125;</span></span><br><span class=\"line\"><span class=\"function\"> * @<span class=\"title\">deprecated</span></span></span><br><span class=\"line\"><span class=\"function\"> * @<span class=\"title\">public</span></span></span><br><span class=\"line\"><span class=\"function\"> */</span></span><br><span class=\"line\"><span class=\"function\"></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">function</span> <span class=\"title\">bodyParser</span> (<span class=\"params\">options</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> opts = &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// exclude type option</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (options) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> prop <span class=\"keyword\">in</span> options) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (prop !== <span class=\"string\">'type'</span>) &#123;</span><br><span class=\"line\">        opts[prop] = options[prop]</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> _urlencoded = exports.urlencoded(opts)</span><br><span class=\"line\">  <span class=\"keyword\">var</span> _json = exports.json(opts)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bodyParser</span> (<span class=\"params\">req, res, next</span>) </span>&#123;</span><br><span class=\"line\">    _json(req, res, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">err</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (err) <span class=\"keyword\">return</span> next(err)</span><br><span class=\"line\">      _urlencoded(req, res, next)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Create a getter for loading a parser.</span></span><br><span class=\"line\"><span class=\"comment\"> * @private</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">createParserGetter</span> (<span class=\"params\">name</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">get</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> loadParser(name)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Load a parser module.</span></span><br><span class=\"line\"><span class=\"comment\"> * @private</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">loadParser</span> (<span class=\"params\">parserName</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> parser = parsers[parserName]</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (parser !== <span class=\"literal\">undefined</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> parser</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// this uses a switch for static require analysis</span></span><br><span class=\"line\">  <span class=\"keyword\">switch</span> (parserName) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">'json'</span>:</span><br><span class=\"line\">      parser = <span class=\"built_in\">require</span>(<span class=\"string\">'./lib/types/json'</span>)</span><br><span class=\"line\">      <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">'raw'</span>:</span><br><span class=\"line\">      parser = <span class=\"built_in\">require</span>(<span class=\"string\">'./lib/types/raw'</span>)</span><br><span class=\"line\">      <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">'text'</span>:</span><br><span class=\"line\">      parser = <span class=\"built_in\">require</span>(<span class=\"string\">'./lib/types/text'</span>)</span><br><span class=\"line\">      <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">'urlencoded'</span>:</span><br><span class=\"line\">      parser = <span class=\"built_in\">require</span>(<span class=\"string\">'./lib/types/urlencoded'</span>)</span><br><span class=\"line\">      <span class=\"keyword\">break</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// store to prevent invoking require()</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> (parsers[parserName] = parser)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{"next":{"favicon":"/favicon.ico","keywords":"Hexo, NexT","rss":null,"since":2016,"authoricon":"heart","copyright":true,"canonical":true,"seo":true,"index_with_subtitle":false,"menu":{"home":"/","categories":"/categories/","archives":"/archives/","tags":"/tags/","about":"/about/"},"menu_icons":{"enable":true,"home":"home","about":"user","categories":"th","schedule":"calendar","tags":"tags","archives":"archive","sitemap":"sitemap","commonweal":"heartbeat"},"scheme":"Mist","social":{"Github":"https://github.com/ricosmall"},"social_icons":{"enable":true,"GitHub":"github","Twitter":"twitter","Weibo":"weibo"},"avatar":"/uploads/avatar.png","toc":{"enable":true,"number":true,"wrap":false},"sidebar":{"position":"left","display":"post","offset":12,"offset_float":0,"b2t":false,"scrollpercent":false,"onmobile":false},"scroll_to_more":true,"save_scroll":false,"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"post_meta":{"item_text":true,"created_at":true,"updated_at":false,"categories":true},"post_wordcount":{"item_text":true,"wordcount":false,"min2read":false,"separated_meta":true},"post_copyright":{"enable":false,"license":"CC BY-NC-SA 3.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/3.0/"},"custom_logo":{"enabled":false,"image":null},"highlight_theme":"night bright","font":{"enable":true,"host":null,"global":{"external":true,"family":"Lato"},"headings":{"external":true,"family":null},"posts":{"external":true,"family":null},"logo":{"external":true,"family":null,"size":null},"codes":{"external":true,"family":"Menlo, Monospace","size":null}},"mathjax":{"enable":true,"per_page":false,"cdn":"//cdn.bootcss.com/mathjax/2.7.1/latest.js?config=TeX-AMS-MML_HTMLorMML"},"han":false,"disqus":{"enable":false,"shortname":"ricosmall","count":false},"changyan":{"enable":false,"appid":null,"appkey":null},"duoshuo_info":{"ua_enable":true,"admin_enable":false,"user_id":0},"facebook_sdk":{"enable":false,"app_id":null,"fb_admin":null,"like_button":null,"webmaster":null},"facebook_comments_plugin":{"enable":false,"num_of_posts":10,"width":"100%","scheme":"light"},"vkontakte_api":{"enable":false,"app_id":null,"like":true,"comments":true,"num_of_posts":10},"rating":{"enable":false,"id":null,"color":"fc6423"},"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null},"busuanzi_count":{"enable":true,"site_uv":true,"site_uv_header":"<i class=\"fa fa-user\"></i>访问人数","site_uv_footer":null,"site_pv":true,"site_pv_header":"<i class=\"fa fa-eye\"></i>总访问量","site_pv_footer":"次","page_pv":true,"page_pv_header":"<i class=\"fa fa-file-o\"></i>浏览","page_pv_footer":"次"},"baidu_push":false,"calendar":{"enable":false,"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"timeZone":null,"showDeleted":false,"singleEvents":true,"maxResults":250},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1},"exturl":false,"use_motion":true,"fancybox":true,"pace":false,"pace_theme":"pace-theme-minimal","canvas_nest":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false,"canvas_ribbon":false,"vendors":{"_internal":"lib","jquery":null,"fancybox":null,"fancybox_css":null,"fastclick":null,"lazyload":null,"velocity":null,"velocity_ui":null,"ua_parser":null,"fontawesome":null,"algolia_instant_js":null,"algolia_instant_css":null,"pace":null,"pace_css":null,"canvas_nest":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_ribbon":null,"han":null},"css":"css","js":"js","images":"images","version":"5.1.1"}}},"excerpt":"<blockquote>\n<p>JavaScript 代码规范，自带 linter &amp; 代码自动修正</p>\n</blockquote>\n<blockquote>\n<ul>\n<li><strong>无须配置。</strong> 史上最便捷的统一代码风格的方式，轻松拥有。</li>\n<li><strong>自动代码格式化。</strong> 只需运行 standard –fix 从此和脏乱差的代码说再见。</li>\n<li><strong>提前发现风格及程序问题。</strong> 减少代码审查过程中反反复复的修改过程，节约时间。</li>\n</ul>\n</blockquote>","more":"<p><strong><a href=\"https://standardjs.com/readme-zhcn.html\" target=\"_blank\" rel=\"noopener\">JavaScript标准风格（首页）</a></strong></p>\n<p><strong><a href=\"https://standardjs.com/rules-zhcn.html#javascript-standard-style\" target=\"_blank\" rel=\"noopener\">JavaScript Standard Style（全文）</a></strong></p>\n<p>下面是ExpressJS项目中遵循该风格的示例代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*!</span></span><br><span class=\"line\"><span class=\"comment\"> * body-parser</span></span><br><span class=\"line\"><span class=\"comment\"> * Copyright(c) 2014-2015 Douglas Christopher Wilson</span></span><br><span class=\"line\"><span class=\"comment\"> * MIT Licensed</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">'use strict'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Module dependencies.</span></span><br><span class=\"line\"><span class=\"comment\"> * @private</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> deprecate = <span class=\"built_in\">require</span>(<span class=\"string\">'depd'</span>)(<span class=\"string\">'body-parser'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Cache of loaded parsers.</span></span><br><span class=\"line\"><span class=\"comment\"> * @private</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> parsers = <span class=\"built_in\">Object</span>.create(<span class=\"literal\">null</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * @typedef Parsers</span></span><br><span class=\"line\"><span class=\"comment\"> * @type &#123;function&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> * @property &#123;function&#125; json</span></span><br><span class=\"line\"><span class=\"comment\"> * @property &#123;function&#125; raw</span></span><br><span class=\"line\"><span class=\"comment\"> * @property &#123;function&#125; text</span></span><br><span class=\"line\"><span class=\"comment\"> * @property &#123;function&#125; urlencoded</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Module exports.</span></span><br><span class=\"line\"><span class=\"comment\"> * @type &#123;Parsers&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\">exports = <span class=\"built_in\">module</span>.exports = deprecate.function(bodyParser,</span><br><span class=\"line\">  <span class=\"string\">'bodyParser: use individual json/urlencoded middlewares'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * JSON parser.</span></span><br><span class=\"line\"><span class=\"comment\"> * @public</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">Object</span>.defineProperty(exports, <span class=\"string\">'json'</span>, &#123;</span><br><span class=\"line\">  configurable: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  enumerable: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  <span class=\"keyword\">get</span>: createParserGetter('json')</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">/**</span><br><span class=\"line\"> * Raw parser.</span><br><span class=\"line\"> * @public</span><br><span class=\"line\"> */</span><br><span class=\"line\"></span><br><span class=\"line\">Object.defineProperty(exports, 'raw', &#123;</span><br><span class=\"line\">  configurable: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  enumerable: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  <span class=\"keyword\">get</span>: createParserGetter('raw')</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">/**</span><br><span class=\"line\"> * Text parser.</span><br><span class=\"line\"> * @public</span><br><span class=\"line\"> */</span><br><span class=\"line\"></span><br><span class=\"line\">Object.defineProperty(exports, 'text', &#123;</span><br><span class=\"line\">  configurable: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  enumerable: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  <span class=\"keyword\">get</span>: createParserGetter('text')</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">/**</span><br><span class=\"line\"> * URL-encoded parser.</span><br><span class=\"line\"> * @public</span><br><span class=\"line\"> */</span><br><span class=\"line\"></span><br><span class=\"line\">Object.defineProperty(exports, 'urlencoded', &#123;</span><br><span class=\"line\">  configurable: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  enumerable: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  <span class=\"keyword\">get</span>: createParserGetter('urlencoded')</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">/**</span><br><span class=\"line\"> * Create a middleware to parse json and urlencoded bodies.</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * @param &#123;object&#125; [options]</span><br><span class=\"line\"> * @<span class=\"keyword\">return</span> &#123;<span class=\"function\"><span class=\"keyword\">function</span>&#125;</span></span><br><span class=\"line\"><span class=\"function\"> * @<span class=\"title\">deprecated</span></span></span><br><span class=\"line\"><span class=\"function\"> * @<span class=\"title\">public</span></span></span><br><span class=\"line\"><span class=\"function\"> */</span></span><br><span class=\"line\"><span class=\"function\"></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">function</span> <span class=\"title\">bodyParser</span> (<span class=\"params\">options</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> opts = &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// exclude type option</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (options) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> prop <span class=\"keyword\">in</span> options) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (prop !== <span class=\"string\">'type'</span>) &#123;</span><br><span class=\"line\">        opts[prop] = options[prop]</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> _urlencoded = exports.urlencoded(opts)</span><br><span class=\"line\">  <span class=\"keyword\">var</span> _json = exports.json(opts)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bodyParser</span> (<span class=\"params\">req, res, next</span>) </span>&#123;</span><br><span class=\"line\">    _json(req, res, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">err</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (err) <span class=\"keyword\">return</span> next(err)</span><br><span class=\"line\">      _urlencoded(req, res, next)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Create a getter for loading a parser.</span></span><br><span class=\"line\"><span class=\"comment\"> * @private</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">createParserGetter</span> (<span class=\"params\">name</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">get</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> loadParser(name)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Load a parser module.</span></span><br><span class=\"line\"><span class=\"comment\"> * @private</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">loadParser</span> (<span class=\"params\">parserName</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> parser = parsers[parserName]</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (parser !== <span class=\"literal\">undefined</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> parser</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// this uses a switch for static require analysis</span></span><br><span class=\"line\">  <span class=\"keyword\">switch</span> (parserName) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">'json'</span>:</span><br><span class=\"line\">      parser = <span class=\"built_in\">require</span>(<span class=\"string\">'./lib/types/json'</span>)</span><br><span class=\"line\">      <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">'raw'</span>:</span><br><span class=\"line\">      parser = <span class=\"built_in\">require</span>(<span class=\"string\">'./lib/types/raw'</span>)</span><br><span class=\"line\">      <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">'text'</span>:</span><br><span class=\"line\">      parser = <span class=\"built_in\">require</span>(<span class=\"string\">'./lib/types/text'</span>)</span><br><span class=\"line\">      <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">'urlencoded'</span>:</span><br><span class=\"line\">      parser = <span class=\"built_in\">require</span>(<span class=\"string\">'./lib/types/urlencoded'</span>)</span><br><span class=\"line\">      <span class=\"keyword\">break</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// store to prevent invoking require()</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> (parsers[parserName] = parser)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"JavaScript模块简史","date":"2017-07-04T02:40:22.000Z","_content":"\n> 你是否是 JavaScript 新手？并且对模块，模块加载器和模块打包器感到困惑吗？或者你已经编写了一段时间的 JavaScript ，但是没法掌握模块的一些术语？你是否听过 CommonJS、AMD、Browserify、SystemJS、Webpack、JSPM 等等术语，但是不理解我们为什么需要它们？\n\n> 我会试着解释他们是什么，他们试图解决什么问题，以及他们如何解决这个问题。\n\n<!-- more -->\n\n## 中文翻译地址\n\n**[JavaScript模块简史](http://www.css88.com/archives/7628)**\n\n## 英文原版地址\n\n**[Brief history of JavaScript Modules](https://medium.com/@sungyeol.choi/javascript-module-module-loader-module-bundler-es6-module-confused-yet-6343510e7bde)**\n\n英文地址需要自备梯子。\n","source":"_posts/2017-07-04-JavaScript模块简史.md","raw":"---\ntitle: JavaScript模块简史\ndate: 2017-07-04 10:40:22\ntags:\n- JavaScript\n- 模块化\ncategories:\n- 转载\n---\n\n> 你是否是 JavaScript 新手？并且对模块，模块加载器和模块打包器感到困惑吗？或者你已经编写了一段时间的 JavaScript ，但是没法掌握模块的一些术语？你是否听过 CommonJS、AMD、Browserify、SystemJS、Webpack、JSPM 等等术语，但是不理解我们为什么需要它们？\n\n> 我会试着解释他们是什么，他们试图解决什么问题，以及他们如何解决这个问题。\n\n<!-- more -->\n\n## 中文翻译地址\n\n**[JavaScript模块简史](http://www.css88.com/archives/7628)**\n\n## 英文原版地址\n\n**[Brief history of JavaScript Modules](https://medium.com/@sungyeol.choi/javascript-module-module-loader-module-bundler-es6-module-confused-yet-6343510e7bde)**\n\n英文地址需要自备梯子。\n","slug":"JavaScript模块简史","published":1,"updated":"2018-03-27T13:52:33.770Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjskilako000ug9zbbqi6ghn0","content":"<blockquote>\n<p>你是否是 JavaScript 新手？并且对模块，模块加载器和模块打包器感到困惑吗？或者你已经编写了一段时间的 JavaScript ，但是没法掌握模块的一些术语？你是否听过 CommonJS、AMD、Browserify、SystemJS、Webpack、JSPM 等等术语，但是不理解我们为什么需要它们？</p>\n</blockquote>\n<blockquote>\n<p>我会试着解释他们是什么，他们试图解决什么问题，以及他们如何解决这个问题。</p>\n</blockquote>\n<a id=\"more\"></a>\n<h2 id=\"中文翻译地址\"><a href=\"#中文翻译地址\" class=\"headerlink\" title=\"中文翻译地址\"></a>中文翻译地址</h2><p><strong><a href=\"http://www.css88.com/archives/7628\" target=\"_blank\" rel=\"noopener\">JavaScript模块简史</a></strong></p>\n<h2 id=\"英文原版地址\"><a href=\"#英文原版地址\" class=\"headerlink\" title=\"英文原版地址\"></a>英文原版地址</h2><p><strong><a href=\"https://medium.com/@sungyeol.choi/javascript-module-module-loader-module-bundler-es6-module-confused-yet-6343510e7bde\" target=\"_blank\" rel=\"noopener\">Brief history of JavaScript Modules</a></strong></p>\n<p>英文地址需要自备梯子。</p>\n","site":{"data":{"next":{"favicon":"/favicon.ico","keywords":"Hexo, NexT","rss":null,"since":2016,"authoricon":"heart","copyright":true,"canonical":true,"seo":true,"index_with_subtitle":false,"menu":{"home":"/","categories":"/categories/","archives":"/archives/","tags":"/tags/","about":"/about/"},"menu_icons":{"enable":true,"home":"home","about":"user","categories":"th","schedule":"calendar","tags":"tags","archives":"archive","sitemap":"sitemap","commonweal":"heartbeat"},"scheme":"Mist","social":{"Github":"https://github.com/ricosmall"},"social_icons":{"enable":true,"GitHub":"github","Twitter":"twitter","Weibo":"weibo"},"avatar":"/uploads/avatar.png","toc":{"enable":true,"number":true,"wrap":false},"sidebar":{"position":"left","display":"post","offset":12,"offset_float":0,"b2t":false,"scrollpercent":false,"onmobile":false},"scroll_to_more":true,"save_scroll":false,"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"post_meta":{"item_text":true,"created_at":true,"updated_at":false,"categories":true},"post_wordcount":{"item_text":true,"wordcount":false,"min2read":false,"separated_meta":true},"post_copyright":{"enable":false,"license":"CC BY-NC-SA 3.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/3.0/"},"custom_logo":{"enabled":false,"image":null},"highlight_theme":"night bright","font":{"enable":true,"host":null,"global":{"external":true,"family":"Lato"},"headings":{"external":true,"family":null},"posts":{"external":true,"family":null},"logo":{"external":true,"family":null,"size":null},"codes":{"external":true,"family":"Menlo, Monospace","size":null}},"mathjax":{"enable":true,"per_page":false,"cdn":"//cdn.bootcss.com/mathjax/2.7.1/latest.js?config=TeX-AMS-MML_HTMLorMML"},"han":false,"disqus":{"enable":false,"shortname":"ricosmall","count":false},"changyan":{"enable":false,"appid":null,"appkey":null},"duoshuo_info":{"ua_enable":true,"admin_enable":false,"user_id":0},"facebook_sdk":{"enable":false,"app_id":null,"fb_admin":null,"like_button":null,"webmaster":null},"facebook_comments_plugin":{"enable":false,"num_of_posts":10,"width":"100%","scheme":"light"},"vkontakte_api":{"enable":false,"app_id":null,"like":true,"comments":true,"num_of_posts":10},"rating":{"enable":false,"id":null,"color":"fc6423"},"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null},"busuanzi_count":{"enable":true,"site_uv":true,"site_uv_header":"<i class=\"fa fa-user\"></i>访问人数","site_uv_footer":null,"site_pv":true,"site_pv_header":"<i class=\"fa fa-eye\"></i>总访问量","site_pv_footer":"次","page_pv":true,"page_pv_header":"<i class=\"fa fa-file-o\"></i>浏览","page_pv_footer":"次"},"baidu_push":false,"calendar":{"enable":false,"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"timeZone":null,"showDeleted":false,"singleEvents":true,"maxResults":250},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1},"exturl":false,"use_motion":true,"fancybox":true,"pace":false,"pace_theme":"pace-theme-minimal","canvas_nest":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false,"canvas_ribbon":false,"vendors":{"_internal":"lib","jquery":null,"fancybox":null,"fancybox_css":null,"fastclick":null,"lazyload":null,"velocity":null,"velocity_ui":null,"ua_parser":null,"fontawesome":null,"algolia_instant_js":null,"algolia_instant_css":null,"pace":null,"pace_css":null,"canvas_nest":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_ribbon":null,"han":null},"css":"css","js":"js","images":"images","version":"5.1.1"}}},"excerpt":"<blockquote>\n<p>你是否是 JavaScript 新手？并且对模块，模块加载器和模块打包器感到困惑吗？或者你已经编写了一段时间的 JavaScript ，但是没法掌握模块的一些术语？你是否听过 CommonJS、AMD、Browserify、SystemJS、Webpack、JSPM 等等术语，但是不理解我们为什么需要它们？</p>\n</blockquote>\n<blockquote>\n<p>我会试着解释他们是什么，他们试图解决什么问题，以及他们如何解决这个问题。</p>\n</blockquote>","more":"<h2 id=\"中文翻译地址\"><a href=\"#中文翻译地址\" class=\"headerlink\" title=\"中文翻译地址\"></a>中文翻译地址</h2><p><strong><a href=\"http://www.css88.com/archives/7628\" target=\"_blank\" rel=\"noopener\">JavaScript模块简史</a></strong></p>\n<h2 id=\"英文原版地址\"><a href=\"#英文原版地址\" class=\"headerlink\" title=\"英文原版地址\"></a>英文原版地址</h2><p><strong><a href=\"https://medium.com/@sungyeol.choi/javascript-module-module-loader-module-bundler-es6-module-confused-yet-6343510e7bde\" target=\"_blank\" rel=\"noopener\">Brief history of JavaScript Modules</a></strong></p>\n<p>英文地址需要自备梯子。</p>"},{"title":"CSS多行文本溢出省略显示","date":"2017-08-01T09:26:02.000Z","_content":"\n> 本文参考了[Lomu](http://lomu.me/)的文章[CSS多行文本溢出省略显示](http://lomu.me/post/css-multiline-text-overflow)\n\n文本溢出我们经常用到的应该就是text-overflow:ellipsis了，相信大家也很熟悉，但是对于多行文本的溢出处理确接触的不是很多，最近在公司群里面有同事问到，并且自己也遇到过这个问题，所以专门研究过这个问题。\n\n<!-- more -->\n\n首先我们回顾一下以前实现单行缩略是可以通过下面的代码实现的（部分浏览器需要设置宽度）：\n\n```css\np {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n}\n```\n\n## WebKit内核浏览器解决办法\n\n首先，WebKit内核的浏览器实现起来比较简单，可以通过添加一个-webkit-line-clamp的私有属性来实现，-webkit-line-clamp是用来限制在一个块元素显示的文本的行数。 为了实现这个效果，它需要组合其他的WebKit属性：\n\n1. display: -webkit-box 将对象作为弹性伸缩盒子模型显示；\n2. -webkit-box-orient 设置或检索伸缩盒对象的子元素的排列方式；\n3. text-overflow: ellipsis 用省略号“…”隐藏超出范围的文本。\n\n具体代码参考如下：\n\n```css\np {\n    overflow : hidden;\n    text-overflow: ellipsis;\n    display: -webkit-box;\n    -webkit-line-clamp: 2;\n    -webkit-box-orient: vertical;\n}\n```\n\n这个方法合适WebKit浏览器或移动端（绝大部分是WebKit内核的）浏览器，效果可以查看：\n\n<iframe width=\"100%\" height=\"300\" src=\"//jsfiddle.net/ricosmall/hef3ht5a/embedded/result,css,html/dark/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n## 其他浏览器的解决方案\n\n目前没有什么CSS的属性可以直接控制多行文本的省略显示，比较靠谱的办法应该就是利用相对定位在最后面加上一个省略号了，代码可以参考下面：\n\n```css\np {\n    position:relative;\n    line-height:1.5em;\n    /* 高度为需要显示的行数*行高，比如这里我们显示两行，则为3 */\n    height:3em;\n    overflow:hidden;\n}\np:after {\n    content:\"...\";\n    position:absolute;\n    bottom:0;\n    right:0;\n    padding: 0 5px;\n    background-color: #fff;\n}\n```\n\n效果如下：\n\n<iframe width=\"100%\" height=\"300\" src=\"//jsfiddle.net/ricosmall/nsp4qoa4/embedded/result,css,html/dark/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n不过这样会有一点问题：\n\n1. 需要知道显示的行数并设置行高才行；\n2. IE6/7不支持after和content，需要添加一个标签来代替；\n3. 省略号的背景颜色跟文本背景颜色一样，并且可能会遮住部分文字，建议可以使用渐变的png背景图片代替。\n","source":"_posts/2017-08-01-CSS多行文本溢出省略显示.md","raw":"---\ntitle: CSS多行文本溢出省略显示\ndate: 2017-08-01 17:26:02\ntags:\n- CSS\n- text-overflow\ncategories:\n- 笔记\n---\n\n> 本文参考了[Lomu](http://lomu.me/)的文章[CSS多行文本溢出省略显示](http://lomu.me/post/css-multiline-text-overflow)\n\n文本溢出我们经常用到的应该就是text-overflow:ellipsis了，相信大家也很熟悉，但是对于多行文本的溢出处理确接触的不是很多，最近在公司群里面有同事问到，并且自己也遇到过这个问题，所以专门研究过这个问题。\n\n<!-- more -->\n\n首先我们回顾一下以前实现单行缩略是可以通过下面的代码实现的（部分浏览器需要设置宽度）：\n\n```css\np {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n}\n```\n\n## WebKit内核浏览器解决办法\n\n首先，WebKit内核的浏览器实现起来比较简单，可以通过添加一个-webkit-line-clamp的私有属性来实现，-webkit-line-clamp是用来限制在一个块元素显示的文本的行数。 为了实现这个效果，它需要组合其他的WebKit属性：\n\n1. display: -webkit-box 将对象作为弹性伸缩盒子模型显示；\n2. -webkit-box-orient 设置或检索伸缩盒对象的子元素的排列方式；\n3. text-overflow: ellipsis 用省略号“…”隐藏超出范围的文本。\n\n具体代码参考如下：\n\n```css\np {\n    overflow : hidden;\n    text-overflow: ellipsis;\n    display: -webkit-box;\n    -webkit-line-clamp: 2;\n    -webkit-box-orient: vertical;\n}\n```\n\n这个方法合适WebKit浏览器或移动端（绝大部分是WebKit内核的）浏览器，效果可以查看：\n\n<iframe width=\"100%\" height=\"300\" src=\"//jsfiddle.net/ricosmall/hef3ht5a/embedded/result,css,html/dark/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n## 其他浏览器的解决方案\n\n目前没有什么CSS的属性可以直接控制多行文本的省略显示，比较靠谱的办法应该就是利用相对定位在最后面加上一个省略号了，代码可以参考下面：\n\n```css\np {\n    position:relative;\n    line-height:1.5em;\n    /* 高度为需要显示的行数*行高，比如这里我们显示两行，则为3 */\n    height:3em;\n    overflow:hidden;\n}\np:after {\n    content:\"...\";\n    position:absolute;\n    bottom:0;\n    right:0;\n    padding: 0 5px;\n    background-color: #fff;\n}\n```\n\n效果如下：\n\n<iframe width=\"100%\" height=\"300\" src=\"//jsfiddle.net/ricosmall/nsp4qoa4/embedded/result,css,html/dark/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n不过这样会有一点问题：\n\n1. 需要知道显示的行数并设置行高才行；\n2. IE6/7不支持after和content，需要添加一个标签来代替；\n3. 省略号的背景颜色跟文本背景颜色一样，并且可能会遮住部分文字，建议可以使用渐变的png背景图片代替。\n","slug":"CSS多行文本溢出省略显示","published":1,"updated":"2018-03-27T13:52:33.771Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjskilakp000xg9zbm4g9j176","content":"<blockquote>\n<p>本文参考了<a href=\"http://lomu.me/\" target=\"_blank\" rel=\"noopener\">Lomu</a>的文章<a href=\"http://lomu.me/post/css-multiline-text-overflow\" target=\"_blank\" rel=\"noopener\">CSS多行文本溢出省略显示</a></p>\n</blockquote>\n<p>文本溢出我们经常用到的应该就是text-overflow:ellipsis了，相信大家也很熟悉，但是对于多行文本的溢出处理确接触的不是很多，最近在公司群里面有同事问到，并且自己也遇到过这个问题，所以专门研究过这个问题。</p>\n<a id=\"more\"></a>\n<p>首先我们回顾一下以前实现单行缩略是可以通过下面的代码实现的（部分浏览器需要设置宽度）：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">    <span class=\"attribute\">text-overflow</span>: ellipsis;</span><br><span class=\"line\">    <span class=\"attribute\">white-space</span>: nowrap;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"WebKit内核浏览器解决办法\"><a href=\"#WebKit内核浏览器解决办法\" class=\"headerlink\" title=\"WebKit内核浏览器解决办法\"></a>WebKit内核浏览器解决办法</h2><p>首先，WebKit内核的浏览器实现起来比较简单，可以通过添加一个-webkit-line-clamp的私有属性来实现，-webkit-line-clamp是用来限制在一个块元素显示的文本的行数。 为了实现这个效果，它需要组合其他的WebKit属性：</p>\n<ol>\n<li>display: -webkit-box 将对象作为弹性伸缩盒子模型显示；</li>\n<li>-webkit-box-orient 设置或检索伸缩盒对象的子元素的排列方式；</li>\n<li>text-overflow: ellipsis 用省略号“…”隐藏超出范围的文本。</li>\n</ol>\n<p>具体代码参考如下：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">overflow </span>: hidden;</span><br><span class=\"line\">    <span class=\"attribute\">text-overflow</span>: ellipsis;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: -webkit-box;</span><br><span class=\"line\">    <span class=\"attribute\">-webkit-line-clamp</span>: <span class=\"number\">2</span>;</span><br><span class=\"line\">    <span class=\"attribute\">-webkit-box-orient</span>: vertical;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这个方法合适WebKit浏览器或移动端（绝大部分是WebKit内核的）浏览器，效果可以查看：</p>\n<iframe width=\"100%\" height=\"300\" src=\"//jsfiddle.net/ricosmall/hef3ht5a/embedded/result,css,html/dark/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<h2 id=\"其他浏览器的解决方案\"><a href=\"#其他浏览器的解决方案\" class=\"headerlink\" title=\"其他浏览器的解决方案\"></a>其他浏览器的解决方案</h2><p>目前没有什么CSS的属性可以直接控制多行文本的省略显示，比较靠谱的办法应该就是利用相对定位在最后面加上一个省略号了，代码可以参考下面：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>:relative;</span><br><span class=\"line\">    <span class=\"attribute\">line-height</span>:<span class=\"number\">1.5em</span>;</span><br><span class=\"line\">    <span class=\"comment\">/* 高度为需要显示的行数*行高，比如这里我们显示两行，则为3 */</span></span><br><span class=\"line\">    <span class=\"attribute\">height</span>:<span class=\"number\">3em</span>;</span><br><span class=\"line\">    <span class=\"attribute\">overflow</span>:hidden;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">p</span><span class=\"selector-pseudo\">:after</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">content</span>:<span class=\"string\">\"...\"</span>;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>:absolute;</span><br><span class=\"line\">    <span class=\"attribute\">bottom</span>:<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"attribute\">right</span>:<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"attribute\">padding</span>: <span class=\"number\">0</span> <span class=\"number\">5px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: <span class=\"number\">#fff</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>效果如下：</p>\n<iframe width=\"100%\" height=\"300\" src=\"//jsfiddle.net/ricosmall/nsp4qoa4/embedded/result,css,html/dark/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<p>不过这样会有一点问题：</p>\n<ol>\n<li>需要知道显示的行数并设置行高才行；</li>\n<li>IE6/7不支持after和content，需要添加一个标签来代替；</li>\n<li>省略号的背景颜色跟文本背景颜色一样，并且可能会遮住部分文字，建议可以使用渐变的png背景图片代替。</li>\n</ol>\n","site":{"data":{"next":{"favicon":"/favicon.ico","keywords":"Hexo, NexT","rss":null,"since":2016,"authoricon":"heart","copyright":true,"canonical":true,"seo":true,"index_with_subtitle":false,"menu":{"home":"/","categories":"/categories/","archives":"/archives/","tags":"/tags/","about":"/about/"},"menu_icons":{"enable":true,"home":"home","about":"user","categories":"th","schedule":"calendar","tags":"tags","archives":"archive","sitemap":"sitemap","commonweal":"heartbeat"},"scheme":"Mist","social":{"Github":"https://github.com/ricosmall"},"social_icons":{"enable":true,"GitHub":"github","Twitter":"twitter","Weibo":"weibo"},"avatar":"/uploads/avatar.png","toc":{"enable":true,"number":true,"wrap":false},"sidebar":{"position":"left","display":"post","offset":12,"offset_float":0,"b2t":false,"scrollpercent":false,"onmobile":false},"scroll_to_more":true,"save_scroll":false,"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"post_meta":{"item_text":true,"created_at":true,"updated_at":false,"categories":true},"post_wordcount":{"item_text":true,"wordcount":false,"min2read":false,"separated_meta":true},"post_copyright":{"enable":false,"license":"CC BY-NC-SA 3.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/3.0/"},"custom_logo":{"enabled":false,"image":null},"highlight_theme":"night bright","font":{"enable":true,"host":null,"global":{"external":true,"family":"Lato"},"headings":{"external":true,"family":null},"posts":{"external":true,"family":null},"logo":{"external":true,"family":null,"size":null},"codes":{"external":true,"family":"Menlo, Monospace","size":null}},"mathjax":{"enable":true,"per_page":false,"cdn":"//cdn.bootcss.com/mathjax/2.7.1/latest.js?config=TeX-AMS-MML_HTMLorMML"},"han":false,"disqus":{"enable":false,"shortname":"ricosmall","count":false},"changyan":{"enable":false,"appid":null,"appkey":null},"duoshuo_info":{"ua_enable":true,"admin_enable":false,"user_id":0},"facebook_sdk":{"enable":false,"app_id":null,"fb_admin":null,"like_button":null,"webmaster":null},"facebook_comments_plugin":{"enable":false,"num_of_posts":10,"width":"100%","scheme":"light"},"vkontakte_api":{"enable":false,"app_id":null,"like":true,"comments":true,"num_of_posts":10},"rating":{"enable":false,"id":null,"color":"fc6423"},"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null},"busuanzi_count":{"enable":true,"site_uv":true,"site_uv_header":"<i class=\"fa fa-user\"></i>访问人数","site_uv_footer":null,"site_pv":true,"site_pv_header":"<i class=\"fa fa-eye\"></i>总访问量","site_pv_footer":"次","page_pv":true,"page_pv_header":"<i class=\"fa fa-file-o\"></i>浏览","page_pv_footer":"次"},"baidu_push":false,"calendar":{"enable":false,"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"timeZone":null,"showDeleted":false,"singleEvents":true,"maxResults":250},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1},"exturl":false,"use_motion":true,"fancybox":true,"pace":false,"pace_theme":"pace-theme-minimal","canvas_nest":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false,"canvas_ribbon":false,"vendors":{"_internal":"lib","jquery":null,"fancybox":null,"fancybox_css":null,"fastclick":null,"lazyload":null,"velocity":null,"velocity_ui":null,"ua_parser":null,"fontawesome":null,"algolia_instant_js":null,"algolia_instant_css":null,"pace":null,"pace_css":null,"canvas_nest":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_ribbon":null,"han":null},"css":"css","js":"js","images":"images","version":"5.1.1"}}},"excerpt":"<blockquote>\n<p>本文参考了<a href=\"http://lomu.me/\" target=\"_blank\" rel=\"noopener\">Lomu</a>的文章<a href=\"http://lomu.me/post/css-multiline-text-overflow\" target=\"_blank\" rel=\"noopener\">CSS多行文本溢出省略显示</a></p>\n</blockquote>\n<p>文本溢出我们经常用到的应该就是text-overflow:ellipsis了，相信大家也很熟悉，但是对于多行文本的溢出处理确接触的不是很多，最近在公司群里面有同事问到，并且自己也遇到过这个问题，所以专门研究过这个问题。</p>","more":"<p>首先我们回顾一下以前实现单行缩略是可以通过下面的代码实现的（部分浏览器需要设置宽度）：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">    <span class=\"attribute\">text-overflow</span>: ellipsis;</span><br><span class=\"line\">    <span class=\"attribute\">white-space</span>: nowrap;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"WebKit内核浏览器解决办法\"><a href=\"#WebKit内核浏览器解决办法\" class=\"headerlink\" title=\"WebKit内核浏览器解决办法\"></a>WebKit内核浏览器解决办法</h2><p>首先，WebKit内核的浏览器实现起来比较简单，可以通过添加一个-webkit-line-clamp的私有属性来实现，-webkit-line-clamp是用来限制在一个块元素显示的文本的行数。 为了实现这个效果，它需要组合其他的WebKit属性：</p>\n<ol>\n<li>display: -webkit-box 将对象作为弹性伸缩盒子模型显示；</li>\n<li>-webkit-box-orient 设置或检索伸缩盒对象的子元素的排列方式；</li>\n<li>text-overflow: ellipsis 用省略号“…”隐藏超出范围的文本。</li>\n</ol>\n<p>具体代码参考如下：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">overflow </span>: hidden;</span><br><span class=\"line\">    <span class=\"attribute\">text-overflow</span>: ellipsis;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: -webkit-box;</span><br><span class=\"line\">    <span class=\"attribute\">-webkit-line-clamp</span>: <span class=\"number\">2</span>;</span><br><span class=\"line\">    <span class=\"attribute\">-webkit-box-orient</span>: vertical;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这个方法合适WebKit浏览器或移动端（绝大部分是WebKit内核的）浏览器，效果可以查看：</p>\n<iframe width=\"100%\" height=\"300\" src=\"//jsfiddle.net/ricosmall/hef3ht5a/embedded/result,css,html/dark/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<h2 id=\"其他浏览器的解决方案\"><a href=\"#其他浏览器的解决方案\" class=\"headerlink\" title=\"其他浏览器的解决方案\"></a>其他浏览器的解决方案</h2><p>目前没有什么CSS的属性可以直接控制多行文本的省略显示，比较靠谱的办法应该就是利用相对定位在最后面加上一个省略号了，代码可以参考下面：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>:relative;</span><br><span class=\"line\">    <span class=\"attribute\">line-height</span>:<span class=\"number\">1.5em</span>;</span><br><span class=\"line\">    <span class=\"comment\">/* 高度为需要显示的行数*行高，比如这里我们显示两行，则为3 */</span></span><br><span class=\"line\">    <span class=\"attribute\">height</span>:<span class=\"number\">3em</span>;</span><br><span class=\"line\">    <span class=\"attribute\">overflow</span>:hidden;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">p</span><span class=\"selector-pseudo\">:after</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">content</span>:<span class=\"string\">\"...\"</span>;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>:absolute;</span><br><span class=\"line\">    <span class=\"attribute\">bottom</span>:<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"attribute\">right</span>:<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"attribute\">padding</span>: <span class=\"number\">0</span> <span class=\"number\">5px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: <span class=\"number\">#fff</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>效果如下：</p>\n<iframe width=\"100%\" height=\"300\" src=\"//jsfiddle.net/ricosmall/nsp4qoa4/embedded/result,css,html/dark/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n<p>不过这样会有一点问题：</p>\n<ol>\n<li>需要知道显示的行数并设置行高才行；</li>\n<li>IE6/7不支持after和content，需要添加一个标签来代替；</li>\n<li>省略号的背景颜色跟文本背景颜色一样，并且可能会遮住部分文字，建议可以使用渐变的png背景图片代替。</li>\n</ol>"},{"title":"使用Travis实现hexo博客的自动化部署","date":"2017-08-01T03:40:25.000Z","_content":"\n一直想写一篇文章，记录一下从搭建博客到实现用[Travis-CI](https://www.travis-ci.org)自动化部署博客的过程。憋到现在才写，拖了很久。\n\n<!-- more -->\n\n如何使用hexo搭建博客就不赘述了，请打开hexo的[官网](https://hexo.io)参考文档，很容易的。\n\n## 第一次小跨越：实现博客同时部署到[Coding](https://coding.net)和[Github](https://github.com)\n\n由于github在国内访问速度比较慢，比较合适的做法是：把博客静态资源在GitHub上面部署一份，同时在Coding(和GitHub原理一模一样)上也部署一份。如果没有自己的域名，这个时候就可以通过`yourusername.github.io`或者`yourusername.coding.me`访问到相同的博客页面。\n\n### 原始方法\n\n一开始，我没有多想，按照原始的方法部署博客。过程就像下面这样：\n\n```bash\n# 1. 新建一篇文章\nhexo new post '文章标题'\n\n# 2. 编写文章内容\nvim 文章标题.md\n\n# 3. 生成静态博客代码\nhexo generate\n\n# 4. 部署博客代码到Github\nhexo deploy\n\n# 5. 复制生成的博客代码到另一个Coding项目\ncp -r public ../blog-in-coding\n\n# 6. 部署博客代码到Coding\ngit add .\ngit commit -m 'create a new post'\ngit push origin master\n```\n\n每次这样显得特别原始，特别麻烦。一个程序员习惯这种机械的流程是没有好下场的。问题总结下来其实就是：是否可以同时将一份博客代码同时部署到两个远程仓库？这个问题我之前专门写了一篇文章做了介绍。[传送门](/2017/03/03/将代码同时push到两个不同的远程仓库/)\n\n这个问题得以解决，新的博客部署流程就变成了这样：\n\n```bash\n# 1. 新建一篇文章\nhexo new post '文章标题'\n\n# 2. 编写文章内容\nvim 文章标题.md\n\n# 3. 生成静态博客代码\nhexo generate\n\n# 4. 部署博客代码到GitHub和Coding\nhexo deploy\n```\n\n已经省去了两个大的步骤。更进一步的做法就是把上面的3和4结合成一个命令：`hexo deploy --generate`。至此，基本上已经优化到一个不错的水平了。\n\n## 第二次大跨越：使用[Travis-CI](https://www.travis-ci.org)实现[Hexo](https://hexo.io)博客的自动化部署\n","source":"_posts/2017-08-01-使用Travis实现hexo博客的自动化部署.md","raw":"---\ntitle: 使用Travis实现hexo博客的自动化部署\ndate: 2017-08-01 11:40:25\ntags:\n- hexo\n- Travis-CI\ncategories:\n- 教程\n---\n\n一直想写一篇文章，记录一下从搭建博客到实现用[Travis-CI](https://www.travis-ci.org)自动化部署博客的过程。憋到现在才写，拖了很久。\n\n<!-- more -->\n\n如何使用hexo搭建博客就不赘述了，请打开hexo的[官网](https://hexo.io)参考文档，很容易的。\n\n## 第一次小跨越：实现博客同时部署到[Coding](https://coding.net)和[Github](https://github.com)\n\n由于github在国内访问速度比较慢，比较合适的做法是：把博客静态资源在GitHub上面部署一份，同时在Coding(和GitHub原理一模一样)上也部署一份。如果没有自己的域名，这个时候就可以通过`yourusername.github.io`或者`yourusername.coding.me`访问到相同的博客页面。\n\n### 原始方法\n\n一开始，我没有多想，按照原始的方法部署博客。过程就像下面这样：\n\n```bash\n# 1. 新建一篇文章\nhexo new post '文章标题'\n\n# 2. 编写文章内容\nvim 文章标题.md\n\n# 3. 生成静态博客代码\nhexo generate\n\n# 4. 部署博客代码到Github\nhexo deploy\n\n# 5. 复制生成的博客代码到另一个Coding项目\ncp -r public ../blog-in-coding\n\n# 6. 部署博客代码到Coding\ngit add .\ngit commit -m 'create a new post'\ngit push origin master\n```\n\n每次这样显得特别原始，特别麻烦。一个程序员习惯这种机械的流程是没有好下场的。问题总结下来其实就是：是否可以同时将一份博客代码同时部署到两个远程仓库？这个问题我之前专门写了一篇文章做了介绍。[传送门](/2017/03/03/将代码同时push到两个不同的远程仓库/)\n\n这个问题得以解决，新的博客部署流程就变成了这样：\n\n```bash\n# 1. 新建一篇文章\nhexo new post '文章标题'\n\n# 2. 编写文章内容\nvim 文章标题.md\n\n# 3. 生成静态博客代码\nhexo generate\n\n# 4. 部署博客代码到GitHub和Coding\nhexo deploy\n```\n\n已经省去了两个大的步骤。更进一步的做法就是把上面的3和4结合成一个命令：`hexo deploy --generate`。至此，基本上已经优化到一个不错的水平了。\n\n## 第二次大跨越：使用[Travis-CI](https://www.travis-ci.org)实现[Hexo](https://hexo.io)博客的自动化部署\n","slug":"使用Travis实现hexo博客的自动化部署","published":1,"updated":"2018-03-27T13:52:33.771Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjskilakr0011g9zbv7wlhtxw","content":"<p>一直想写一篇文章，记录一下从搭建博客到实现用<a href=\"https://www.travis-ci.org\" target=\"_blank\" rel=\"noopener\">Travis-CI</a>自动化部署博客的过程。憋到现在才写，拖了很久。</p>\n<a id=\"more\"></a>\n<p>如何使用hexo搭建博客就不赘述了，请打开hexo的<a href=\"https://hexo.io\" target=\"_blank\" rel=\"noopener\">官网</a>参考文档，很容易的。</p>\n<h2 id=\"第一次小跨越：实现博客同时部署到Coding和Github\"><a href=\"#第一次小跨越：实现博客同时部署到Coding和Github\" class=\"headerlink\" title=\"第一次小跨越：实现博客同时部署到Coding和Github\"></a>第一次小跨越：实现博客同时部署到<a href=\"https://coding.net\" target=\"_blank\" rel=\"noopener\">Coding</a>和<a href=\"https://github.com\" target=\"_blank\" rel=\"noopener\">Github</a></h2><p>由于github在国内访问速度比较慢，比较合适的做法是：把博客静态资源在GitHub上面部署一份，同时在Coding(和GitHub原理一模一样)上也部署一份。如果没有自己的域名，这个时候就可以通过<code>yourusername.github.io</code>或者<code>yourusername.coding.me</code>访问到相同的博客页面。</p>\n<h3 id=\"原始方法\"><a href=\"#原始方法\" class=\"headerlink\" title=\"原始方法\"></a>原始方法</h3><p>一开始，我没有多想，按照原始的方法部署博客。过程就像下面这样：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 1. 新建一篇文章</span></span><br><span class=\"line\">hexo new post <span class=\"string\">'文章标题'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2. 编写文章内容</span></span><br><span class=\"line\">vim 文章标题.md</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 3. 生成静态博客代码</span></span><br><span class=\"line\">hexo generate</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 4. 部署博客代码到Github</span></span><br><span class=\"line\">hexo deploy</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 5. 复制生成的博客代码到另一个Coding项目</span></span><br><span class=\"line\">cp -r public ../blog-in-coding</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 6. 部署博客代码到Coding</span></span><br><span class=\"line\">git add .</span><br><span class=\"line\">git commit -m <span class=\"string\">'create a new post'</span></span><br><span class=\"line\">git push origin master</span><br></pre></td></tr></table></figure>\n<p>每次这样显得特别原始，特别麻烦。一个程序员习惯这种机械的流程是没有好下场的。问题总结下来其实就是：是否可以同时将一份博客代码同时部署到两个远程仓库？这个问题我之前专门写了一篇文章做了介绍。<a href=\"/2017/03/03/将代码同时push到两个不同的远程仓库/\">传送门</a></p>\n<p>这个问题得以解决，新的博客部署流程就变成了这样：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 1. 新建一篇文章</span></span><br><span class=\"line\">hexo new post <span class=\"string\">'文章标题'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2. 编写文章内容</span></span><br><span class=\"line\">vim 文章标题.md</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 3. 生成静态博客代码</span></span><br><span class=\"line\">hexo generate</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 4. 部署博客代码到GitHub和Coding</span></span><br><span class=\"line\">hexo deploy</span><br></pre></td></tr></table></figure>\n<p>已经省去了两个大的步骤。更进一步的做法就是把上面的3和4结合成一个命令：<code>hexo deploy --generate</code>。至此，基本上已经优化到一个不错的水平了。</p>\n<h2 id=\"第二次大跨越：使用Travis-CI实现Hexo博客的自动化部署\"><a href=\"#第二次大跨越：使用Travis-CI实现Hexo博客的自动化部署\" class=\"headerlink\" title=\"第二次大跨越：使用Travis-CI实现Hexo博客的自动化部署\"></a>第二次大跨越：使用<a href=\"https://www.travis-ci.org\" target=\"_blank\" rel=\"noopener\">Travis-CI</a>实现<a href=\"https://hexo.io\" target=\"_blank\" rel=\"noopener\">Hexo</a>博客的自动化部署</h2>","site":{"data":{"next":{"favicon":"/favicon.ico","keywords":"Hexo, NexT","rss":null,"since":2016,"authoricon":"heart","copyright":true,"canonical":true,"seo":true,"index_with_subtitle":false,"menu":{"home":"/","categories":"/categories/","archives":"/archives/","tags":"/tags/","about":"/about/"},"menu_icons":{"enable":true,"home":"home","about":"user","categories":"th","schedule":"calendar","tags":"tags","archives":"archive","sitemap":"sitemap","commonweal":"heartbeat"},"scheme":"Mist","social":{"Github":"https://github.com/ricosmall"},"social_icons":{"enable":true,"GitHub":"github","Twitter":"twitter","Weibo":"weibo"},"avatar":"/uploads/avatar.png","toc":{"enable":true,"number":true,"wrap":false},"sidebar":{"position":"left","display":"post","offset":12,"offset_float":0,"b2t":false,"scrollpercent":false,"onmobile":false},"scroll_to_more":true,"save_scroll":false,"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"post_meta":{"item_text":true,"created_at":true,"updated_at":false,"categories":true},"post_wordcount":{"item_text":true,"wordcount":false,"min2read":false,"separated_meta":true},"post_copyright":{"enable":false,"license":"CC BY-NC-SA 3.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/3.0/"},"custom_logo":{"enabled":false,"image":null},"highlight_theme":"night bright","font":{"enable":true,"host":null,"global":{"external":true,"family":"Lato"},"headings":{"external":true,"family":null},"posts":{"external":true,"family":null},"logo":{"external":true,"family":null,"size":null},"codes":{"external":true,"family":"Menlo, Monospace","size":null}},"mathjax":{"enable":true,"per_page":false,"cdn":"//cdn.bootcss.com/mathjax/2.7.1/latest.js?config=TeX-AMS-MML_HTMLorMML"},"han":false,"disqus":{"enable":false,"shortname":"ricosmall","count":false},"changyan":{"enable":false,"appid":null,"appkey":null},"duoshuo_info":{"ua_enable":true,"admin_enable":false,"user_id":0},"facebook_sdk":{"enable":false,"app_id":null,"fb_admin":null,"like_button":null,"webmaster":null},"facebook_comments_plugin":{"enable":false,"num_of_posts":10,"width":"100%","scheme":"light"},"vkontakte_api":{"enable":false,"app_id":null,"like":true,"comments":true,"num_of_posts":10},"rating":{"enable":false,"id":null,"color":"fc6423"},"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null},"busuanzi_count":{"enable":true,"site_uv":true,"site_uv_header":"<i class=\"fa fa-user\"></i>访问人数","site_uv_footer":null,"site_pv":true,"site_pv_header":"<i class=\"fa fa-eye\"></i>总访问量","site_pv_footer":"次","page_pv":true,"page_pv_header":"<i class=\"fa fa-file-o\"></i>浏览","page_pv_footer":"次"},"baidu_push":false,"calendar":{"enable":false,"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"timeZone":null,"showDeleted":false,"singleEvents":true,"maxResults":250},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1},"exturl":false,"use_motion":true,"fancybox":true,"pace":false,"pace_theme":"pace-theme-minimal","canvas_nest":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false,"canvas_ribbon":false,"vendors":{"_internal":"lib","jquery":null,"fancybox":null,"fancybox_css":null,"fastclick":null,"lazyload":null,"velocity":null,"velocity_ui":null,"ua_parser":null,"fontawesome":null,"algolia_instant_js":null,"algolia_instant_css":null,"pace":null,"pace_css":null,"canvas_nest":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_ribbon":null,"han":null},"css":"css","js":"js","images":"images","version":"5.1.1"}}},"excerpt":"<p>一直想写一篇文章，记录一下从搭建博客到实现用<a href=\"https://www.travis-ci.org\" target=\"_blank\" rel=\"noopener\">Travis-CI</a>自动化部署博客的过程。憋到现在才写，拖了很久。</p>","more":"<p>如何使用hexo搭建博客就不赘述了，请打开hexo的<a href=\"https://hexo.io\" target=\"_blank\" rel=\"noopener\">官网</a>参考文档，很容易的。</p>\n<h2 id=\"第一次小跨越：实现博客同时部署到Coding和Github\"><a href=\"#第一次小跨越：实现博客同时部署到Coding和Github\" class=\"headerlink\" title=\"第一次小跨越：实现博客同时部署到Coding和Github\"></a>第一次小跨越：实现博客同时部署到<a href=\"https://coding.net\" target=\"_blank\" rel=\"noopener\">Coding</a>和<a href=\"https://github.com\" target=\"_blank\" rel=\"noopener\">Github</a></h2><p>由于github在国内访问速度比较慢，比较合适的做法是：把博客静态资源在GitHub上面部署一份，同时在Coding(和GitHub原理一模一样)上也部署一份。如果没有自己的域名，这个时候就可以通过<code>yourusername.github.io</code>或者<code>yourusername.coding.me</code>访问到相同的博客页面。</p>\n<h3 id=\"原始方法\"><a href=\"#原始方法\" class=\"headerlink\" title=\"原始方法\"></a>原始方法</h3><p>一开始，我没有多想，按照原始的方法部署博客。过程就像下面这样：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 1. 新建一篇文章</span></span><br><span class=\"line\">hexo new post <span class=\"string\">'文章标题'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2. 编写文章内容</span></span><br><span class=\"line\">vim 文章标题.md</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 3. 生成静态博客代码</span></span><br><span class=\"line\">hexo generate</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 4. 部署博客代码到Github</span></span><br><span class=\"line\">hexo deploy</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 5. 复制生成的博客代码到另一个Coding项目</span></span><br><span class=\"line\">cp -r public ../blog-in-coding</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 6. 部署博客代码到Coding</span></span><br><span class=\"line\">git add .</span><br><span class=\"line\">git commit -m <span class=\"string\">'create a new post'</span></span><br><span class=\"line\">git push origin master</span><br></pre></td></tr></table></figure>\n<p>每次这样显得特别原始，特别麻烦。一个程序员习惯这种机械的流程是没有好下场的。问题总结下来其实就是：是否可以同时将一份博客代码同时部署到两个远程仓库？这个问题我之前专门写了一篇文章做了介绍。<a href=\"/2017/03/03/将代码同时push到两个不同的远程仓库/\">传送门</a></p>\n<p>这个问题得以解决，新的博客部署流程就变成了这样：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 1. 新建一篇文章</span></span><br><span class=\"line\">hexo new post <span class=\"string\">'文章标题'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2. 编写文章内容</span></span><br><span class=\"line\">vim 文章标题.md</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 3. 生成静态博客代码</span></span><br><span class=\"line\">hexo generate</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 4. 部署博客代码到GitHub和Coding</span></span><br><span class=\"line\">hexo deploy</span><br></pre></td></tr></table></figure>\n<p>已经省去了两个大的步骤。更进一步的做法就是把上面的3和4结合成一个命令：<code>hexo deploy --generate</code>。至此，基本上已经优化到一个不错的水平了。</p>\n<h2 id=\"第二次大跨越：使用Travis-CI实现Hexo博客的自动化部署\"><a href=\"#第二次大跨越：使用Travis-CI实现Hexo博客的自动化部署\" class=\"headerlink\" title=\"第二次大跨越：使用Travis-CI实现Hexo博客的自动化部署\"></a>第二次大跨越：使用<a href=\"https://www.travis-ci.org\" target=\"_blank\" rel=\"noopener\">Travis-CI</a>实现<a href=\"https://hexo.io\" target=\"_blank\" rel=\"noopener\">Hexo</a>博客的自动化部署</h2>"},{"title":"JavaScript跨域方法总结","date":"2017-08-02T01:15:37.000Z","_content":"\n需要开发一个浏览器端检测的页面，碰到了跨域的问题。回过头来仔细研究一下跨域的问题，做个总结。\n\n> 本文大部分引用了[Rain Man](http://www.cnblogs.com/rainman)的[JavaScript跨域总结与解决办法](http://www.cnblogs.com/rainman/archive/2011/02/20/1959325.html)\n\n<!-- more -->\n","source":"_posts/2017-08-02-JavaScript跨域方法总结.md","raw":"---\ntitle: JavaScript跨域方法总结\ndate: 2017-08-02 09:15:37\ntags:\n- JavaScript\n- 跨域\n- jsonp\n- CORS\ncategories:\n- 笔记\n---\n\n需要开发一个浏览器端检测的页面，碰到了跨域的问题。回过头来仔细研究一下跨域的问题，做个总结。\n\n> 本文大部分引用了[Rain Man](http://www.cnblogs.com/rainman)的[JavaScript跨域总结与解决办法](http://www.cnblogs.com/rainman/archive/2011/02/20/1959325.html)\n\n<!-- more -->\n","slug":"JavaScript跨域方法总结","published":1,"updated":"2018-03-27T13:52:33.771Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjskilakt0014g9zb7u5hdwuc","content":"<p>需要开发一个浏览器端检测的页面，碰到了跨域的问题。回过头来仔细研究一下跨域的问题，做个总结。</p>\n<blockquote>\n<p>本文大部分引用了<a href=\"http://www.cnblogs.com/rainman\" target=\"_blank\" rel=\"noopener\">Rain Man</a>的<a href=\"http://www.cnblogs.com/rainman/archive/2011/02/20/1959325.html\" target=\"_blank\" rel=\"noopener\">JavaScript跨域总结与解决办法</a></p>\n</blockquote>\n<a id=\"more\"></a>\n","site":{"data":{"next":{"favicon":"/favicon.ico","keywords":"Hexo, NexT","rss":null,"since":2016,"authoricon":"heart","copyright":true,"canonical":true,"seo":true,"index_with_subtitle":false,"menu":{"home":"/","categories":"/categories/","archives":"/archives/","tags":"/tags/","about":"/about/"},"menu_icons":{"enable":true,"home":"home","about":"user","categories":"th","schedule":"calendar","tags":"tags","archives":"archive","sitemap":"sitemap","commonweal":"heartbeat"},"scheme":"Mist","social":{"Github":"https://github.com/ricosmall"},"social_icons":{"enable":true,"GitHub":"github","Twitter":"twitter","Weibo":"weibo"},"avatar":"/uploads/avatar.png","toc":{"enable":true,"number":true,"wrap":false},"sidebar":{"position":"left","display":"post","offset":12,"offset_float":0,"b2t":false,"scrollpercent":false,"onmobile":false},"scroll_to_more":true,"save_scroll":false,"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"post_meta":{"item_text":true,"created_at":true,"updated_at":false,"categories":true},"post_wordcount":{"item_text":true,"wordcount":false,"min2read":false,"separated_meta":true},"post_copyright":{"enable":false,"license":"CC BY-NC-SA 3.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/3.0/"},"custom_logo":{"enabled":false,"image":null},"highlight_theme":"night bright","font":{"enable":true,"host":null,"global":{"external":true,"family":"Lato"},"headings":{"external":true,"family":null},"posts":{"external":true,"family":null},"logo":{"external":true,"family":null,"size":null},"codes":{"external":true,"family":"Menlo, Monospace","size":null}},"mathjax":{"enable":true,"per_page":false,"cdn":"//cdn.bootcss.com/mathjax/2.7.1/latest.js?config=TeX-AMS-MML_HTMLorMML"},"han":false,"disqus":{"enable":false,"shortname":"ricosmall","count":false},"changyan":{"enable":false,"appid":null,"appkey":null},"duoshuo_info":{"ua_enable":true,"admin_enable":false,"user_id":0},"facebook_sdk":{"enable":false,"app_id":null,"fb_admin":null,"like_button":null,"webmaster":null},"facebook_comments_plugin":{"enable":false,"num_of_posts":10,"width":"100%","scheme":"light"},"vkontakte_api":{"enable":false,"app_id":null,"like":true,"comments":true,"num_of_posts":10},"rating":{"enable":false,"id":null,"color":"fc6423"},"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null},"busuanzi_count":{"enable":true,"site_uv":true,"site_uv_header":"<i class=\"fa fa-user\"></i>访问人数","site_uv_footer":null,"site_pv":true,"site_pv_header":"<i class=\"fa fa-eye\"></i>总访问量","site_pv_footer":"次","page_pv":true,"page_pv_header":"<i class=\"fa fa-file-o\"></i>浏览","page_pv_footer":"次"},"baidu_push":false,"calendar":{"enable":false,"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"timeZone":null,"showDeleted":false,"singleEvents":true,"maxResults":250},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1},"exturl":false,"use_motion":true,"fancybox":true,"pace":false,"pace_theme":"pace-theme-minimal","canvas_nest":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false,"canvas_ribbon":false,"vendors":{"_internal":"lib","jquery":null,"fancybox":null,"fancybox_css":null,"fastclick":null,"lazyload":null,"velocity":null,"velocity_ui":null,"ua_parser":null,"fontawesome":null,"algolia_instant_js":null,"algolia_instant_css":null,"pace":null,"pace_css":null,"canvas_nest":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_ribbon":null,"han":null},"css":"css","js":"js","images":"images","version":"5.1.1"}}},"excerpt":"<p>需要开发一个浏览器端检测的页面，碰到了跨域的问题。回过头来仔细研究一下跨域的问题，做个总结。</p>\n<blockquote>\n<p>本文大部分引用了<a href=\"http://www.cnblogs.com/rainman\" target=\"_blank\" rel=\"noopener\">Rain Man</a>的<a href=\"http://www.cnblogs.com/rainman/archive/2011/02/20/1959325.html\" target=\"_blank\" rel=\"noopener\">JavaScript跨域总结与解决办法</a></p>\n</blockquote>","more":""},{"title":"手把手教你在阿里云ECS上面安装nginx","date":"2017-08-27T08:48:09.000Z","_content":"\n一直想给自己弄一个云服务器和自己的域名，现在抓住了机会。阿里云有[免费和非常实惠的新手大礼包](https://www.aliyun.com/activity#/)。如果你也想体验一下，可以试试，我当时申请的就是[这种](https://free.aliyun.com/?type=personal)。\n\n<!-- more -->\n\n我选择的系统配置是Linux Ubuntu 14.04，如果你不是选的Linux，不用再往下看了。\n\n## nginx配置步骤\n\n### 1.下载\n\n1. nginx源文件：[传送门](http://nginx.org/en/download.html)\n\n2. openssl源文件：[传送门](https://www.openssl.org/source/)\n\n3. pcre源文件：[传送门](https://ftp.pcre.org/pub/pcre/)\n\n4. zlib源文件：[传送门](https://zlib.net/)\n\n### 2.将下载的源文件放到ECS上去\n\n我是通过sftp的方式将文件放上去的\n\n```bash\n# sftp模式登陆到服务器\nsftp name@ip\n\n# cd到你想放置临时文件的目录\nsftp> cd /tmp\n\n# cd到你本机下载文件的位置\nsftp> lcd ~/Download\n\n# 上传文件\nsftp> put nginx.tar.gz openssl.tar.gz pcre.tar.gz zlib.tar.gz\n```\n\n### 3.登陆到服务器进行配置、安装、测试\n\n我使用ssh的方式\n\n```bash\n# ssh登陆服务器\nssh name@ip\n\n# cd到刚才上传文件的目录\ncd /tmp\n\n# 解压文件\ntar -xzf filename\n\n# 进入nginx源码目录做小小的修改，为了安全\ncd ./nginx/src/core\nvim nginx.h\n```\n\n源文件内容如下\n```c\n/*\n * Copyright (C) Igor Sysoev\n * Copyright (C) Nginx, Inc.\n */\n\n\n#ifndef _NGINX_H_INCLUDED_\n#define _NGINX_H_INCLUDED_\n\n\n#define nginx_version      1013004\n#define NGINX_VERSION      \"1.13.4\"\n#define NGINX_VER          \"nginx/\" NGINX_VERSION\n\n#ifdef NGX_BUILD\n#define NGINX_VER_BUILD    NGINX_VER \" (\" NGX_BUILD \")\"\n#else\n#define NGINX_VER_BUILD    NGINX_VER\n#endif\n\n#define NGINX_VAR          \"NGINX\"\n#define NGX_OLDPID_EXT     \".oldbin\"\n\n\n#endif /* _NGINX_H_INCLUDED_ */\n```\n\n更改之后的文件内容如下\n```c\n/*\n * Copyright (C) Igor Sysoev\n * Copyright (C) Nginx, Inc.\n */\n\n\n#ifndef _NGINX_H_INCLUDED_\n#define _NGINX_H_INCLUDED_\n\n\n#define nginx_version      1013004\n#define NGINX_VERSION      \"\"\n#define NGINX_VER          \"super\" NGINX_VERSION\n\n#ifdef NGX_BUILD\n#define NGINX_VER_BUILD    NGINX_VER \" (\" NGX_BUILD \")\"\n#else\n#define NGINX_VER_BUILD    NGINX_VER\n#endif\n\n#define NGINX_VAR          \"super\"\n#define NGX_OLDPID_EXT     \".oldbin\"\n\n\n#endif /* _NGINX_H_INCLUDED_ */\n```\n\n```bash\n# cd到nginx目录，从core目录操作\ncd ../../\n\n# configure\n./configure  --prefix=/usr/local/nginx --with-http_stub_status_module --with-http_ssl_module --with-openssl=/tmp/openssl --with-pcre=/tmp/pcre --with-zlib=/tmp/zlib\n\n# /usr/local/nginx 指的是最终编译安装到此路径\n# /tmp/openssl, /tmp/pcre, /tmp/zlib 对应解压源码文件夹位置\n\n# install\nmake install\n\n# 安装完之后到安装目录下去\ncd /usr/local/nginx\n\n# 检查一下是否安装配置成功\ncd ./sbin\n./nginx -t\n\n# 正常输出如下\nnginx: the configuration file /usr/local/nginx/conf/nginx.conf syntax is ok\nnginx: configuration file /usr/local/nginx/conf/nginx.conf test is successful\n\n# 如果看到如下结果，尝试重启一下\nThe program 'nginx' can be found in the following packages:\n * nginx-core\n * nginx-extras\n * nginx-full\n * nginx-light\n * nginx-naxsi\nTry: apt-get install <selected package>\n```\n\n至此，已经成功安装好了nginx。\n\n有人会问为什么不通过`apt-get install nginx`之类的命令来安装，我想说的是，那种方式就无法体验最新版的nginx了。\n","source":"_posts/2017-08-27-手把手教你在阿里云ECS上面安装nginx.md","raw":"---\ntitle: 手把手教你在阿里云ECS上面安装nginx\ndate: 2017-08-27 16:48:09\ntags:\n- nginx\n- 阿里云\n- ECS\ncategories:\n- 教程\n---\n\n一直想给自己弄一个云服务器和自己的域名，现在抓住了机会。阿里云有[免费和非常实惠的新手大礼包](https://www.aliyun.com/activity#/)。如果你也想体验一下，可以试试，我当时申请的就是[这种](https://free.aliyun.com/?type=personal)。\n\n<!-- more -->\n\n我选择的系统配置是Linux Ubuntu 14.04，如果你不是选的Linux，不用再往下看了。\n\n## nginx配置步骤\n\n### 1.下载\n\n1. nginx源文件：[传送门](http://nginx.org/en/download.html)\n\n2. openssl源文件：[传送门](https://www.openssl.org/source/)\n\n3. pcre源文件：[传送门](https://ftp.pcre.org/pub/pcre/)\n\n4. zlib源文件：[传送门](https://zlib.net/)\n\n### 2.将下载的源文件放到ECS上去\n\n我是通过sftp的方式将文件放上去的\n\n```bash\n# sftp模式登陆到服务器\nsftp name@ip\n\n# cd到你想放置临时文件的目录\nsftp> cd /tmp\n\n# cd到你本机下载文件的位置\nsftp> lcd ~/Download\n\n# 上传文件\nsftp> put nginx.tar.gz openssl.tar.gz pcre.tar.gz zlib.tar.gz\n```\n\n### 3.登陆到服务器进行配置、安装、测试\n\n我使用ssh的方式\n\n```bash\n# ssh登陆服务器\nssh name@ip\n\n# cd到刚才上传文件的目录\ncd /tmp\n\n# 解压文件\ntar -xzf filename\n\n# 进入nginx源码目录做小小的修改，为了安全\ncd ./nginx/src/core\nvim nginx.h\n```\n\n源文件内容如下\n```c\n/*\n * Copyright (C) Igor Sysoev\n * Copyright (C) Nginx, Inc.\n */\n\n\n#ifndef _NGINX_H_INCLUDED_\n#define _NGINX_H_INCLUDED_\n\n\n#define nginx_version      1013004\n#define NGINX_VERSION      \"1.13.4\"\n#define NGINX_VER          \"nginx/\" NGINX_VERSION\n\n#ifdef NGX_BUILD\n#define NGINX_VER_BUILD    NGINX_VER \" (\" NGX_BUILD \")\"\n#else\n#define NGINX_VER_BUILD    NGINX_VER\n#endif\n\n#define NGINX_VAR          \"NGINX\"\n#define NGX_OLDPID_EXT     \".oldbin\"\n\n\n#endif /* _NGINX_H_INCLUDED_ */\n```\n\n更改之后的文件内容如下\n```c\n/*\n * Copyright (C) Igor Sysoev\n * Copyright (C) Nginx, Inc.\n */\n\n\n#ifndef _NGINX_H_INCLUDED_\n#define _NGINX_H_INCLUDED_\n\n\n#define nginx_version      1013004\n#define NGINX_VERSION      \"\"\n#define NGINX_VER          \"super\" NGINX_VERSION\n\n#ifdef NGX_BUILD\n#define NGINX_VER_BUILD    NGINX_VER \" (\" NGX_BUILD \")\"\n#else\n#define NGINX_VER_BUILD    NGINX_VER\n#endif\n\n#define NGINX_VAR          \"super\"\n#define NGX_OLDPID_EXT     \".oldbin\"\n\n\n#endif /* _NGINX_H_INCLUDED_ */\n```\n\n```bash\n# cd到nginx目录，从core目录操作\ncd ../../\n\n# configure\n./configure  --prefix=/usr/local/nginx --with-http_stub_status_module --with-http_ssl_module --with-openssl=/tmp/openssl --with-pcre=/tmp/pcre --with-zlib=/tmp/zlib\n\n# /usr/local/nginx 指的是最终编译安装到此路径\n# /tmp/openssl, /tmp/pcre, /tmp/zlib 对应解压源码文件夹位置\n\n# install\nmake install\n\n# 安装完之后到安装目录下去\ncd /usr/local/nginx\n\n# 检查一下是否安装配置成功\ncd ./sbin\n./nginx -t\n\n# 正常输出如下\nnginx: the configuration file /usr/local/nginx/conf/nginx.conf syntax is ok\nnginx: configuration file /usr/local/nginx/conf/nginx.conf test is successful\n\n# 如果看到如下结果，尝试重启一下\nThe program 'nginx' can be found in the following packages:\n * nginx-core\n * nginx-extras\n * nginx-full\n * nginx-light\n * nginx-naxsi\nTry: apt-get install <selected package>\n```\n\n至此，已经成功安装好了nginx。\n\n有人会问为什么不通过`apt-get install nginx`之类的命令来安装，我想说的是，那种方式就无法体验最新版的nginx了。\n","slug":"手把手教你在阿里云ECS上面安装nginx","published":1,"updated":"2018-03-27T13:52:33.771Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjskilaku0017g9zb53nhwcpb","content":"<p>一直想给自己弄一个云服务器和自己的域名，现在抓住了机会。阿里云有<a href=\"https://www.aliyun.com/activity#/\" target=\"_blank\" rel=\"noopener\">免费和非常实惠的新手大礼包</a>。如果你也想体验一下，可以试试，我当时申请的就是<a href=\"https://free.aliyun.com/?type=personal\" target=\"_blank\" rel=\"noopener\">这种</a>。</p>\n<a id=\"more\"></a>\n<p>我选择的系统配置是Linux Ubuntu 14.04，如果你不是选的Linux，不用再往下看了。</p>\n<h2 id=\"nginx配置步骤\"><a href=\"#nginx配置步骤\" class=\"headerlink\" title=\"nginx配置步骤\"></a>nginx配置步骤</h2><h3 id=\"1-下载\"><a href=\"#1-下载\" class=\"headerlink\" title=\"1.下载\"></a>1.下载</h3><ol>\n<li><p>nginx源文件：<a href=\"http://nginx.org/en/download.html\" target=\"_blank\" rel=\"noopener\">传送门</a></p>\n</li>\n<li><p>openssl源文件：<a href=\"https://www.openssl.org/source/\" target=\"_blank\" rel=\"noopener\">传送门</a></p>\n</li>\n<li><p>pcre源文件：<a href=\"https://ftp.pcre.org/pub/pcre/\" target=\"_blank\" rel=\"noopener\">传送门</a></p>\n</li>\n<li><p>zlib源文件：<a href=\"https://zlib.net/\" target=\"_blank\" rel=\"noopener\">传送门</a></p>\n</li>\n</ol>\n<h3 id=\"2-将下载的源文件放到ECS上去\"><a href=\"#2-将下载的源文件放到ECS上去\" class=\"headerlink\" title=\"2.将下载的源文件放到ECS上去\"></a>2.将下载的源文件放到ECS上去</h3><p>我是通过sftp的方式将文件放上去的</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># sftp模式登陆到服务器</span></span><br><span class=\"line\">sftp name@ip</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># cd到你想放置临时文件的目录</span></span><br><span class=\"line\">sftp&gt; <span class=\"built_in\">cd</span> /tmp</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># cd到你本机下载文件的位置</span></span><br><span class=\"line\">sftp&gt; lcd ~/Download</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 上传文件</span></span><br><span class=\"line\">sftp&gt; put nginx.tar.gz openssl.tar.gz pcre.tar.gz zlib.tar.gz</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-登陆到服务器进行配置、安装、测试\"><a href=\"#3-登陆到服务器进行配置、安装、测试\" class=\"headerlink\" title=\"3.登陆到服务器进行配置、安装、测试\"></a>3.登陆到服务器进行配置、安装、测试</h3><p>我使用ssh的方式</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># ssh登陆服务器</span></span><br><span class=\"line\">ssh name@ip</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># cd到刚才上传文件的目录</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /tmp</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 解压文件</span></span><br><span class=\"line\">tar -xzf filename</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 进入nginx源码目录做小小的修改，为了安全</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> ./nginx/src/core</span><br><span class=\"line\">vim nginx.h</span><br></pre></td></tr></table></figure>\n<p>源文件内容如下<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"> * Copyright (C) Igor Sysoev</span></span><br><span class=\"line\"><span class=\"comment\"> * Copyright (C) Nginx, Inc.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">ifndef</span> _NGINX_H_INCLUDED_</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> _NGINX_H_INCLUDED_</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> nginx_version      1013004</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> NGINX_VERSION      <span class=\"meta-string\">\"1.13.4\"</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> NGINX_VER          <span class=\"meta-string\">\"nginx/\"</span> NGINX_VERSION</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">ifdef</span> NGX_BUILD</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> NGINX_VER_BUILD    NGINX_VER <span class=\"meta-string\">\" (\"</span> NGX_BUILD <span class=\"meta-string\">\")\"</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">else</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> NGINX_VER_BUILD    NGINX_VER</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> NGINX_VAR          <span class=\"meta-string\">\"NGINX\"</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> NGX_OLDPID_EXT     <span class=\"meta-string\">\".oldbin\"</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span> <span class=\"comment\">/* _NGINX_H_INCLUDED_ */</span></span></span><br></pre></td></tr></table></figure></p>\n<p>更改之后的文件内容如下<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"> * Copyright (C) Igor Sysoev</span></span><br><span class=\"line\"><span class=\"comment\"> * Copyright (C) Nginx, Inc.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">ifndef</span> _NGINX_H_INCLUDED_</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> _NGINX_H_INCLUDED_</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> nginx_version      1013004</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> NGINX_VERSION      <span class=\"meta-string\">\"\"</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> NGINX_VER          <span class=\"meta-string\">\"super\"</span> NGINX_VERSION</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">ifdef</span> NGX_BUILD</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> NGINX_VER_BUILD    NGINX_VER <span class=\"meta-string\">\" (\"</span> NGX_BUILD <span class=\"meta-string\">\")\"</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">else</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> NGINX_VER_BUILD    NGINX_VER</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> NGINX_VAR          <span class=\"meta-string\">\"super\"</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> NGX_OLDPID_EXT     <span class=\"meta-string\">\".oldbin\"</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span> <span class=\"comment\">/* _NGINX_H_INCLUDED_ */</span></span></span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># cd到nginx目录，从core目录操作</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> ../../</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># configure</span></span><br><span class=\"line\">./configure  --prefix=/usr/<span class=\"built_in\">local</span>/nginx --with-http_stub_status_module --with-http_ssl_module --with-openssl=/tmp/openssl --with-pcre=/tmp/pcre --with-zlib=/tmp/zlib</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># /usr/local/nginx 指的是最终编译安装到此路径</span></span><br><span class=\"line\"><span class=\"comment\"># /tmp/openssl, /tmp/pcre, /tmp/zlib 对应解压源码文件夹位置</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># install</span></span><br><span class=\"line\">make install</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 安装完之后到安装目录下去</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /usr/<span class=\"built_in\">local</span>/nginx</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 检查一下是否安装配置成功</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> ./sbin</span><br><span class=\"line\">./nginx -t</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 正常输出如下</span></span><br><span class=\"line\">nginx: the configuration file /usr/<span class=\"built_in\">local</span>/nginx/conf/nginx.conf syntax is ok</span><br><span class=\"line\">nginx: configuration file /usr/<span class=\"built_in\">local</span>/nginx/conf/nginx.conf <span class=\"built_in\">test</span> is successful</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 如果看到如下结果，尝试重启一下</span></span><br><span class=\"line\">The program <span class=\"string\">'nginx'</span> can be found <span class=\"keyword\">in</span> the following packages:</span><br><span class=\"line\"> * nginx-core</span><br><span class=\"line\"> * nginx-extras</span><br><span class=\"line\"> * nginx-full</span><br><span class=\"line\"> * nginx-light</span><br><span class=\"line\"> * nginx-naxsi</span><br><span class=\"line\">Try: apt-get install &lt;selected package&gt;</span><br></pre></td></tr></table></figure>\n<p>至此，已经成功安装好了nginx。</p>\n<p>有人会问为什么不通过<code>apt-get install nginx</code>之类的命令来安装，我想说的是，那种方式就无法体验最新版的nginx了。</p>\n","site":{"data":{"next":{"favicon":"/favicon.ico","keywords":"Hexo, NexT","rss":null,"since":2016,"authoricon":"heart","copyright":true,"canonical":true,"seo":true,"index_with_subtitle":false,"menu":{"home":"/","categories":"/categories/","archives":"/archives/","tags":"/tags/","about":"/about/"},"menu_icons":{"enable":true,"home":"home","about":"user","categories":"th","schedule":"calendar","tags":"tags","archives":"archive","sitemap":"sitemap","commonweal":"heartbeat"},"scheme":"Mist","social":{"Github":"https://github.com/ricosmall"},"social_icons":{"enable":true,"GitHub":"github","Twitter":"twitter","Weibo":"weibo"},"avatar":"/uploads/avatar.png","toc":{"enable":true,"number":true,"wrap":false},"sidebar":{"position":"left","display":"post","offset":12,"offset_float":0,"b2t":false,"scrollpercent":false,"onmobile":false},"scroll_to_more":true,"save_scroll":false,"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"post_meta":{"item_text":true,"created_at":true,"updated_at":false,"categories":true},"post_wordcount":{"item_text":true,"wordcount":false,"min2read":false,"separated_meta":true},"post_copyright":{"enable":false,"license":"CC BY-NC-SA 3.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/3.0/"},"custom_logo":{"enabled":false,"image":null},"highlight_theme":"night bright","font":{"enable":true,"host":null,"global":{"external":true,"family":"Lato"},"headings":{"external":true,"family":null},"posts":{"external":true,"family":null},"logo":{"external":true,"family":null,"size":null},"codes":{"external":true,"family":"Menlo, Monospace","size":null}},"mathjax":{"enable":true,"per_page":false,"cdn":"//cdn.bootcss.com/mathjax/2.7.1/latest.js?config=TeX-AMS-MML_HTMLorMML"},"han":false,"disqus":{"enable":false,"shortname":"ricosmall","count":false},"changyan":{"enable":false,"appid":null,"appkey":null},"duoshuo_info":{"ua_enable":true,"admin_enable":false,"user_id":0},"facebook_sdk":{"enable":false,"app_id":null,"fb_admin":null,"like_button":null,"webmaster":null},"facebook_comments_plugin":{"enable":false,"num_of_posts":10,"width":"100%","scheme":"light"},"vkontakte_api":{"enable":false,"app_id":null,"like":true,"comments":true,"num_of_posts":10},"rating":{"enable":false,"id":null,"color":"fc6423"},"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null},"busuanzi_count":{"enable":true,"site_uv":true,"site_uv_header":"<i class=\"fa fa-user\"></i>访问人数","site_uv_footer":null,"site_pv":true,"site_pv_header":"<i class=\"fa fa-eye\"></i>总访问量","site_pv_footer":"次","page_pv":true,"page_pv_header":"<i class=\"fa fa-file-o\"></i>浏览","page_pv_footer":"次"},"baidu_push":false,"calendar":{"enable":false,"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"timeZone":null,"showDeleted":false,"singleEvents":true,"maxResults":250},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1},"exturl":false,"use_motion":true,"fancybox":true,"pace":false,"pace_theme":"pace-theme-minimal","canvas_nest":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false,"canvas_ribbon":false,"vendors":{"_internal":"lib","jquery":null,"fancybox":null,"fancybox_css":null,"fastclick":null,"lazyload":null,"velocity":null,"velocity_ui":null,"ua_parser":null,"fontawesome":null,"algolia_instant_js":null,"algolia_instant_css":null,"pace":null,"pace_css":null,"canvas_nest":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_ribbon":null,"han":null},"css":"css","js":"js","images":"images","version":"5.1.1"}}},"excerpt":"<p>一直想给自己弄一个云服务器和自己的域名，现在抓住了机会。阿里云有<a href=\"https://www.aliyun.com/activity#/\" target=\"_blank\" rel=\"noopener\">免费和非常实惠的新手大礼包</a>。如果你也想体验一下，可以试试，我当时申请的就是<a href=\"https://free.aliyun.com/?type=personal\" target=\"_blank\" rel=\"noopener\">这种</a>。</p>","more":"<p>我选择的系统配置是Linux Ubuntu 14.04，如果你不是选的Linux，不用再往下看了。</p>\n<h2 id=\"nginx配置步骤\"><a href=\"#nginx配置步骤\" class=\"headerlink\" title=\"nginx配置步骤\"></a>nginx配置步骤</h2><h3 id=\"1-下载\"><a href=\"#1-下载\" class=\"headerlink\" title=\"1.下载\"></a>1.下载</h3><ol>\n<li><p>nginx源文件：<a href=\"http://nginx.org/en/download.html\" target=\"_blank\" rel=\"noopener\">传送门</a></p>\n</li>\n<li><p>openssl源文件：<a href=\"https://www.openssl.org/source/\" target=\"_blank\" rel=\"noopener\">传送门</a></p>\n</li>\n<li><p>pcre源文件：<a href=\"https://ftp.pcre.org/pub/pcre/\" target=\"_blank\" rel=\"noopener\">传送门</a></p>\n</li>\n<li><p>zlib源文件：<a href=\"https://zlib.net/\" target=\"_blank\" rel=\"noopener\">传送门</a></p>\n</li>\n</ol>\n<h3 id=\"2-将下载的源文件放到ECS上去\"><a href=\"#2-将下载的源文件放到ECS上去\" class=\"headerlink\" title=\"2.将下载的源文件放到ECS上去\"></a>2.将下载的源文件放到ECS上去</h3><p>我是通过sftp的方式将文件放上去的</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># sftp模式登陆到服务器</span></span><br><span class=\"line\">sftp name@ip</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># cd到你想放置临时文件的目录</span></span><br><span class=\"line\">sftp&gt; <span class=\"built_in\">cd</span> /tmp</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># cd到你本机下载文件的位置</span></span><br><span class=\"line\">sftp&gt; lcd ~/Download</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 上传文件</span></span><br><span class=\"line\">sftp&gt; put nginx.tar.gz openssl.tar.gz pcre.tar.gz zlib.tar.gz</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-登陆到服务器进行配置、安装、测试\"><a href=\"#3-登陆到服务器进行配置、安装、测试\" class=\"headerlink\" title=\"3.登陆到服务器进行配置、安装、测试\"></a>3.登陆到服务器进行配置、安装、测试</h3><p>我使用ssh的方式</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># ssh登陆服务器</span></span><br><span class=\"line\">ssh name@ip</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># cd到刚才上传文件的目录</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /tmp</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 解压文件</span></span><br><span class=\"line\">tar -xzf filename</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 进入nginx源码目录做小小的修改，为了安全</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> ./nginx/src/core</span><br><span class=\"line\">vim nginx.h</span><br></pre></td></tr></table></figure>\n<p>源文件内容如下<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"> * Copyright (C) Igor Sysoev</span></span><br><span class=\"line\"><span class=\"comment\"> * Copyright (C) Nginx, Inc.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">ifndef</span> _NGINX_H_INCLUDED_</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> _NGINX_H_INCLUDED_</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> nginx_version      1013004</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> NGINX_VERSION      <span class=\"meta-string\">\"1.13.4\"</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> NGINX_VER          <span class=\"meta-string\">\"nginx/\"</span> NGINX_VERSION</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">ifdef</span> NGX_BUILD</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> NGINX_VER_BUILD    NGINX_VER <span class=\"meta-string\">\" (\"</span> NGX_BUILD <span class=\"meta-string\">\")\"</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">else</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> NGINX_VER_BUILD    NGINX_VER</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> NGINX_VAR          <span class=\"meta-string\">\"NGINX\"</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> NGX_OLDPID_EXT     <span class=\"meta-string\">\".oldbin\"</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span> <span class=\"comment\">/* _NGINX_H_INCLUDED_ */</span></span></span><br></pre></td></tr></table></figure></p>\n<p>更改之后的文件内容如下<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"> * Copyright (C) Igor Sysoev</span></span><br><span class=\"line\"><span class=\"comment\"> * Copyright (C) Nginx, Inc.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">ifndef</span> _NGINX_H_INCLUDED_</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> _NGINX_H_INCLUDED_</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> nginx_version      1013004</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> NGINX_VERSION      <span class=\"meta-string\">\"\"</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> NGINX_VER          <span class=\"meta-string\">\"super\"</span> NGINX_VERSION</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">ifdef</span> NGX_BUILD</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> NGINX_VER_BUILD    NGINX_VER <span class=\"meta-string\">\" (\"</span> NGX_BUILD <span class=\"meta-string\">\")\"</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">else</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> NGINX_VER_BUILD    NGINX_VER</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> NGINX_VAR          <span class=\"meta-string\">\"super\"</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> NGX_OLDPID_EXT     <span class=\"meta-string\">\".oldbin\"</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span> <span class=\"comment\">/* _NGINX_H_INCLUDED_ */</span></span></span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># cd到nginx目录，从core目录操作</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> ../../</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># configure</span></span><br><span class=\"line\">./configure  --prefix=/usr/<span class=\"built_in\">local</span>/nginx --with-http_stub_status_module --with-http_ssl_module --with-openssl=/tmp/openssl --with-pcre=/tmp/pcre --with-zlib=/tmp/zlib</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># /usr/local/nginx 指的是最终编译安装到此路径</span></span><br><span class=\"line\"><span class=\"comment\"># /tmp/openssl, /tmp/pcre, /tmp/zlib 对应解压源码文件夹位置</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># install</span></span><br><span class=\"line\">make install</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 安装完之后到安装目录下去</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /usr/<span class=\"built_in\">local</span>/nginx</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 检查一下是否安装配置成功</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> ./sbin</span><br><span class=\"line\">./nginx -t</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 正常输出如下</span></span><br><span class=\"line\">nginx: the configuration file /usr/<span class=\"built_in\">local</span>/nginx/conf/nginx.conf syntax is ok</span><br><span class=\"line\">nginx: configuration file /usr/<span class=\"built_in\">local</span>/nginx/conf/nginx.conf <span class=\"built_in\">test</span> is successful</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 如果看到如下结果，尝试重启一下</span></span><br><span class=\"line\">The program <span class=\"string\">'nginx'</span> can be found <span class=\"keyword\">in</span> the following packages:</span><br><span class=\"line\"> * nginx-core</span><br><span class=\"line\"> * nginx-extras</span><br><span class=\"line\"> * nginx-full</span><br><span class=\"line\"> * nginx-light</span><br><span class=\"line\"> * nginx-naxsi</span><br><span class=\"line\">Try: apt-get install &lt;selected package&gt;</span><br></pre></td></tr></table></figure>\n<p>至此，已经成功安装好了nginx。</p>\n<p>有人会问为什么不通过<code>apt-get install nginx</code>之类的命令来安装，我想说的是，那种方式就无法体验最新版的nginx了。</p>"},{"title":"手把手教你在阿里云ECS上配置HTTPS","date":"2017-08-28T03:46:08.000Z","_content":"\n上HTTPS的理由不用多说，直接上教程。\n\n<!-- more -->\n\n### 1.申请SSL证书\n\n免费申请阿里云SSL证书：[传送门](https://common-buy.aliyun.com/?commodityCode=cas#/buy)\n\n按照阿里云的提示操作填写相关的信息、配置好自己的域名等信息。附上截图教程：[传送门](https://bbs.aliyun.com/read/298246.html)\n\n### 2.配置nginx\n\n由初始的nginx我没有备份，这里就只附上最后配置完的代码吧：\n\n```bash\n#user  nobody;\nworker_processes  1;\n\n#error_log  logs/error.log;\n#error_log  logs/error.log  notice;\n#error_log  logs/error.log  info;\n\n#pid        logs/nginx.pid;\n\n\nevents {\n    worker_connections  1024;\n}\n\n\nhttp {\n    include       mime.types;\n    default_type  application/octet-stream;\n\n    #log_format  main  '$remote_addr - $remote_user [$time_local] \"$request\" '\n    #                  '$status $body_bytes_sent \"$http_referer\" '\n    #                  '\"$http_user_agent\" \"$http_x_forwarded_for\"';\n\n    #access_log  logs/access.log  main;\n\n    sendfile        on;\n    #tcp_nopush     on;\n\n    #keepalive_timeout  0;\n    keepalive_timeout  65;\n\n    #gzip  on;\n\n    server {\n        listen       80;\n\t    server_name  xxx.com;\n\t    add_header Strict-Transport-Security max-age=15768000;\n\t    return 301 https://ricosmall.cn$request_uri;\n\n        #charset koi8-r;\n\n        #access_log  logs/host.access.log  main;\n\n        #location / {\n        #    root   html;\n        #    index  index.html index.htm;\n        #}\n\n        #error_page  404              /404.html;\n\n        # redirect server error pages to the static page /50x.html\n        #\n        #error_page   500 502 503 504  /50x.html;\n        #location = /50x.html {\n        #    root   html;\n        #}\n\n        # proxy the PHP scripts to Apache listening on 127.0.0.1:80\n        #\n        #location ~ \\.php$ {\n        #    proxy_pass   http://127.0.0.1;\n        #}\n\n        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000\n        #\n        #location ~ \\.php$ {\n        #    root           html;\n        #    fastcgi_pass   127.0.0.1:9000;\n        #    fastcgi_index  index.php;\n        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;\n        #    include        fastcgi_params;\n        #}\n\n        # deny access to .htaccess files, if Apache's document root\n        # concurs with nginx's one\n        #\n        #location ~ /\\.ht {\n        #    deny  all;\n        #}\n    }\n\n\n    # another virtual host using mix of IP-, name-, and port-based configuration\n    #\n    #server {\n    #    listen       8000;\n    #    listen       somename:8080;\n    #    server_name  somename  alias  another.alias;\n\n    #    location / {\n    #        root   html;\n    #        index  index.html index.htm;\n    #    }\n    #}\n\n\n    # HTTPS server\n    #\n    server {\n    \tlisten      443 ssl http2 default_server;\n    \tserver_name xxx.com; # 你的域名\n    \tadd_header  Strict-Transport-Security max-age=15768000;\n\n    \tssl_certificate     path/to/xxx.pem; # pem文件位置\n    \tssl_certificate_key path/to/xxx.key; # 私钥位置\n\n    \tssl_protocols TLSv1 TLSv1.1 TLSv1.2;\n\n    \tssl_ciphers               'ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4';\n    \tssl_prefer_server_ciphers on;\n\n        ssl_session_cache    shared:SSL:20m;\n        ssl_session_timeout  60m;\n\n        location / {\n            root   html;\n            index  index.html index.htm;\n        }\n    }\n\n}\n```\n","source":"_posts/2017-08-28-手把手教你在阿里云ECS上配置HTTPS.md","raw":"---\ntitle: 手把手教你在阿里云ECS上配置HTTPS\ndate: 2017-08-28 11:46:08\ntags:\n- HTTPS\n- HTTP\n- nginx\ncategories:\n- 教程\n---\n\n上HTTPS的理由不用多说，直接上教程。\n\n<!-- more -->\n\n### 1.申请SSL证书\n\n免费申请阿里云SSL证书：[传送门](https://common-buy.aliyun.com/?commodityCode=cas#/buy)\n\n按照阿里云的提示操作填写相关的信息、配置好自己的域名等信息。附上截图教程：[传送门](https://bbs.aliyun.com/read/298246.html)\n\n### 2.配置nginx\n\n由初始的nginx我没有备份，这里就只附上最后配置完的代码吧：\n\n```bash\n#user  nobody;\nworker_processes  1;\n\n#error_log  logs/error.log;\n#error_log  logs/error.log  notice;\n#error_log  logs/error.log  info;\n\n#pid        logs/nginx.pid;\n\n\nevents {\n    worker_connections  1024;\n}\n\n\nhttp {\n    include       mime.types;\n    default_type  application/octet-stream;\n\n    #log_format  main  '$remote_addr - $remote_user [$time_local] \"$request\" '\n    #                  '$status $body_bytes_sent \"$http_referer\" '\n    #                  '\"$http_user_agent\" \"$http_x_forwarded_for\"';\n\n    #access_log  logs/access.log  main;\n\n    sendfile        on;\n    #tcp_nopush     on;\n\n    #keepalive_timeout  0;\n    keepalive_timeout  65;\n\n    #gzip  on;\n\n    server {\n        listen       80;\n\t    server_name  xxx.com;\n\t    add_header Strict-Transport-Security max-age=15768000;\n\t    return 301 https://ricosmall.cn$request_uri;\n\n        #charset koi8-r;\n\n        #access_log  logs/host.access.log  main;\n\n        #location / {\n        #    root   html;\n        #    index  index.html index.htm;\n        #}\n\n        #error_page  404              /404.html;\n\n        # redirect server error pages to the static page /50x.html\n        #\n        #error_page   500 502 503 504  /50x.html;\n        #location = /50x.html {\n        #    root   html;\n        #}\n\n        # proxy the PHP scripts to Apache listening on 127.0.0.1:80\n        #\n        #location ~ \\.php$ {\n        #    proxy_pass   http://127.0.0.1;\n        #}\n\n        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000\n        #\n        #location ~ \\.php$ {\n        #    root           html;\n        #    fastcgi_pass   127.0.0.1:9000;\n        #    fastcgi_index  index.php;\n        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;\n        #    include        fastcgi_params;\n        #}\n\n        # deny access to .htaccess files, if Apache's document root\n        # concurs with nginx's one\n        #\n        #location ~ /\\.ht {\n        #    deny  all;\n        #}\n    }\n\n\n    # another virtual host using mix of IP-, name-, and port-based configuration\n    #\n    #server {\n    #    listen       8000;\n    #    listen       somename:8080;\n    #    server_name  somename  alias  another.alias;\n\n    #    location / {\n    #        root   html;\n    #        index  index.html index.htm;\n    #    }\n    #}\n\n\n    # HTTPS server\n    #\n    server {\n    \tlisten      443 ssl http2 default_server;\n    \tserver_name xxx.com; # 你的域名\n    \tadd_header  Strict-Transport-Security max-age=15768000;\n\n    \tssl_certificate     path/to/xxx.pem; # pem文件位置\n    \tssl_certificate_key path/to/xxx.key; # 私钥位置\n\n    \tssl_protocols TLSv1 TLSv1.1 TLSv1.2;\n\n    \tssl_ciphers               'ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4';\n    \tssl_prefer_server_ciphers on;\n\n        ssl_session_cache    shared:SSL:20m;\n        ssl_session_timeout  60m;\n\n        location / {\n            root   html;\n            index  index.html index.htm;\n        }\n    }\n\n}\n```\n","slug":"手把手教你在阿里云ECS上配置HTTPS","published":1,"updated":"2018-03-27T13:52:33.771Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjskilakv001ag9zb2fctgniw","content":"<p>上HTTPS的理由不用多说，直接上教程。</p>\n<a id=\"more\"></a>\n<h3 id=\"1-申请SSL证书\"><a href=\"#1-申请SSL证书\" class=\"headerlink\" title=\"1.申请SSL证书\"></a>1.申请SSL证书</h3><p>免费申请阿里云SSL证书：<a href=\"https://common-buy.aliyun.com/?commodityCode=cas#/buy\" target=\"_blank\" rel=\"noopener\">传送门</a></p>\n<p>按照阿里云的提示操作填写相关的信息、配置好自己的域名等信息。附上截图教程：<a href=\"https://bbs.aliyun.com/read/298246.html\" target=\"_blank\" rel=\"noopener\">传送门</a></p>\n<h3 id=\"2-配置nginx\"><a href=\"#2-配置nginx\" class=\"headerlink\" title=\"2.配置nginx\"></a>2.配置nginx</h3><p>由初始的nginx我没有备份，这里就只附上最后配置完的代码吧：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#user  nobody;</span></span><br><span class=\"line\">worker_processes  1;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#error_log  logs/error.log;</span></span><br><span class=\"line\"><span class=\"comment\">#error_log  logs/error.log  notice;</span></span><br><span class=\"line\"><span class=\"comment\">#error_log  logs/error.log  info;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#pid        logs/nginx.pid;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">events &#123;</span><br><span class=\"line\">    worker_connections  1024;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">http &#123;</span><br><span class=\"line\">    include       mime.types;</span><br><span class=\"line\">    default_type  application/octet-stream;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">#log_format  main  '$remote_addr - $remote_user [$time_local] \"$request\" '</span></span><br><span class=\"line\">    <span class=\"comment\">#                  '$status $body_bytes_sent \"$http_referer\" '</span></span><br><span class=\"line\">    <span class=\"comment\">#                  '\"$http_user_agent\" \"$http_x_forwarded_for\"';</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">#access_log  logs/access.log  main;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    sendfile        on;</span><br><span class=\"line\">    <span class=\"comment\">#tcp_nopush     on;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">#keepalive_timeout  0;</span></span><br><span class=\"line\">    keepalive_timeout  65;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">#gzip  on;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    server &#123;</span><br><span class=\"line\">        listen       80;</span><br><span class=\"line\">\t    server_name  xxx.com;</span><br><span class=\"line\">\t    add_header Strict-Transport-Security max-age=15768000;</span><br><span class=\"line\">\t    <span class=\"built_in\">return</span> 301 https://ricosmall.cn<span class=\"variable\">$request_uri</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">#charset koi8-r;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">#access_log  logs/host.access.log  main;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">#location / &#123;</span></span><br><span class=\"line\">        <span class=\"comment\">#    root   html;</span></span><br><span class=\"line\">        <span class=\"comment\">#    index  index.html index.htm;</span></span><br><span class=\"line\">        <span class=\"comment\">#&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">#error_page  404              /404.html;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># redirect server error pages to the static page /50x.html</span></span><br><span class=\"line\">        <span class=\"comment\">#</span></span><br><span class=\"line\">        <span class=\"comment\">#error_page   500 502 503 504  /50x.html;</span></span><br><span class=\"line\">        <span class=\"comment\">#location = /50x.html &#123;</span></span><br><span class=\"line\">        <span class=\"comment\">#    root   html;</span></span><br><span class=\"line\">        <span class=\"comment\">#&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># proxy the PHP scripts to Apache listening on 127.0.0.1:80</span></span><br><span class=\"line\">        <span class=\"comment\">#</span></span><br><span class=\"line\">        <span class=\"comment\">#location ~ \\.php$ &#123;</span></span><br><span class=\"line\">        <span class=\"comment\">#    proxy_pass   http://127.0.0.1;</span></span><br><span class=\"line\">        <span class=\"comment\">#&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</span></span><br><span class=\"line\">        <span class=\"comment\">#</span></span><br><span class=\"line\">        <span class=\"comment\">#location ~ \\.php$ &#123;</span></span><br><span class=\"line\">        <span class=\"comment\">#    root           html;</span></span><br><span class=\"line\">        <span class=\"comment\">#    fastcgi_pass   127.0.0.1:9000;</span></span><br><span class=\"line\">        <span class=\"comment\">#    fastcgi_index  index.php;</span></span><br><span class=\"line\">        <span class=\"comment\">#    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;</span></span><br><span class=\"line\">        <span class=\"comment\">#    include        fastcgi_params;</span></span><br><span class=\"line\">        <span class=\"comment\">#&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># deny access to .htaccess files, if Apache's document root</span></span><br><span class=\"line\">        <span class=\"comment\"># concurs with nginx's one</span></span><br><span class=\"line\">        <span class=\"comment\">#</span></span><br><span class=\"line\">        <span class=\"comment\">#location ~ /\\.ht &#123;</span></span><br><span class=\"line\">        <span class=\"comment\">#    deny  all;</span></span><br><span class=\"line\">        <span class=\"comment\">#&#125;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># another virtual host using mix of IP-, name-, and port-based configuration</span></span><br><span class=\"line\">    <span class=\"comment\">#</span></span><br><span class=\"line\">    <span class=\"comment\">#server &#123;</span></span><br><span class=\"line\">    <span class=\"comment\">#    listen       8000;</span></span><br><span class=\"line\">    <span class=\"comment\">#    listen       somename:8080;</span></span><br><span class=\"line\">    <span class=\"comment\">#    server_name  somename  alias  another.alias;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">#    location / &#123;</span></span><br><span class=\"line\">    <span class=\"comment\">#        root   html;</span></span><br><span class=\"line\">    <span class=\"comment\">#        index  index.html index.htm;</span></span><br><span class=\"line\">    <span class=\"comment\">#    &#125;</span></span><br><span class=\"line\">    <span class=\"comment\">#&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># HTTPS server</span></span><br><span class=\"line\">    <span class=\"comment\">#</span></span><br><span class=\"line\">    server &#123;</span><br><span class=\"line\">    \tlisten      443 ssl http2 default_server;</span><br><span class=\"line\">    \tserver_name xxx.com; <span class=\"comment\"># 你的域名</span></span><br><span class=\"line\">    \tadd_header  Strict-Transport-Security max-age=15768000;</span><br><span class=\"line\"></span><br><span class=\"line\">    \tssl_certificate     path/to/xxx.pem; <span class=\"comment\"># pem文件位置</span></span><br><span class=\"line\">    \tssl_certificate_key path/to/xxx.key; <span class=\"comment\"># 私钥位置</span></span><br><span class=\"line\"></span><br><span class=\"line\">    \tssl_protocols TLSv1 TLSv1.1 TLSv1.2;</span><br><span class=\"line\"></span><br><span class=\"line\">    \tssl_ciphers               <span class=\"string\">'ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4'</span>;</span><br><span class=\"line\">    \tssl_prefer_server_ciphers on;</span><br><span class=\"line\"></span><br><span class=\"line\">        ssl_session_cache    shared:SSL:20m;</span><br><span class=\"line\">        ssl_session_timeout  60m;</span><br><span class=\"line\"></span><br><span class=\"line\">        location / &#123;</span><br><span class=\"line\">            root   html;</span><br><span class=\"line\">            index  index.html index.htm;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{"next":{"favicon":"/favicon.ico","keywords":"Hexo, NexT","rss":null,"since":2016,"authoricon":"heart","copyright":true,"canonical":true,"seo":true,"index_with_subtitle":false,"menu":{"home":"/","categories":"/categories/","archives":"/archives/","tags":"/tags/","about":"/about/"},"menu_icons":{"enable":true,"home":"home","about":"user","categories":"th","schedule":"calendar","tags":"tags","archives":"archive","sitemap":"sitemap","commonweal":"heartbeat"},"scheme":"Mist","social":{"Github":"https://github.com/ricosmall"},"social_icons":{"enable":true,"GitHub":"github","Twitter":"twitter","Weibo":"weibo"},"avatar":"/uploads/avatar.png","toc":{"enable":true,"number":true,"wrap":false},"sidebar":{"position":"left","display":"post","offset":12,"offset_float":0,"b2t":false,"scrollpercent":false,"onmobile":false},"scroll_to_more":true,"save_scroll":false,"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"post_meta":{"item_text":true,"created_at":true,"updated_at":false,"categories":true},"post_wordcount":{"item_text":true,"wordcount":false,"min2read":false,"separated_meta":true},"post_copyright":{"enable":false,"license":"CC BY-NC-SA 3.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/3.0/"},"custom_logo":{"enabled":false,"image":null},"highlight_theme":"night bright","font":{"enable":true,"host":null,"global":{"external":true,"family":"Lato"},"headings":{"external":true,"family":null},"posts":{"external":true,"family":null},"logo":{"external":true,"family":null,"size":null},"codes":{"external":true,"family":"Menlo, Monospace","size":null}},"mathjax":{"enable":true,"per_page":false,"cdn":"//cdn.bootcss.com/mathjax/2.7.1/latest.js?config=TeX-AMS-MML_HTMLorMML"},"han":false,"disqus":{"enable":false,"shortname":"ricosmall","count":false},"changyan":{"enable":false,"appid":null,"appkey":null},"duoshuo_info":{"ua_enable":true,"admin_enable":false,"user_id":0},"facebook_sdk":{"enable":false,"app_id":null,"fb_admin":null,"like_button":null,"webmaster":null},"facebook_comments_plugin":{"enable":false,"num_of_posts":10,"width":"100%","scheme":"light"},"vkontakte_api":{"enable":false,"app_id":null,"like":true,"comments":true,"num_of_posts":10},"rating":{"enable":false,"id":null,"color":"fc6423"},"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null},"busuanzi_count":{"enable":true,"site_uv":true,"site_uv_header":"<i class=\"fa fa-user\"></i>访问人数","site_uv_footer":null,"site_pv":true,"site_pv_header":"<i class=\"fa fa-eye\"></i>总访问量","site_pv_footer":"次","page_pv":true,"page_pv_header":"<i class=\"fa fa-file-o\"></i>浏览","page_pv_footer":"次"},"baidu_push":false,"calendar":{"enable":false,"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"timeZone":null,"showDeleted":false,"singleEvents":true,"maxResults":250},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1},"exturl":false,"use_motion":true,"fancybox":true,"pace":false,"pace_theme":"pace-theme-minimal","canvas_nest":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false,"canvas_ribbon":false,"vendors":{"_internal":"lib","jquery":null,"fancybox":null,"fancybox_css":null,"fastclick":null,"lazyload":null,"velocity":null,"velocity_ui":null,"ua_parser":null,"fontawesome":null,"algolia_instant_js":null,"algolia_instant_css":null,"pace":null,"pace_css":null,"canvas_nest":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_ribbon":null,"han":null},"css":"css","js":"js","images":"images","version":"5.1.1"}}},"excerpt":"<p>上HTTPS的理由不用多说，直接上教程。</p>","more":"<h3 id=\"1-申请SSL证书\"><a href=\"#1-申请SSL证书\" class=\"headerlink\" title=\"1.申请SSL证书\"></a>1.申请SSL证书</h3><p>免费申请阿里云SSL证书：<a href=\"https://common-buy.aliyun.com/?commodityCode=cas#/buy\" target=\"_blank\" rel=\"noopener\">传送门</a></p>\n<p>按照阿里云的提示操作填写相关的信息、配置好自己的域名等信息。附上截图教程：<a href=\"https://bbs.aliyun.com/read/298246.html\" target=\"_blank\" rel=\"noopener\">传送门</a></p>\n<h3 id=\"2-配置nginx\"><a href=\"#2-配置nginx\" class=\"headerlink\" title=\"2.配置nginx\"></a>2.配置nginx</h3><p>由初始的nginx我没有备份，这里就只附上最后配置完的代码吧：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#user  nobody;</span></span><br><span class=\"line\">worker_processes  1;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#error_log  logs/error.log;</span></span><br><span class=\"line\"><span class=\"comment\">#error_log  logs/error.log  notice;</span></span><br><span class=\"line\"><span class=\"comment\">#error_log  logs/error.log  info;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#pid        logs/nginx.pid;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">events &#123;</span><br><span class=\"line\">    worker_connections  1024;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">http &#123;</span><br><span class=\"line\">    include       mime.types;</span><br><span class=\"line\">    default_type  application/octet-stream;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">#log_format  main  '$remote_addr - $remote_user [$time_local] \"$request\" '</span></span><br><span class=\"line\">    <span class=\"comment\">#                  '$status $body_bytes_sent \"$http_referer\" '</span></span><br><span class=\"line\">    <span class=\"comment\">#                  '\"$http_user_agent\" \"$http_x_forwarded_for\"';</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">#access_log  logs/access.log  main;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    sendfile        on;</span><br><span class=\"line\">    <span class=\"comment\">#tcp_nopush     on;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">#keepalive_timeout  0;</span></span><br><span class=\"line\">    keepalive_timeout  65;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">#gzip  on;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    server &#123;</span><br><span class=\"line\">        listen       80;</span><br><span class=\"line\">\t    server_name  xxx.com;</span><br><span class=\"line\">\t    add_header Strict-Transport-Security max-age=15768000;</span><br><span class=\"line\">\t    <span class=\"built_in\">return</span> 301 https://ricosmall.cn<span class=\"variable\">$request_uri</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">#charset koi8-r;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">#access_log  logs/host.access.log  main;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">#location / &#123;</span></span><br><span class=\"line\">        <span class=\"comment\">#    root   html;</span></span><br><span class=\"line\">        <span class=\"comment\">#    index  index.html index.htm;</span></span><br><span class=\"line\">        <span class=\"comment\">#&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">#error_page  404              /404.html;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># redirect server error pages to the static page /50x.html</span></span><br><span class=\"line\">        <span class=\"comment\">#</span></span><br><span class=\"line\">        <span class=\"comment\">#error_page   500 502 503 504  /50x.html;</span></span><br><span class=\"line\">        <span class=\"comment\">#location = /50x.html &#123;</span></span><br><span class=\"line\">        <span class=\"comment\">#    root   html;</span></span><br><span class=\"line\">        <span class=\"comment\">#&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># proxy the PHP scripts to Apache listening on 127.0.0.1:80</span></span><br><span class=\"line\">        <span class=\"comment\">#</span></span><br><span class=\"line\">        <span class=\"comment\">#location ~ \\.php$ &#123;</span></span><br><span class=\"line\">        <span class=\"comment\">#    proxy_pass   http://127.0.0.1;</span></span><br><span class=\"line\">        <span class=\"comment\">#&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</span></span><br><span class=\"line\">        <span class=\"comment\">#</span></span><br><span class=\"line\">        <span class=\"comment\">#location ~ \\.php$ &#123;</span></span><br><span class=\"line\">        <span class=\"comment\">#    root           html;</span></span><br><span class=\"line\">        <span class=\"comment\">#    fastcgi_pass   127.0.0.1:9000;</span></span><br><span class=\"line\">        <span class=\"comment\">#    fastcgi_index  index.php;</span></span><br><span class=\"line\">        <span class=\"comment\">#    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;</span></span><br><span class=\"line\">        <span class=\"comment\">#    include        fastcgi_params;</span></span><br><span class=\"line\">        <span class=\"comment\">#&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># deny access to .htaccess files, if Apache's document root</span></span><br><span class=\"line\">        <span class=\"comment\"># concurs with nginx's one</span></span><br><span class=\"line\">        <span class=\"comment\">#</span></span><br><span class=\"line\">        <span class=\"comment\">#location ~ /\\.ht &#123;</span></span><br><span class=\"line\">        <span class=\"comment\">#    deny  all;</span></span><br><span class=\"line\">        <span class=\"comment\">#&#125;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># another virtual host using mix of IP-, name-, and port-based configuration</span></span><br><span class=\"line\">    <span class=\"comment\">#</span></span><br><span class=\"line\">    <span class=\"comment\">#server &#123;</span></span><br><span class=\"line\">    <span class=\"comment\">#    listen       8000;</span></span><br><span class=\"line\">    <span class=\"comment\">#    listen       somename:8080;</span></span><br><span class=\"line\">    <span class=\"comment\">#    server_name  somename  alias  another.alias;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">#    location / &#123;</span></span><br><span class=\"line\">    <span class=\"comment\">#        root   html;</span></span><br><span class=\"line\">    <span class=\"comment\">#        index  index.html index.htm;</span></span><br><span class=\"line\">    <span class=\"comment\">#    &#125;</span></span><br><span class=\"line\">    <span class=\"comment\">#&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># HTTPS server</span></span><br><span class=\"line\">    <span class=\"comment\">#</span></span><br><span class=\"line\">    server &#123;</span><br><span class=\"line\">    \tlisten      443 ssl http2 default_server;</span><br><span class=\"line\">    \tserver_name xxx.com; <span class=\"comment\"># 你的域名</span></span><br><span class=\"line\">    \tadd_header  Strict-Transport-Security max-age=15768000;</span><br><span class=\"line\"></span><br><span class=\"line\">    \tssl_certificate     path/to/xxx.pem; <span class=\"comment\"># pem文件位置</span></span><br><span class=\"line\">    \tssl_certificate_key path/to/xxx.key; <span class=\"comment\"># 私钥位置</span></span><br><span class=\"line\"></span><br><span class=\"line\">    \tssl_protocols TLSv1 TLSv1.1 TLSv1.2;</span><br><span class=\"line\"></span><br><span class=\"line\">    \tssl_ciphers               <span class=\"string\">'ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4'</span>;</span><br><span class=\"line\">    \tssl_prefer_server_ciphers on;</span><br><span class=\"line\"></span><br><span class=\"line\">        ssl_session_cache    shared:SSL:20m;</span><br><span class=\"line\">        ssl_session_timeout  60m;</span><br><span class=\"line\"></span><br><span class=\"line\">        location / &#123;</span><br><span class=\"line\">            root   html;</span><br><span class=\"line\">            index  index.html index.htm;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"前端框架引入的意义","date":"2017-09-29T09:24:47.000Z","_content":"\n如今的 Web 前端领域什么最火？当然是前端框架啦。 React 听过吗？ Angular 听过吗？ Vue 听过么？如果都没有听过就不用往下看了。\n\n<!-- more -->\n\n## 前端框架与前端类库的区别\n\njQuery 等库与前端 MVC 间的区别主要表现在以下几个方面：\n\n### 二者解决的问题存在着一定的差异\n\njQuery 主要应用于对代码、封装等问题的解决。而其也为系统实际运行提供了多种封装方法，由此稳固了代码结构的合理性设置，而前端 MVC 框架与 jQuery 等库在问题解决方面有所不同，其更加倾向于对程序组织方面问题的解决，进而推动系统中的程序运行逐渐趋于规范化。另外，前端框架为系统运行提供了一套规范化的问题解决方案，致使系统运行中出现相应问题时可及时参照方案对问题展开及时、有效的解决，且最终提高系统运行的稳定性；\n\n### jQuery 的操作中心为 DOM ，而 MVC 框架的中心却为模型\n\n因而 MVC 与 jQuery 相比其流程的变更更为及时，且也为现代工程师的代码编写提供了有利条件。另外， MVC 框架解决了传统 HTML 源码处理中的问题，促使相关工作人员在实际工作开展过程中即可通过参照前端 MVC 框架中的规范化流程打通后端处理，提高系统中的整体运行效率。\n\n近年来， Web 前端 MVC 框架的开发意义逐渐引起了人们的关注，而从 Web 前端 MVC 框架的适用范围研究中即可看出其在系统运行中占着至关重要的位置。对于此，可以从以下几个方面入手分析：\n\n- 从大量的实践中可以看出， Web 前端 MVC 框架不适用于页面型产品中，造成此现象的原因主要归咎于此类产品主要依附于服务器来运作自身系统，因而在此背景下， jQuery 等库会更好的满足其互动性需求，且最终导致 Web 前端 MVC 框架在页面型产品中无法发挥其自身效用；\n\n- 在软件型产品，对于 Web 前端 MVC 框架的应用是非常必要的。首先由于软件型产品对数据操作能力的要求较大，因而若将 Web 前端 MVC 框架应用于软件型产品实际运行中，那么框架中的数据模型层会在一定程度上满足其数据操作需求，且会在系统实际运行中出现问题时，对数据展开及时的更新处理。其次，软件型产品中会涉及到大量的视图操作，但是由于 jQuery 等库无法完成高效率的操作行为，因而将 Web 前端 MVC 框架应用于其中，会在一定程度上更好的满足程序开发需求。\n\n参考：\n[Web前端框架与类库的思考](http://www.cnblogs.com/coco1s/p/4040108.html) | [@ChokCoco](https://github.com/chokcoco)\n","source":"_posts/2017-09-29-前端框架引入的意义.md","raw":"---\ntitle: 前端框架引入的意义\ndate: 2017-09-29 17:24:47\ntags:\n- Vue\n- 框架\ncategories:\n- 总结\n---\n\n如今的 Web 前端领域什么最火？当然是前端框架啦。 React 听过吗？ Angular 听过吗？ Vue 听过么？如果都没有听过就不用往下看了。\n\n<!-- more -->\n\n## 前端框架与前端类库的区别\n\njQuery 等库与前端 MVC 间的区别主要表现在以下几个方面：\n\n### 二者解决的问题存在着一定的差异\n\njQuery 主要应用于对代码、封装等问题的解决。而其也为系统实际运行提供了多种封装方法，由此稳固了代码结构的合理性设置，而前端 MVC 框架与 jQuery 等库在问题解决方面有所不同，其更加倾向于对程序组织方面问题的解决，进而推动系统中的程序运行逐渐趋于规范化。另外，前端框架为系统运行提供了一套规范化的问题解决方案，致使系统运行中出现相应问题时可及时参照方案对问题展开及时、有效的解决，且最终提高系统运行的稳定性；\n\n### jQuery 的操作中心为 DOM ，而 MVC 框架的中心却为模型\n\n因而 MVC 与 jQuery 相比其流程的变更更为及时，且也为现代工程师的代码编写提供了有利条件。另外， MVC 框架解决了传统 HTML 源码处理中的问题，促使相关工作人员在实际工作开展过程中即可通过参照前端 MVC 框架中的规范化流程打通后端处理，提高系统中的整体运行效率。\n\n近年来， Web 前端 MVC 框架的开发意义逐渐引起了人们的关注，而从 Web 前端 MVC 框架的适用范围研究中即可看出其在系统运行中占着至关重要的位置。对于此，可以从以下几个方面入手分析：\n\n- 从大量的实践中可以看出， Web 前端 MVC 框架不适用于页面型产品中，造成此现象的原因主要归咎于此类产品主要依附于服务器来运作自身系统，因而在此背景下， jQuery 等库会更好的满足其互动性需求，且最终导致 Web 前端 MVC 框架在页面型产品中无法发挥其自身效用；\n\n- 在软件型产品，对于 Web 前端 MVC 框架的应用是非常必要的。首先由于软件型产品对数据操作能力的要求较大，因而若将 Web 前端 MVC 框架应用于软件型产品实际运行中，那么框架中的数据模型层会在一定程度上满足其数据操作需求，且会在系统实际运行中出现问题时，对数据展开及时的更新处理。其次，软件型产品中会涉及到大量的视图操作，但是由于 jQuery 等库无法完成高效率的操作行为，因而将 Web 前端 MVC 框架应用于其中，会在一定程度上更好的满足程序开发需求。\n\n参考：\n[Web前端框架与类库的思考](http://www.cnblogs.com/coco1s/p/4040108.html) | [@ChokCoco](https://github.com/chokcoco)\n","slug":"前端框架引入的意义","published":1,"updated":"2018-03-27T13:52:33.771Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjskilakw001cg9zbymu8d4n7","content":"<p>如今的 Web 前端领域什么最火？当然是前端框架啦。 React 听过吗？ Angular 听过吗？ Vue 听过么？如果都没有听过就不用往下看了。</p>\n<a id=\"more\"></a>\n<h2 id=\"前端框架与前端类库的区别\"><a href=\"#前端框架与前端类库的区别\" class=\"headerlink\" title=\"前端框架与前端类库的区别\"></a>前端框架与前端类库的区别</h2><p>jQuery 等库与前端 MVC 间的区别主要表现在以下几个方面：</p>\n<h3 id=\"二者解决的问题存在着一定的差异\"><a href=\"#二者解决的问题存在着一定的差异\" class=\"headerlink\" title=\"二者解决的问题存在着一定的差异\"></a>二者解决的问题存在着一定的差异</h3><p>jQuery 主要应用于对代码、封装等问题的解决。而其也为系统实际运行提供了多种封装方法，由此稳固了代码结构的合理性设置，而前端 MVC 框架与 jQuery 等库在问题解决方面有所不同，其更加倾向于对程序组织方面问题的解决，进而推动系统中的程序运行逐渐趋于规范化。另外，前端框架为系统运行提供了一套规范化的问题解决方案，致使系统运行中出现相应问题时可及时参照方案对问题展开及时、有效的解决，且最终提高系统运行的稳定性；</p>\n<h3 id=\"jQuery-的操作中心为-DOM-，而-MVC-框架的中心却为模型\"><a href=\"#jQuery-的操作中心为-DOM-，而-MVC-框架的中心却为模型\" class=\"headerlink\" title=\"jQuery 的操作中心为 DOM ，而 MVC 框架的中心却为模型\"></a>jQuery 的操作中心为 DOM ，而 MVC 框架的中心却为模型</h3><p>因而 MVC 与 jQuery 相比其流程的变更更为及时，且也为现代工程师的代码编写提供了有利条件。另外， MVC 框架解决了传统 HTML 源码处理中的问题，促使相关工作人员在实际工作开展过程中即可通过参照前端 MVC 框架中的规范化流程打通后端处理，提高系统中的整体运行效率。</p>\n<p>近年来， Web 前端 MVC 框架的开发意义逐渐引起了人们的关注，而从 Web 前端 MVC 框架的适用范围研究中即可看出其在系统运行中占着至关重要的位置。对于此，可以从以下几个方面入手分析：</p>\n<ul>\n<li><p>从大量的实践中可以看出， Web 前端 MVC 框架不适用于页面型产品中，造成此现象的原因主要归咎于此类产品主要依附于服务器来运作自身系统，因而在此背景下， jQuery 等库会更好的满足其互动性需求，且最终导致 Web 前端 MVC 框架在页面型产品中无法发挥其自身效用；</p>\n</li>\n<li><p>在软件型产品，对于 Web 前端 MVC 框架的应用是非常必要的。首先由于软件型产品对数据操作能力的要求较大，因而若将 Web 前端 MVC 框架应用于软件型产品实际运行中，那么框架中的数据模型层会在一定程度上满足其数据操作需求，且会在系统实际运行中出现问题时，对数据展开及时的更新处理。其次，软件型产品中会涉及到大量的视图操作，但是由于 jQuery 等库无法完成高效率的操作行为，因而将 Web 前端 MVC 框架应用于其中，会在一定程度上更好的满足程序开发需求。</p>\n</li>\n</ul>\n<p>参考：<br><a href=\"http://www.cnblogs.com/coco1s/p/4040108.html\" target=\"_blank\" rel=\"noopener\">Web前端框架与类库的思考</a> | <a href=\"https://github.com/chokcoco\" target=\"_blank\" rel=\"noopener\">@ChokCoco</a></p>\n","site":{"data":{"next":{"favicon":"/favicon.ico","keywords":"Hexo, NexT","rss":null,"since":2016,"authoricon":"heart","copyright":true,"canonical":true,"seo":true,"index_with_subtitle":false,"menu":{"home":"/","categories":"/categories/","archives":"/archives/","tags":"/tags/","about":"/about/"},"menu_icons":{"enable":true,"home":"home","about":"user","categories":"th","schedule":"calendar","tags":"tags","archives":"archive","sitemap":"sitemap","commonweal":"heartbeat"},"scheme":"Mist","social":{"Github":"https://github.com/ricosmall"},"social_icons":{"enable":true,"GitHub":"github","Twitter":"twitter","Weibo":"weibo"},"avatar":"/uploads/avatar.png","toc":{"enable":true,"number":true,"wrap":false},"sidebar":{"position":"left","display":"post","offset":12,"offset_float":0,"b2t":false,"scrollpercent":false,"onmobile":false},"scroll_to_more":true,"save_scroll":false,"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"post_meta":{"item_text":true,"created_at":true,"updated_at":false,"categories":true},"post_wordcount":{"item_text":true,"wordcount":false,"min2read":false,"separated_meta":true},"post_copyright":{"enable":false,"license":"CC BY-NC-SA 3.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/3.0/"},"custom_logo":{"enabled":false,"image":null},"highlight_theme":"night bright","font":{"enable":true,"host":null,"global":{"external":true,"family":"Lato"},"headings":{"external":true,"family":null},"posts":{"external":true,"family":null},"logo":{"external":true,"family":null,"size":null},"codes":{"external":true,"family":"Menlo, Monospace","size":null}},"mathjax":{"enable":true,"per_page":false,"cdn":"//cdn.bootcss.com/mathjax/2.7.1/latest.js?config=TeX-AMS-MML_HTMLorMML"},"han":false,"disqus":{"enable":false,"shortname":"ricosmall","count":false},"changyan":{"enable":false,"appid":null,"appkey":null},"duoshuo_info":{"ua_enable":true,"admin_enable":false,"user_id":0},"facebook_sdk":{"enable":false,"app_id":null,"fb_admin":null,"like_button":null,"webmaster":null},"facebook_comments_plugin":{"enable":false,"num_of_posts":10,"width":"100%","scheme":"light"},"vkontakte_api":{"enable":false,"app_id":null,"like":true,"comments":true,"num_of_posts":10},"rating":{"enable":false,"id":null,"color":"fc6423"},"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null},"busuanzi_count":{"enable":true,"site_uv":true,"site_uv_header":"<i class=\"fa fa-user\"></i>访问人数","site_uv_footer":null,"site_pv":true,"site_pv_header":"<i class=\"fa fa-eye\"></i>总访问量","site_pv_footer":"次","page_pv":true,"page_pv_header":"<i class=\"fa fa-file-o\"></i>浏览","page_pv_footer":"次"},"baidu_push":false,"calendar":{"enable":false,"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"timeZone":null,"showDeleted":false,"singleEvents":true,"maxResults":250},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1},"exturl":false,"use_motion":true,"fancybox":true,"pace":false,"pace_theme":"pace-theme-minimal","canvas_nest":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false,"canvas_ribbon":false,"vendors":{"_internal":"lib","jquery":null,"fancybox":null,"fancybox_css":null,"fastclick":null,"lazyload":null,"velocity":null,"velocity_ui":null,"ua_parser":null,"fontawesome":null,"algolia_instant_js":null,"algolia_instant_css":null,"pace":null,"pace_css":null,"canvas_nest":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_ribbon":null,"han":null},"css":"css","js":"js","images":"images","version":"5.1.1"}}},"excerpt":"<p>如今的 Web 前端领域什么最火？当然是前端框架啦。 React 听过吗？ Angular 听过吗？ Vue 听过么？如果都没有听过就不用往下看了。</p>","more":"<h2 id=\"前端框架与前端类库的区别\"><a href=\"#前端框架与前端类库的区别\" class=\"headerlink\" title=\"前端框架与前端类库的区别\"></a>前端框架与前端类库的区别</h2><p>jQuery 等库与前端 MVC 间的区别主要表现在以下几个方面：</p>\n<h3 id=\"二者解决的问题存在着一定的差异\"><a href=\"#二者解决的问题存在着一定的差异\" class=\"headerlink\" title=\"二者解决的问题存在着一定的差异\"></a>二者解决的问题存在着一定的差异</h3><p>jQuery 主要应用于对代码、封装等问题的解决。而其也为系统实际运行提供了多种封装方法，由此稳固了代码结构的合理性设置，而前端 MVC 框架与 jQuery 等库在问题解决方面有所不同，其更加倾向于对程序组织方面问题的解决，进而推动系统中的程序运行逐渐趋于规范化。另外，前端框架为系统运行提供了一套规范化的问题解决方案，致使系统运行中出现相应问题时可及时参照方案对问题展开及时、有效的解决，且最终提高系统运行的稳定性；</p>\n<h3 id=\"jQuery-的操作中心为-DOM-，而-MVC-框架的中心却为模型\"><a href=\"#jQuery-的操作中心为-DOM-，而-MVC-框架的中心却为模型\" class=\"headerlink\" title=\"jQuery 的操作中心为 DOM ，而 MVC 框架的中心却为模型\"></a>jQuery 的操作中心为 DOM ，而 MVC 框架的中心却为模型</h3><p>因而 MVC 与 jQuery 相比其流程的变更更为及时，且也为现代工程师的代码编写提供了有利条件。另外， MVC 框架解决了传统 HTML 源码处理中的问题，促使相关工作人员在实际工作开展过程中即可通过参照前端 MVC 框架中的规范化流程打通后端处理，提高系统中的整体运行效率。</p>\n<p>近年来， Web 前端 MVC 框架的开发意义逐渐引起了人们的关注，而从 Web 前端 MVC 框架的适用范围研究中即可看出其在系统运行中占着至关重要的位置。对于此，可以从以下几个方面入手分析：</p>\n<ul>\n<li><p>从大量的实践中可以看出， Web 前端 MVC 框架不适用于页面型产品中，造成此现象的原因主要归咎于此类产品主要依附于服务器来运作自身系统，因而在此背景下， jQuery 等库会更好的满足其互动性需求，且最终导致 Web 前端 MVC 框架在页面型产品中无法发挥其自身效用；</p>\n</li>\n<li><p>在软件型产品，对于 Web 前端 MVC 框架的应用是非常必要的。首先由于软件型产品对数据操作能力的要求较大，因而若将 Web 前端 MVC 框架应用于软件型产品实际运行中，那么框架中的数据模型层会在一定程度上满足其数据操作需求，且会在系统实际运行中出现问题时，对数据展开及时的更新处理。其次，软件型产品中会涉及到大量的视图操作，但是由于 jQuery 等库无法完成高效率的操作行为，因而将 Web 前端 MVC 框架应用于其中，会在一定程度上更好的满足程序开发需求。</p>\n</li>\n</ul>\n<p>参考：<br><a href=\"http://www.cnblogs.com/coco1s/p/4040108.html\" target=\"_blank\" rel=\"noopener\">Web前端框架与类库的思考</a> | <a href=\"https://github.com/chokcoco\" target=\"_blank\" rel=\"noopener\">@ChokCoco</a></p>"},{"title":"Java后端模板引擎FreeMarker","date":"2017-09-30T08:43:33.000Z","_content":"\n业务后端使用的是Java后端，考虑到SEO是不可忽略的需求，采用FreeMarker模板引擎做页面开发。\n\n<!-- more -->\n\n待更新。\n","source":"_posts/2017-09-30-Java后端模板引擎FreeMarker.md","raw":"---\ntitle: Java后端模板引擎FreeMarker\ndate: 2017-09-30 16:43:33\ntags:\n- Java\n- FreeMarker\ncategories:\n- 教程\n---\n\n业务后端使用的是Java后端，考虑到SEO是不可忽略的需求，采用FreeMarker模板引擎做页面开发。\n\n<!-- more -->\n\n待更新。\n","slug":"Java后端模板引擎FreeMarker","published":1,"updated":"2018-03-27T13:52:33.772Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjskilaky001hg9zb4e40r791","content":"<p>业务后端使用的是Java后端，考虑到SEO是不可忽略的需求，采用FreeMarker模板引擎做页面开发。</p>\n<a id=\"more\"></a>\n<p>待更新。</p>\n","site":{"data":{"next":{"favicon":"/favicon.ico","keywords":"Hexo, NexT","rss":null,"since":2016,"authoricon":"heart","copyright":true,"canonical":true,"seo":true,"index_with_subtitle":false,"menu":{"home":"/","categories":"/categories/","archives":"/archives/","tags":"/tags/","about":"/about/"},"menu_icons":{"enable":true,"home":"home","about":"user","categories":"th","schedule":"calendar","tags":"tags","archives":"archive","sitemap":"sitemap","commonweal":"heartbeat"},"scheme":"Mist","social":{"Github":"https://github.com/ricosmall"},"social_icons":{"enable":true,"GitHub":"github","Twitter":"twitter","Weibo":"weibo"},"avatar":"/uploads/avatar.png","toc":{"enable":true,"number":true,"wrap":false},"sidebar":{"position":"left","display":"post","offset":12,"offset_float":0,"b2t":false,"scrollpercent":false,"onmobile":false},"scroll_to_more":true,"save_scroll":false,"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"post_meta":{"item_text":true,"created_at":true,"updated_at":false,"categories":true},"post_wordcount":{"item_text":true,"wordcount":false,"min2read":false,"separated_meta":true},"post_copyright":{"enable":false,"license":"CC BY-NC-SA 3.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/3.0/"},"custom_logo":{"enabled":false,"image":null},"highlight_theme":"night bright","font":{"enable":true,"host":null,"global":{"external":true,"family":"Lato"},"headings":{"external":true,"family":null},"posts":{"external":true,"family":null},"logo":{"external":true,"family":null,"size":null},"codes":{"external":true,"family":"Menlo, Monospace","size":null}},"mathjax":{"enable":true,"per_page":false,"cdn":"//cdn.bootcss.com/mathjax/2.7.1/latest.js?config=TeX-AMS-MML_HTMLorMML"},"han":false,"disqus":{"enable":false,"shortname":"ricosmall","count":false},"changyan":{"enable":false,"appid":null,"appkey":null},"duoshuo_info":{"ua_enable":true,"admin_enable":false,"user_id":0},"facebook_sdk":{"enable":false,"app_id":null,"fb_admin":null,"like_button":null,"webmaster":null},"facebook_comments_plugin":{"enable":false,"num_of_posts":10,"width":"100%","scheme":"light"},"vkontakte_api":{"enable":false,"app_id":null,"like":true,"comments":true,"num_of_posts":10},"rating":{"enable":false,"id":null,"color":"fc6423"},"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null},"busuanzi_count":{"enable":true,"site_uv":true,"site_uv_header":"<i class=\"fa fa-user\"></i>访问人数","site_uv_footer":null,"site_pv":true,"site_pv_header":"<i class=\"fa fa-eye\"></i>总访问量","site_pv_footer":"次","page_pv":true,"page_pv_header":"<i class=\"fa fa-file-o\"></i>浏览","page_pv_footer":"次"},"baidu_push":false,"calendar":{"enable":false,"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"timeZone":null,"showDeleted":false,"singleEvents":true,"maxResults":250},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1},"exturl":false,"use_motion":true,"fancybox":true,"pace":false,"pace_theme":"pace-theme-minimal","canvas_nest":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false,"canvas_ribbon":false,"vendors":{"_internal":"lib","jquery":null,"fancybox":null,"fancybox_css":null,"fastclick":null,"lazyload":null,"velocity":null,"velocity_ui":null,"ua_parser":null,"fontawesome":null,"algolia_instant_js":null,"algolia_instant_css":null,"pace":null,"pace_css":null,"canvas_nest":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_ribbon":null,"han":null},"css":"css","js":"js","images":"images","version":"5.1.1"}}},"excerpt":"<p>业务后端使用的是Java后端，考虑到SEO是不可忽略的需求，采用FreeMarker模板引擎做页面开发。</p>","more":"<p>待更新。</p>"},{"title":"XSS防御","date":"2017-11-24T11:57:23.000Z","_content":"\nXSS 攻击是一个很大的 Web 安全问题。XSS 攻击无处不在，但是到目前为止没有一套简单成熟的防御机制。\n\n<!-- more -->\n\n### XSS 攻击\n\n1. 存储型 XSS\n\n2. 反射型 XSS\n\n3. DOM XSS\n\n### XSS 防御\n| data type | context                           | code example                                                                                       | defend method                                                         |\n|-----------|-----------------------------------|----------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------|\n| String    | HTML Body                         | `<span>UNTRUSTED DATA</span>`                                                                        | HTML Entity 编码                                                       |\n| String    | 安全 HTML 变量                      | `<input type=\"text\" name=\"fname\" value=\"UNTRUSTED DATA\">`                                            | 1. HTML Attribute 编码 <br> 2. 只把不可信数据放在安全白名单内的变量上 <br> 3. 严格地校验不安全变量，如 background、id 和 name                       |\n| String    | GET 参数                           | `<a href=\"/site/search?value=UNTRUSTED DATA\">clickme</a>`                                           | URL 编码                                                               |\n| String    | 使用在 src 或 href 变量上的不可信 URLs | `<a href=\"UNTRUSTED URL\">clickme</a>` <br> `<iframe src=\"UNTRUSTED URL\">`                                                                       | 1. 对输入进行规范化 <br> 2. URL 校验 <br> 3. URL 安全性认证 <br> 4. 只允许使用 http 和 https 协议（避免使用 javscript 协议去打开一个新窗口）  <br> 5. HTML Attribute 编码                                                 |\n| String    | CSS 值                             | `<div style=\"width: UNTRUSTED DATA;\">Selection</div>`                                                | 1. 使用 CSS 编码 <br> 2. 使用 CSS Hex 编码 <br> 3. 良好的 CSS 设计                                                      |\n| String    | javascript 变量                    | `<script>var currentValue='UNTRUSTED DATA';</script><scrip>someFunction('UNTRUSTED DATA');</script>` | 1. 确保所有变量值都被引号括起来 <br> 2. 使用 javascript Hex 编码 <br> 3. 使用 javascript Unicode 编码 <br> 4. 避免使用反斜杠转义（\\\", \\' 或者 \\）                                |\n| HTML      | HTML Body                         | `<div>UNTRUSTED HTML</div>`                                                                          | HTML 校验（JSoup, AntiSamy, HTML Sanitizer）                           |\n| String    | DOM XSS                           | `<script>document.write('UNTRUSTED INPUT: '+window.location.hash);</script>`                         | 基于 DOM 操作的 XSS 漏洞防御措施                                          |\n","source":"_posts/2017-11-24-XSS防御.md","raw":"---\ntitle: XSS防御\ndate: 2017-11-24 19:57:23\ntags:\n- XSS\n- Web安全\ncategories:\n- 笔记\n---\n\nXSS 攻击是一个很大的 Web 安全问题。XSS 攻击无处不在，但是到目前为止没有一套简单成熟的防御机制。\n\n<!-- more -->\n\n### XSS 攻击\n\n1. 存储型 XSS\n\n2. 反射型 XSS\n\n3. DOM XSS\n\n### XSS 防御\n| data type | context                           | code example                                                                                       | defend method                                                         |\n|-----------|-----------------------------------|----------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------|\n| String    | HTML Body                         | `<span>UNTRUSTED DATA</span>`                                                                        | HTML Entity 编码                                                       |\n| String    | 安全 HTML 变量                      | `<input type=\"text\" name=\"fname\" value=\"UNTRUSTED DATA\">`                                            | 1. HTML Attribute 编码 <br> 2. 只把不可信数据放在安全白名单内的变量上 <br> 3. 严格地校验不安全变量，如 background、id 和 name                       |\n| String    | GET 参数                           | `<a href=\"/site/search?value=UNTRUSTED DATA\">clickme</a>`                                           | URL 编码                                                               |\n| String    | 使用在 src 或 href 变量上的不可信 URLs | `<a href=\"UNTRUSTED URL\">clickme</a>` <br> `<iframe src=\"UNTRUSTED URL\">`                                                                       | 1. 对输入进行规范化 <br> 2. URL 校验 <br> 3. URL 安全性认证 <br> 4. 只允许使用 http 和 https 协议（避免使用 javscript 协议去打开一个新窗口）  <br> 5. HTML Attribute 编码                                                 |\n| String    | CSS 值                             | `<div style=\"width: UNTRUSTED DATA;\">Selection</div>`                                                | 1. 使用 CSS 编码 <br> 2. 使用 CSS Hex 编码 <br> 3. 良好的 CSS 设计                                                      |\n| String    | javascript 变量                    | `<script>var currentValue='UNTRUSTED DATA';</script><scrip>someFunction('UNTRUSTED DATA');</script>` | 1. 确保所有变量值都被引号括起来 <br> 2. 使用 javascript Hex 编码 <br> 3. 使用 javascript Unicode 编码 <br> 4. 避免使用反斜杠转义（\\\", \\' 或者 \\）                                |\n| HTML      | HTML Body                         | `<div>UNTRUSTED HTML</div>`                                                                          | HTML 校验（JSoup, AntiSamy, HTML Sanitizer）                           |\n| String    | DOM XSS                           | `<script>document.write('UNTRUSTED INPUT: '+window.location.hash);</script>`                         | 基于 DOM 操作的 XSS 漏洞防御措施                                          |\n","slug":"XSS防御","published":1,"updated":"2018-03-27T13:52:33.772Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjskilakz001kg9zb9qseuqrk","content":"<p>XSS 攻击是一个很大的 Web 安全问题。XSS 攻击无处不在，但是到目前为止没有一套简单成熟的防御机制。</p>\n<a id=\"more\"></a>\n<h3 id=\"XSS-攻击\"><a href=\"#XSS-攻击\" class=\"headerlink\" title=\"XSS 攻击\"></a>XSS 攻击</h3><ol>\n<li><p>存储型 XSS</p>\n</li>\n<li><p>反射型 XSS</p>\n</li>\n<li><p>DOM XSS</p>\n</li>\n</ol>\n<h3 id=\"XSS-防御\"><a href=\"#XSS-防御\" class=\"headerlink\" title=\"XSS 防御\"></a>XSS 防御</h3><table>\n<thead>\n<tr>\n<th>data type</th>\n<th>context</th>\n<th>code example</th>\n<th>defend method</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>String</td>\n<td>HTML Body</td>\n<td><code>&lt;span&gt;UNTRUSTED DATA&lt;/span&gt;</code></td>\n<td>HTML Entity 编码</td>\n</tr>\n<tr>\n<td>String</td>\n<td>安全 HTML 变量</td>\n<td><code>&lt;input type=&quot;text&quot; name=&quot;fname&quot; value=&quot;UNTRUSTED DATA&quot;&gt;</code></td>\n<td>1. HTML Attribute 编码 <br> 2. 只把不可信数据放在安全白名单内的变量上 <br> 3. 严格地校验不安全变量，如 background、id 和 name</td>\n</tr>\n<tr>\n<td>String</td>\n<td>GET 参数</td>\n<td><code>&lt;a href=&quot;/site/search?value=UNTRUSTED DATA&quot;&gt;clickme&lt;/a&gt;</code></td>\n<td>URL 编码</td>\n</tr>\n<tr>\n<td>String</td>\n<td>使用在 src 或 href 变量上的不可信 URLs</td>\n<td><code>&lt;a href=&quot;UNTRUSTED URL&quot;&gt;clickme&lt;/a&gt;</code> <br> <code>&lt;iframe src=&quot;UNTRUSTED URL&quot;&gt;</code></td>\n<td>1. 对输入进行规范化 <br> 2. URL 校验 <br> 3. URL 安全性认证 <br> 4. 只允许使用 http 和 https 协议（避免使用 javscript 协议去打开一个新窗口）  <br> 5. HTML Attribute 编码</td>\n</tr>\n<tr>\n<td>String</td>\n<td>CSS 值</td>\n<td><code>&lt;div style=&quot;width: UNTRUSTED DATA;&quot;&gt;Selection&lt;/div&gt;</code></td>\n<td>1. 使用 CSS 编码 <br> 2. 使用 CSS Hex 编码 <br> 3. 良好的 CSS 设计</td>\n</tr>\n<tr>\n<td>String</td>\n<td>javascript 变量</td>\n<td><code>&lt;script&gt;var currentValue=&#39;UNTRUSTED DATA&#39;;&lt;/script&gt;&lt;scrip&gt;someFunction(&#39;UNTRUSTED DATA&#39;);&lt;/script&gt;</code></td>\n<td>1. 确保所有变量值都被引号括起来 <br> 2. 使用 javascript Hex 编码 <br> 3. 使用 javascript Unicode 编码 <br> 4. 避免使用反斜杠转义（\\”, \\’ 或者 \\）</td>\n</tr>\n<tr>\n<td>HTML</td>\n<td>HTML Body</td>\n<td><code>&lt;div&gt;UNTRUSTED HTML&lt;/div&gt;</code></td>\n<td>HTML 校验（JSoup, AntiSamy, HTML Sanitizer）</td>\n</tr>\n<tr>\n<td>String</td>\n<td>DOM XSS</td>\n<td><code>&lt;script&gt;document.write(&#39;UNTRUSTED INPUT: &#39;+window.location.hash);&lt;/script&gt;</code></td>\n<td>基于 DOM 操作的 XSS 漏洞防御措施</td>\n</tr>\n</tbody>\n</table>\n","site":{"data":{"next":{"favicon":"/favicon.ico","keywords":"Hexo, NexT","rss":null,"since":2016,"authoricon":"heart","copyright":true,"canonical":true,"seo":true,"index_with_subtitle":false,"menu":{"home":"/","categories":"/categories/","archives":"/archives/","tags":"/tags/","about":"/about/"},"menu_icons":{"enable":true,"home":"home","about":"user","categories":"th","schedule":"calendar","tags":"tags","archives":"archive","sitemap":"sitemap","commonweal":"heartbeat"},"scheme":"Mist","social":{"Github":"https://github.com/ricosmall"},"social_icons":{"enable":true,"GitHub":"github","Twitter":"twitter","Weibo":"weibo"},"avatar":"/uploads/avatar.png","toc":{"enable":true,"number":true,"wrap":false},"sidebar":{"position":"left","display":"post","offset":12,"offset_float":0,"b2t":false,"scrollpercent":false,"onmobile":false},"scroll_to_more":true,"save_scroll":false,"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"post_meta":{"item_text":true,"created_at":true,"updated_at":false,"categories":true},"post_wordcount":{"item_text":true,"wordcount":false,"min2read":false,"separated_meta":true},"post_copyright":{"enable":false,"license":"CC BY-NC-SA 3.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/3.0/"},"custom_logo":{"enabled":false,"image":null},"highlight_theme":"night bright","font":{"enable":true,"host":null,"global":{"external":true,"family":"Lato"},"headings":{"external":true,"family":null},"posts":{"external":true,"family":null},"logo":{"external":true,"family":null,"size":null},"codes":{"external":true,"family":"Menlo, Monospace","size":null}},"mathjax":{"enable":true,"per_page":false,"cdn":"//cdn.bootcss.com/mathjax/2.7.1/latest.js?config=TeX-AMS-MML_HTMLorMML"},"han":false,"disqus":{"enable":false,"shortname":"ricosmall","count":false},"changyan":{"enable":false,"appid":null,"appkey":null},"duoshuo_info":{"ua_enable":true,"admin_enable":false,"user_id":0},"facebook_sdk":{"enable":false,"app_id":null,"fb_admin":null,"like_button":null,"webmaster":null},"facebook_comments_plugin":{"enable":false,"num_of_posts":10,"width":"100%","scheme":"light"},"vkontakte_api":{"enable":false,"app_id":null,"like":true,"comments":true,"num_of_posts":10},"rating":{"enable":false,"id":null,"color":"fc6423"},"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null},"busuanzi_count":{"enable":true,"site_uv":true,"site_uv_header":"<i class=\"fa fa-user\"></i>访问人数","site_uv_footer":null,"site_pv":true,"site_pv_header":"<i class=\"fa fa-eye\"></i>总访问量","site_pv_footer":"次","page_pv":true,"page_pv_header":"<i class=\"fa fa-file-o\"></i>浏览","page_pv_footer":"次"},"baidu_push":false,"calendar":{"enable":false,"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"timeZone":null,"showDeleted":false,"singleEvents":true,"maxResults":250},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1},"exturl":false,"use_motion":true,"fancybox":true,"pace":false,"pace_theme":"pace-theme-minimal","canvas_nest":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false,"canvas_ribbon":false,"vendors":{"_internal":"lib","jquery":null,"fancybox":null,"fancybox_css":null,"fastclick":null,"lazyload":null,"velocity":null,"velocity_ui":null,"ua_parser":null,"fontawesome":null,"algolia_instant_js":null,"algolia_instant_css":null,"pace":null,"pace_css":null,"canvas_nest":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_ribbon":null,"han":null},"css":"css","js":"js","images":"images","version":"5.1.1"}}},"excerpt":"<p>XSS 攻击是一个很大的 Web 安全问题。XSS 攻击无处不在，但是到目前为止没有一套简单成熟的防御机制。</p>","more":"<h3 id=\"XSS-攻击\"><a href=\"#XSS-攻击\" class=\"headerlink\" title=\"XSS 攻击\"></a>XSS 攻击</h3><ol>\n<li><p>存储型 XSS</p>\n</li>\n<li><p>反射型 XSS</p>\n</li>\n<li><p>DOM XSS</p>\n</li>\n</ol>\n<h3 id=\"XSS-防御\"><a href=\"#XSS-防御\" class=\"headerlink\" title=\"XSS 防御\"></a>XSS 防御</h3><table>\n<thead>\n<tr>\n<th>data type</th>\n<th>context</th>\n<th>code example</th>\n<th>defend method</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>String</td>\n<td>HTML Body</td>\n<td><code>&lt;span&gt;UNTRUSTED DATA&lt;/span&gt;</code></td>\n<td>HTML Entity 编码</td>\n</tr>\n<tr>\n<td>String</td>\n<td>安全 HTML 变量</td>\n<td><code>&lt;input type=&quot;text&quot; name=&quot;fname&quot; value=&quot;UNTRUSTED DATA&quot;&gt;</code></td>\n<td>1. HTML Attribute 编码 <br> 2. 只把不可信数据放在安全白名单内的变量上 <br> 3. 严格地校验不安全变量，如 background、id 和 name</td>\n</tr>\n<tr>\n<td>String</td>\n<td>GET 参数</td>\n<td><code>&lt;a href=&quot;/site/search?value=UNTRUSTED DATA&quot;&gt;clickme&lt;/a&gt;</code></td>\n<td>URL 编码</td>\n</tr>\n<tr>\n<td>String</td>\n<td>使用在 src 或 href 变量上的不可信 URLs</td>\n<td><code>&lt;a href=&quot;UNTRUSTED URL&quot;&gt;clickme&lt;/a&gt;</code> <br> <code>&lt;iframe src=&quot;UNTRUSTED URL&quot;&gt;</code></td>\n<td>1. 对输入进行规范化 <br> 2. URL 校验 <br> 3. URL 安全性认证 <br> 4. 只允许使用 http 和 https 协议（避免使用 javscript 协议去打开一个新窗口）  <br> 5. HTML Attribute 编码</td>\n</tr>\n<tr>\n<td>String</td>\n<td>CSS 值</td>\n<td><code>&lt;div style=&quot;width: UNTRUSTED DATA;&quot;&gt;Selection&lt;/div&gt;</code></td>\n<td>1. 使用 CSS 编码 <br> 2. 使用 CSS Hex 编码 <br> 3. 良好的 CSS 设计</td>\n</tr>\n<tr>\n<td>String</td>\n<td>javascript 变量</td>\n<td><code>&lt;script&gt;var currentValue=&#39;UNTRUSTED DATA&#39;;&lt;/script&gt;&lt;scrip&gt;someFunction(&#39;UNTRUSTED DATA&#39;);&lt;/script&gt;</code></td>\n<td>1. 确保所有变量值都被引号括起来 <br> 2. 使用 javascript Hex 编码 <br> 3. 使用 javascript Unicode 编码 <br> 4. 避免使用反斜杠转义（\\”, \\’ 或者 \\）</td>\n</tr>\n<tr>\n<td>HTML</td>\n<td>HTML Body</td>\n<td><code>&lt;div&gt;UNTRUSTED HTML&lt;/div&gt;</code></td>\n<td>HTML 校验（JSoup, AntiSamy, HTML Sanitizer）</td>\n</tr>\n<tr>\n<td>String</td>\n<td>DOM XSS</td>\n<td><code>&lt;script&gt;document.write(&#39;UNTRUSTED INPUT: &#39;+window.location.hash);&lt;/script&gt;</code></td>\n<td>基于 DOM 操作的 XSS 漏洞防御措施</td>\n</tr>\n</tbody>\n</table>"},{"title":"nginx反向代理的Express如何拿到真实客户端IP","date":"2017-10-27T10:56:17.000Z","_content":"\n最近碰到一个苦恼的问题，Express 的后端打印客户端的真实 IP 地址，结果打印出来的全部是`127.0.0.1`。如果你也碰到了这个问题，那么恭喜你，我接下来就告诉你怎么解决。\n\n<!-- more -->\n\n正常来说，引起这个问题的原因就是服务器做了 nginx 反向代理。所有客户端的请求都先打到 nginx 服务器，然后 nginx 服务器再去请求 node 服务器，如果 nginx 和 node 服务器部署在同一台机上面，那么 node 能拿到的 IP 地址其实就是本机地址，也就是`127.0.0.1`。\n\n找到引起问题的根源，就可以对症下药了。\n\n### 修改 nginx 配置\n\n配置修改如下：\n\n```\nserver {\n    listen       80;\n    server_name  website.com;\n\n    location / {\n        proxy_set_header  Host $host;\n        proxy_set_header  X-Real-IP $remote_addr;\n        proxy_set_header  X-Forwarded-Proto https;\n        proxy_set_header  X-Forwarded-For $remote_addr;\n        proxy_set_header  X-Forwarded-Host $remote_addr;\n        proxy_pass    http://127.0.0.1:3000/;\n\n    }\n}\n```\n\n### 修改 Express 配置\n\n修改 `app.js` 文件，增加一行代码：\n\n```javascript\napp.set('trust proxy', 'loopback');\n```\n\n### 获取客户端真实 IP 地址\n\n在代码中使用`req.ip`就可以获取到用户的真实 IP 地址了。\n","source":"_posts/2017-10-27-nginx反向代理的Express如何拿到真实客户端IP.md","raw":"---\ntitle: nginx反向代理的Express如何拿到真实客户端IP\ndate: 2017-10-27 18:56:17\ntags:\n- nginx\n- Express\n- IP\ncategories:\n- 教程\n---\n\n最近碰到一个苦恼的问题，Express 的后端打印客户端的真实 IP 地址，结果打印出来的全部是`127.0.0.1`。如果你也碰到了这个问题，那么恭喜你，我接下来就告诉你怎么解决。\n\n<!-- more -->\n\n正常来说，引起这个问题的原因就是服务器做了 nginx 反向代理。所有客户端的请求都先打到 nginx 服务器，然后 nginx 服务器再去请求 node 服务器，如果 nginx 和 node 服务器部署在同一台机上面，那么 node 能拿到的 IP 地址其实就是本机地址，也就是`127.0.0.1`。\n\n找到引起问题的根源，就可以对症下药了。\n\n### 修改 nginx 配置\n\n配置修改如下：\n\n```\nserver {\n    listen       80;\n    server_name  website.com;\n\n    location / {\n        proxy_set_header  Host $host;\n        proxy_set_header  X-Real-IP $remote_addr;\n        proxy_set_header  X-Forwarded-Proto https;\n        proxy_set_header  X-Forwarded-For $remote_addr;\n        proxy_set_header  X-Forwarded-Host $remote_addr;\n        proxy_pass    http://127.0.0.1:3000/;\n\n    }\n}\n```\n\n### 修改 Express 配置\n\n修改 `app.js` 文件，增加一行代码：\n\n```javascript\napp.set('trust proxy', 'loopback');\n```\n\n### 获取客户端真实 IP 地址\n\n在代码中使用`req.ip`就可以获取到用户的真实 IP 地址了。\n","slug":"nginx反向代理的Express如何拿到真实客户端IP","published":1,"updated":"2018-03-27T13:52:33.772Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjskilal0001og9zbyn216rj9","content":"<p>最近碰到一个苦恼的问题，Express 的后端打印客户端的真实 IP 地址，结果打印出来的全部是<code>127.0.0.1</code>。如果你也碰到了这个问题，那么恭喜你，我接下来就告诉你怎么解决。</p>\n<a id=\"more\"></a>\n<p>正常来说，引起这个问题的原因就是服务器做了 nginx 反向代理。所有客户端的请求都先打到 nginx 服务器，然后 nginx 服务器再去请求 node 服务器，如果 nginx 和 node 服务器部署在同一台机上面，那么 node 能拿到的 IP 地址其实就是本机地址，也就是<code>127.0.0.1</code>。</p>\n<p>找到引起问题的根源，就可以对症下药了。</p>\n<h3 id=\"修改-nginx-配置\"><a href=\"#修改-nginx-配置\" class=\"headerlink\" title=\"修改 nginx 配置\"></a>修改 nginx 配置</h3><p>配置修改如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">    listen       80;</span><br><span class=\"line\">    server_name  website.com;</span><br><span class=\"line\"></span><br><span class=\"line\">    location / &#123;</span><br><span class=\"line\">        proxy_set_header  Host $host;</span><br><span class=\"line\">        proxy_set_header  X-Real-IP $remote_addr;</span><br><span class=\"line\">        proxy_set_header  X-Forwarded-Proto https;</span><br><span class=\"line\">        proxy_set_header  X-Forwarded-For $remote_addr;</span><br><span class=\"line\">        proxy_set_header  X-Forwarded-Host $remote_addr;</span><br><span class=\"line\">        proxy_pass    http://127.0.0.1:3000/;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"修改-Express-配置\"><a href=\"#修改-Express-配置\" class=\"headerlink\" title=\"修改 Express 配置\"></a>修改 Express 配置</h3><p>修改 <code>app.js</code> 文件，增加一行代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">app.set(<span class=\"string\">'trust proxy'</span>, <span class=\"string\">'loopback'</span>);</span><br></pre></td></tr></table></figure>\n<h3 id=\"获取客户端真实-IP-地址\"><a href=\"#获取客户端真实-IP-地址\" class=\"headerlink\" title=\"获取客户端真实 IP 地址\"></a>获取客户端真实 IP 地址</h3><p>在代码中使用<code>req.ip</code>就可以获取到用户的真实 IP 地址了。</p>\n","site":{"data":{"next":{"favicon":"/favicon.ico","keywords":"Hexo, NexT","rss":null,"since":2016,"authoricon":"heart","copyright":true,"canonical":true,"seo":true,"index_with_subtitle":false,"menu":{"home":"/","categories":"/categories/","archives":"/archives/","tags":"/tags/","about":"/about/"},"menu_icons":{"enable":true,"home":"home","about":"user","categories":"th","schedule":"calendar","tags":"tags","archives":"archive","sitemap":"sitemap","commonweal":"heartbeat"},"scheme":"Mist","social":{"Github":"https://github.com/ricosmall"},"social_icons":{"enable":true,"GitHub":"github","Twitter":"twitter","Weibo":"weibo"},"avatar":"/uploads/avatar.png","toc":{"enable":true,"number":true,"wrap":false},"sidebar":{"position":"left","display":"post","offset":12,"offset_float":0,"b2t":false,"scrollpercent":false,"onmobile":false},"scroll_to_more":true,"save_scroll":false,"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"post_meta":{"item_text":true,"created_at":true,"updated_at":false,"categories":true},"post_wordcount":{"item_text":true,"wordcount":false,"min2read":false,"separated_meta":true},"post_copyright":{"enable":false,"license":"CC BY-NC-SA 3.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/3.0/"},"custom_logo":{"enabled":false,"image":null},"highlight_theme":"night bright","font":{"enable":true,"host":null,"global":{"external":true,"family":"Lato"},"headings":{"external":true,"family":null},"posts":{"external":true,"family":null},"logo":{"external":true,"family":null,"size":null},"codes":{"external":true,"family":"Menlo, Monospace","size":null}},"mathjax":{"enable":true,"per_page":false,"cdn":"//cdn.bootcss.com/mathjax/2.7.1/latest.js?config=TeX-AMS-MML_HTMLorMML"},"han":false,"disqus":{"enable":false,"shortname":"ricosmall","count":false},"changyan":{"enable":false,"appid":null,"appkey":null},"duoshuo_info":{"ua_enable":true,"admin_enable":false,"user_id":0},"facebook_sdk":{"enable":false,"app_id":null,"fb_admin":null,"like_button":null,"webmaster":null},"facebook_comments_plugin":{"enable":false,"num_of_posts":10,"width":"100%","scheme":"light"},"vkontakte_api":{"enable":false,"app_id":null,"like":true,"comments":true,"num_of_posts":10},"rating":{"enable":false,"id":null,"color":"fc6423"},"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null},"busuanzi_count":{"enable":true,"site_uv":true,"site_uv_header":"<i class=\"fa fa-user\"></i>访问人数","site_uv_footer":null,"site_pv":true,"site_pv_header":"<i class=\"fa fa-eye\"></i>总访问量","site_pv_footer":"次","page_pv":true,"page_pv_header":"<i class=\"fa fa-file-o\"></i>浏览","page_pv_footer":"次"},"baidu_push":false,"calendar":{"enable":false,"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"timeZone":null,"showDeleted":false,"singleEvents":true,"maxResults":250},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1},"exturl":false,"use_motion":true,"fancybox":true,"pace":false,"pace_theme":"pace-theme-minimal","canvas_nest":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false,"canvas_ribbon":false,"vendors":{"_internal":"lib","jquery":null,"fancybox":null,"fancybox_css":null,"fastclick":null,"lazyload":null,"velocity":null,"velocity_ui":null,"ua_parser":null,"fontawesome":null,"algolia_instant_js":null,"algolia_instant_css":null,"pace":null,"pace_css":null,"canvas_nest":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_ribbon":null,"han":null},"css":"css","js":"js","images":"images","version":"5.1.1"}}},"excerpt":"<p>最近碰到一个苦恼的问题，Express 的后端打印客户端的真实 IP 地址，结果打印出来的全部是<code>127.0.0.1</code>。如果你也碰到了这个问题，那么恭喜你，我接下来就告诉你怎么解决。</p>","more":"<p>正常来说，引起这个问题的原因就是服务器做了 nginx 反向代理。所有客户端的请求都先打到 nginx 服务器，然后 nginx 服务器再去请求 node 服务器，如果 nginx 和 node 服务器部署在同一台机上面，那么 node 能拿到的 IP 地址其实就是本机地址，也就是<code>127.0.0.1</code>。</p>\n<p>找到引起问题的根源，就可以对症下药了。</p>\n<h3 id=\"修改-nginx-配置\"><a href=\"#修改-nginx-配置\" class=\"headerlink\" title=\"修改 nginx 配置\"></a>修改 nginx 配置</h3><p>配置修改如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">    listen       80;</span><br><span class=\"line\">    server_name  website.com;</span><br><span class=\"line\"></span><br><span class=\"line\">    location / &#123;</span><br><span class=\"line\">        proxy_set_header  Host $host;</span><br><span class=\"line\">        proxy_set_header  X-Real-IP $remote_addr;</span><br><span class=\"line\">        proxy_set_header  X-Forwarded-Proto https;</span><br><span class=\"line\">        proxy_set_header  X-Forwarded-For $remote_addr;</span><br><span class=\"line\">        proxy_set_header  X-Forwarded-Host $remote_addr;</span><br><span class=\"line\">        proxy_pass    http://127.0.0.1:3000/;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"修改-Express-配置\"><a href=\"#修改-Express-配置\" class=\"headerlink\" title=\"修改 Express 配置\"></a>修改 Express 配置</h3><p>修改 <code>app.js</code> 文件，增加一行代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">app.set(<span class=\"string\">'trust proxy'</span>, <span class=\"string\">'loopback'</span>);</span><br></pre></td></tr></table></figure>\n<h3 id=\"获取客户端真实-IP-地址\"><a href=\"#获取客户端真实-IP-地址\" class=\"headerlink\" title=\"获取客户端真实 IP 地址\"></a>获取客户端真实 IP 地址</h3><p>在代码中使用<code>req.ip</code>就可以获取到用户的真实 IP 地址了。</p>"},{"title":"python-二分查找","date":"2017-12-05T01:41:19.000Z","_content":"\n常见简单算法之 -- 二分查找\n\n<!-- more -->\n\n```python\ndef binary_search(list, item):\n    low = 0\n    high = len(list) - 1\n\n    while low <= high:\n        mid = int((low + high) / 2)\n        guess = list[mid]\n        if guess == item:\n            return mid\n        if guess > item:\n            high = mid - 1\n        else:\n            low = mid + 1\n\n    return None    \n\n\n# test case\ntest_list = [1, 3, 5, 7, 9]\nprint(binary_search(test_list, 5))\nprint(binary_search(test_list, -1))\n```\n","source":"_posts/2017-12-05-python-二分查找.md","raw":"---\ntitle: python-二分查找\ndate: 2017-12-05 09:41:19\ntags:\n- python\n- algorithm\n- binary_search\n- 二分查找\ncategories:\n- 笔记\n---\n\n常见简单算法之 -- 二分查找\n\n<!-- more -->\n\n```python\ndef binary_search(list, item):\n    low = 0\n    high = len(list) - 1\n\n    while low <= high:\n        mid = int((low + high) / 2)\n        guess = list[mid]\n        if guess == item:\n            return mid\n        if guess > item:\n            high = mid - 1\n        else:\n            low = mid + 1\n\n    return None    \n\n\n# test case\ntest_list = [1, 3, 5, 7, 9]\nprint(binary_search(test_list, 5))\nprint(binary_search(test_list, -1))\n```\n","slug":"python-二分查找","published":1,"updated":"2018-03-27T13:52:33.772Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjskilal1001qg9zbixlggwef","content":"<p>常见简单算法之 – 二分查找</p>\n<a id=\"more\"></a>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">binary_search</span><span class=\"params\">(list, item)</span>:</span></span><br><span class=\"line\">    low = <span class=\"number\">0</span></span><br><span class=\"line\">    high = len(list) - <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> low &lt;= high:</span><br><span class=\"line\">        mid = int((low + high) / <span class=\"number\">2</span>)</span><br><span class=\"line\">        guess = list[mid]</span><br><span class=\"line\">        <span class=\"keyword\">if</span> guess == item:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> mid</span><br><span class=\"line\">        <span class=\"keyword\">if</span> guess &gt; item:</span><br><span class=\"line\">            high = mid - <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            low = mid + <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">None</span>    </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># test case</span></span><br><span class=\"line\">test_list = [<span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">5</span>, <span class=\"number\">7</span>, <span class=\"number\">9</span>]</span><br><span class=\"line\">print(binary_search(test_list, <span class=\"number\">5</span>))</span><br><span class=\"line\">print(binary_search(test_list, <span class=\"number\">-1</span>))</span><br></pre></td></tr></table></figure>\n","site":{"data":{"next":{"favicon":"/favicon.ico","keywords":"Hexo, NexT","rss":null,"since":2016,"authoricon":"heart","copyright":true,"canonical":true,"seo":true,"index_with_subtitle":false,"menu":{"home":"/","categories":"/categories/","archives":"/archives/","tags":"/tags/","about":"/about/"},"menu_icons":{"enable":true,"home":"home","about":"user","categories":"th","schedule":"calendar","tags":"tags","archives":"archive","sitemap":"sitemap","commonweal":"heartbeat"},"scheme":"Mist","social":{"Github":"https://github.com/ricosmall"},"social_icons":{"enable":true,"GitHub":"github","Twitter":"twitter","Weibo":"weibo"},"avatar":"/uploads/avatar.png","toc":{"enable":true,"number":true,"wrap":false},"sidebar":{"position":"left","display":"post","offset":12,"offset_float":0,"b2t":false,"scrollpercent":false,"onmobile":false},"scroll_to_more":true,"save_scroll":false,"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"post_meta":{"item_text":true,"created_at":true,"updated_at":false,"categories":true},"post_wordcount":{"item_text":true,"wordcount":false,"min2read":false,"separated_meta":true},"post_copyright":{"enable":false,"license":"CC BY-NC-SA 3.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/3.0/"},"custom_logo":{"enabled":false,"image":null},"highlight_theme":"night bright","font":{"enable":true,"host":null,"global":{"external":true,"family":"Lato"},"headings":{"external":true,"family":null},"posts":{"external":true,"family":null},"logo":{"external":true,"family":null,"size":null},"codes":{"external":true,"family":"Menlo, Monospace","size":null}},"mathjax":{"enable":true,"per_page":false,"cdn":"//cdn.bootcss.com/mathjax/2.7.1/latest.js?config=TeX-AMS-MML_HTMLorMML"},"han":false,"disqus":{"enable":false,"shortname":"ricosmall","count":false},"changyan":{"enable":false,"appid":null,"appkey":null},"duoshuo_info":{"ua_enable":true,"admin_enable":false,"user_id":0},"facebook_sdk":{"enable":false,"app_id":null,"fb_admin":null,"like_button":null,"webmaster":null},"facebook_comments_plugin":{"enable":false,"num_of_posts":10,"width":"100%","scheme":"light"},"vkontakte_api":{"enable":false,"app_id":null,"like":true,"comments":true,"num_of_posts":10},"rating":{"enable":false,"id":null,"color":"fc6423"},"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null},"busuanzi_count":{"enable":true,"site_uv":true,"site_uv_header":"<i class=\"fa fa-user\"></i>访问人数","site_uv_footer":null,"site_pv":true,"site_pv_header":"<i class=\"fa fa-eye\"></i>总访问量","site_pv_footer":"次","page_pv":true,"page_pv_header":"<i class=\"fa fa-file-o\"></i>浏览","page_pv_footer":"次"},"baidu_push":false,"calendar":{"enable":false,"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"timeZone":null,"showDeleted":false,"singleEvents":true,"maxResults":250},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1},"exturl":false,"use_motion":true,"fancybox":true,"pace":false,"pace_theme":"pace-theme-minimal","canvas_nest":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false,"canvas_ribbon":false,"vendors":{"_internal":"lib","jquery":null,"fancybox":null,"fancybox_css":null,"fastclick":null,"lazyload":null,"velocity":null,"velocity_ui":null,"ua_parser":null,"fontawesome":null,"algolia_instant_js":null,"algolia_instant_css":null,"pace":null,"pace_css":null,"canvas_nest":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_ribbon":null,"han":null},"css":"css","js":"js","images":"images","version":"5.1.1"}}},"excerpt":"<p>常见简单算法之 – 二分查找</p>","more":"<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">binary_search</span><span class=\"params\">(list, item)</span>:</span></span><br><span class=\"line\">    low = <span class=\"number\">0</span></span><br><span class=\"line\">    high = len(list) - <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> low &lt;= high:</span><br><span class=\"line\">        mid = int((low + high) / <span class=\"number\">2</span>)</span><br><span class=\"line\">        guess = list[mid]</span><br><span class=\"line\">        <span class=\"keyword\">if</span> guess == item:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> mid</span><br><span class=\"line\">        <span class=\"keyword\">if</span> guess &gt; item:</span><br><span class=\"line\">            high = mid - <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            low = mid + <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">None</span>    </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># test case</span></span><br><span class=\"line\">test_list = [<span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">5</span>, <span class=\"number\">7</span>, <span class=\"number\">9</span>]</span><br><span class=\"line\">print(binary_search(test_list, <span class=\"number\">5</span>))</span><br><span class=\"line\">print(binary_search(test_list, <span class=\"number\">-1</span>))</span><br></pre></td></tr></table></figure>"},{"title":"学习React（一）","date":"2018-03-27T13:57:11.000Z","_content":"\n## 背景\n\n随着了解的使用 React 大法的项目\b慢慢变多，渐渐产生了兴趣，想要从头好好\b看看 React。因此就有了这个起手式。\n\n<!-- more -->\n\n## Hello World\n\n```sh\n# 新建目录\nmkdir demo\n\n# 初始化\nyarn init -y\n\n# 安装 react、react-dom\nyarn add react react-dom\n\n# 新建入口文件\ntouch index.js\n\n# 编辑入口文件\nvim index.js\n\n# 新建 index.html\ntouch index.html\n\n# 编辑 index.html\nvim index.html\n\n# \b全局安装 parcel，如果已经安装可以跳过\nnpm i -g parcel\n\n# 启动项目\nparcel index.html\n\n# 在浏览器中打开 http://localhost:1234 预览\n```\n\n`index.js` 文件的内容：\n\n```javascript\nimport React from 'react'\nimport ReactDom from 'react-dom'\n\nReactDom.render(\n    <h1>Hello World</h1>,\n    document.getElementById('root')\n)\n```\n\n`index.html` 文件内容：\n\n```html\n<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"utf-8\">\n    <title>React Demo</title>\n</head>\n<body>\n    <div id=\"root\"></div>\n    <script src=\"./index.js\"></script>\n</body>\n</html>\n```","source":"_posts/2018-03-27-学习React（一）.md","raw":"---\ntitle: 学习React（一）\ndate: 2018-03-27 21:57:11\ntags:\n- React\ncategories:\n- 笔记\n---\n\n## 背景\n\n随着了解的使用 React 大法的项目\b慢慢变多，渐渐产生了兴趣，想要从头好好\b看看 React。因此就有了这个起手式。\n\n<!-- more -->\n\n## Hello World\n\n```sh\n# 新建目录\nmkdir demo\n\n# 初始化\nyarn init -y\n\n# 安装 react、react-dom\nyarn add react react-dom\n\n# 新建入口文件\ntouch index.js\n\n# 编辑入口文件\nvim index.js\n\n# 新建 index.html\ntouch index.html\n\n# 编辑 index.html\nvim index.html\n\n# \b全局安装 parcel，如果已经安装可以跳过\nnpm i -g parcel\n\n# 启动项目\nparcel index.html\n\n# 在浏览器中打开 http://localhost:1234 预览\n```\n\n`index.js` 文件的内容：\n\n```javascript\nimport React from 'react'\nimport ReactDom from 'react-dom'\n\nReactDom.render(\n    <h1>Hello World</h1>,\n    document.getElementById('root')\n)\n```\n\n`index.html` 文件内容：\n\n```html\n<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"utf-8\">\n    <title>React Demo</title>\n</head>\n<body>\n    <div id=\"root\"></div>\n    <script src=\"./index.js\"></script>\n</body>\n</html>\n```","slug":"学习React（一）","published":1,"updated":"2018-03-27T15:30:54.663Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjskilal3001tg9zbzqr47d92","content":"<h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p>随着了解的使用 React 大法的项目\b慢慢变多，渐渐产生了兴趣，想要从头好好\b看看 React。因此就有了这个起手式。</p>\n<a id=\"more\"></a>\n<h2 id=\"Hello-World\"><a href=\"#Hello-World\" class=\"headerlink\" title=\"Hello World\"></a>Hello World</h2><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 新建目录</span></span><br><span class=\"line\">mkdir demo</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 初始化</span></span><br><span class=\"line\">yarn init -y</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 安装 react、react-dom</span></span><br><span class=\"line\">yarn add react react-dom</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 新建入口文件</span></span><br><span class=\"line\">touch index.js</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 编辑入口文件</span></span><br><span class=\"line\">vim index.js</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 新建 index.html</span></span><br><span class=\"line\">touch index.html</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 编辑 index.html</span></span><br><span class=\"line\">vim index.html</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># \b全局安装 parcel，如果已经安装可以跳过</span></span><br><span class=\"line\">npm i -g parcel</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 启动项目</span></span><br><span class=\"line\">parcel index.html</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 在浏览器中打开 http://localhost:1234 预览</span></span><br></pre></td></tr></table></figure>\n<p><code>index.js</code> 文件的内容：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> React <span class=\"keyword\">from</span> <span class=\"string\">'react'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> ReactDom <span class=\"keyword\">from</span> <span class=\"string\">'react-dom'</span></span><br><span class=\"line\"></span><br><span class=\"line\">ReactDom.render(</span><br><span class=\"line\">    &lt;h1&gt;Hello World&lt;<span class=\"regexp\">/h1&gt;,</span></span><br><span class=\"line\"><span class=\"regexp\">    document.getElementById('root')</span></span><br><span class=\"line\"><span class=\"regexp\">)</span></span><br></pre></td></tr></table></figure>\n<p><code>index.html</code> 文件内容：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"zh-CN\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"utf-8\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>React Demo<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"root\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"./index.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>","site":{"data":{"next":{"favicon":"/favicon.ico","keywords":"Hexo, NexT","rss":null,"since":2016,"authoricon":"heart","copyright":true,"canonical":true,"seo":true,"index_with_subtitle":false,"menu":{"home":"/","categories":"/categories/","archives":"/archives/","tags":"/tags/","about":"/about/"},"menu_icons":{"enable":true,"home":"home","about":"user","categories":"th","schedule":"calendar","tags":"tags","archives":"archive","sitemap":"sitemap","commonweal":"heartbeat"},"scheme":"Mist","social":{"Github":"https://github.com/ricosmall"},"social_icons":{"enable":true,"GitHub":"github","Twitter":"twitter","Weibo":"weibo"},"avatar":"/uploads/avatar.png","toc":{"enable":true,"number":true,"wrap":false},"sidebar":{"position":"left","display":"post","offset":12,"offset_float":0,"b2t":false,"scrollpercent":false,"onmobile":false},"scroll_to_more":true,"save_scroll":false,"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"post_meta":{"item_text":true,"created_at":true,"updated_at":false,"categories":true},"post_wordcount":{"item_text":true,"wordcount":false,"min2read":false,"separated_meta":true},"post_copyright":{"enable":false,"license":"CC BY-NC-SA 3.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/3.0/"},"custom_logo":{"enabled":false,"image":null},"highlight_theme":"night bright","font":{"enable":true,"host":null,"global":{"external":true,"family":"Lato"},"headings":{"external":true,"family":null},"posts":{"external":true,"family":null},"logo":{"external":true,"family":null,"size":null},"codes":{"external":true,"family":"Menlo, Monospace","size":null}},"mathjax":{"enable":true,"per_page":false,"cdn":"//cdn.bootcss.com/mathjax/2.7.1/latest.js?config=TeX-AMS-MML_HTMLorMML"},"han":false,"disqus":{"enable":false,"shortname":"ricosmall","count":false},"changyan":{"enable":false,"appid":null,"appkey":null},"duoshuo_info":{"ua_enable":true,"admin_enable":false,"user_id":0},"facebook_sdk":{"enable":false,"app_id":null,"fb_admin":null,"like_button":null,"webmaster":null},"facebook_comments_plugin":{"enable":false,"num_of_posts":10,"width":"100%","scheme":"light"},"vkontakte_api":{"enable":false,"app_id":null,"like":true,"comments":true,"num_of_posts":10},"rating":{"enable":false,"id":null,"color":"fc6423"},"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null},"busuanzi_count":{"enable":true,"site_uv":true,"site_uv_header":"<i class=\"fa fa-user\"></i>访问人数","site_uv_footer":null,"site_pv":true,"site_pv_header":"<i class=\"fa fa-eye\"></i>总访问量","site_pv_footer":"次","page_pv":true,"page_pv_header":"<i class=\"fa fa-file-o\"></i>浏览","page_pv_footer":"次"},"baidu_push":false,"calendar":{"enable":false,"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"timeZone":null,"showDeleted":false,"singleEvents":true,"maxResults":250},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1},"exturl":false,"use_motion":true,"fancybox":true,"pace":false,"pace_theme":"pace-theme-minimal","canvas_nest":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false,"canvas_ribbon":false,"vendors":{"_internal":"lib","jquery":null,"fancybox":null,"fancybox_css":null,"fastclick":null,"lazyload":null,"velocity":null,"velocity_ui":null,"ua_parser":null,"fontawesome":null,"algolia_instant_js":null,"algolia_instant_css":null,"pace":null,"pace_css":null,"canvas_nest":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_ribbon":null,"han":null},"css":"css","js":"js","images":"images","version":"5.1.1"}}},"excerpt":"<h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p>随着了解的使用 React 大法的项目\b慢慢变多，渐渐产生了兴趣，想要从头好好\b看看 React。因此就有了这个起手式。</p>","more":"<h2 id=\"Hello-World\"><a href=\"#Hello-World\" class=\"headerlink\" title=\"Hello World\"></a>Hello World</h2><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 新建目录</span></span><br><span class=\"line\">mkdir demo</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 初始化</span></span><br><span class=\"line\">yarn init -y</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 安装 react、react-dom</span></span><br><span class=\"line\">yarn add react react-dom</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 新建入口文件</span></span><br><span class=\"line\">touch index.js</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 编辑入口文件</span></span><br><span class=\"line\">vim index.js</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 新建 index.html</span></span><br><span class=\"line\">touch index.html</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 编辑 index.html</span></span><br><span class=\"line\">vim index.html</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># \b全局安装 parcel，如果已经安装可以跳过</span></span><br><span class=\"line\">npm i -g parcel</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 启动项目</span></span><br><span class=\"line\">parcel index.html</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 在浏览器中打开 http://localhost:1234 预览</span></span><br></pre></td></tr></table></figure>\n<p><code>index.js</code> 文件的内容：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> React <span class=\"keyword\">from</span> <span class=\"string\">'react'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> ReactDom <span class=\"keyword\">from</span> <span class=\"string\">'react-dom'</span></span><br><span class=\"line\"></span><br><span class=\"line\">ReactDom.render(</span><br><span class=\"line\">    &lt;h1&gt;Hello World&lt;<span class=\"regexp\">/h1&gt;,</span></span><br><span class=\"line\"><span class=\"regexp\">    document.getElementById('root')</span></span><br><span class=\"line\"><span class=\"regexp\">)</span></span><br></pre></td></tr></table></figure>\n<p><code>index.html</code> 文件内容：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"zh-CN\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"utf-8\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>React Demo<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"root\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"./index.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>"},{"title":"解决SecureCRT无法保存密码的问题","date":"2018-03-28T15:08:45.000Z","_content":"\n## 问题\n\n在 SecureCRT 上登录同一台机器，每次都要输入密码，非常繁琐。登录的时候「保存密码」的选项又是勾上的，就是不起作用，怎么办呢？\n\n![login-settings](http://img.ricosmall.xyz/securecrt-connect.png)\n\n<!-- more -->\n\n## 方法\n\n打开 secureCRT => Preferences，左侧选择 General，去掉右侧面板中 Use Keychain 选项，如下图：\n\n![securecrt-settings](http://img.ricosmall.xyz/securecrt-settings.png)\n\n然后登录的时候确保「保存密码」 选项选中的情况下，成功登录一次之后，密码就会保存下来了。\n","source":"_posts/2018-03-28-解决SecureCRT无法保存密码的问题.md","raw":"---\ntitle: 解决SecureCRT无法保存密码的问题\ndate: 2018-03-28 23:08:45\ntags:\n- SecureCRT\ncategories:\n- 笔记\n---\n\n## 问题\n\n在 SecureCRT 上登录同一台机器，每次都要输入密码，非常繁琐。登录的时候「保存密码」的选项又是勾上的，就是不起作用，怎么办呢？\n\n![login-settings](http://img.ricosmall.xyz/securecrt-connect.png)\n\n<!-- more -->\n\n## 方法\n\n打开 secureCRT => Preferences，左侧选择 General，去掉右侧面板中 Use Keychain 选项，如下图：\n\n![securecrt-settings](http://img.ricosmall.xyz/securecrt-settings.png)\n\n然后登录的时候确保「保存密码」 选项选中的情况下，成功登录一次之后，密码就会保存下来了。\n","slug":"解决SecureCRT无法保存密码的问题","published":1,"updated":"2019-02-25T15:18:16.459Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjskilal3001vg9zbp507g1a0","content":"<h2 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h2><p>在 SecureCRT 上登录同一台机器，每次都要输入密码，非常繁琐。登录的时候「保存密码」的选项又是勾上的，就是不起作用，怎么办呢？</p>\n<p><img src=\"http://img.ricosmall.xyz/securecrt-connect.png\" alt=\"login-settings\"></p>\n<a id=\"more\"></a>\n<h2 id=\"方法\"><a href=\"#方法\" class=\"headerlink\" title=\"方法\"></a>方法</h2><p>打开 secureCRT =&gt; Preferences，左侧选择 General，去掉右侧面板中 Use Keychain 选项，如下图：</p>\n<p><img src=\"http://img.ricosmall.xyz/securecrt-settings.png\" alt=\"securecrt-settings\"></p>\n<p>然后登录的时候确保「保存密码」 选项选中的情况下，成功登录一次之后，密码就会保存下来了。</p>\n","site":{"data":{"next":{"favicon":"/favicon.ico","keywords":"Hexo, NexT","rss":null,"since":2016,"authoricon":"heart","copyright":true,"canonical":true,"seo":true,"index_with_subtitle":false,"menu":{"home":"/","categories":"/categories/","archives":"/archives/","tags":"/tags/","about":"/about/"},"menu_icons":{"enable":true,"home":"home","about":"user","categories":"th","schedule":"calendar","tags":"tags","archives":"archive","sitemap":"sitemap","commonweal":"heartbeat"},"scheme":"Mist","social":{"Github":"https://github.com/ricosmall"},"social_icons":{"enable":true,"GitHub":"github","Twitter":"twitter","Weibo":"weibo"},"avatar":"/uploads/avatar.png","toc":{"enable":true,"number":true,"wrap":false},"sidebar":{"position":"left","display":"post","offset":12,"offset_float":0,"b2t":false,"scrollpercent":false,"onmobile":false},"scroll_to_more":true,"save_scroll":false,"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"post_meta":{"item_text":true,"created_at":true,"updated_at":false,"categories":true},"post_wordcount":{"item_text":true,"wordcount":false,"min2read":false,"separated_meta":true},"post_copyright":{"enable":false,"license":"CC BY-NC-SA 3.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/3.0/"},"custom_logo":{"enabled":false,"image":null},"highlight_theme":"night bright","font":{"enable":true,"host":null,"global":{"external":true,"family":"Lato"},"headings":{"external":true,"family":null},"posts":{"external":true,"family":null},"logo":{"external":true,"family":null,"size":null},"codes":{"external":true,"family":"Menlo, Monospace","size":null}},"mathjax":{"enable":true,"per_page":false,"cdn":"//cdn.bootcss.com/mathjax/2.7.1/latest.js?config=TeX-AMS-MML_HTMLorMML"},"han":false,"disqus":{"enable":false,"shortname":"ricosmall","count":false},"changyan":{"enable":false,"appid":null,"appkey":null},"duoshuo_info":{"ua_enable":true,"admin_enable":false,"user_id":0},"facebook_sdk":{"enable":false,"app_id":null,"fb_admin":null,"like_button":null,"webmaster":null},"facebook_comments_plugin":{"enable":false,"num_of_posts":10,"width":"100%","scheme":"light"},"vkontakte_api":{"enable":false,"app_id":null,"like":true,"comments":true,"num_of_posts":10},"rating":{"enable":false,"id":null,"color":"fc6423"},"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null},"busuanzi_count":{"enable":true,"site_uv":true,"site_uv_header":"<i class=\"fa fa-user\"></i>访问人数","site_uv_footer":null,"site_pv":true,"site_pv_header":"<i class=\"fa fa-eye\"></i>总访问量","site_pv_footer":"次","page_pv":true,"page_pv_header":"<i class=\"fa fa-file-o\"></i>浏览","page_pv_footer":"次"},"baidu_push":false,"calendar":{"enable":false,"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"timeZone":null,"showDeleted":false,"singleEvents":true,"maxResults":250},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1},"exturl":false,"use_motion":true,"fancybox":true,"pace":false,"pace_theme":"pace-theme-minimal","canvas_nest":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false,"canvas_ribbon":false,"vendors":{"_internal":"lib","jquery":null,"fancybox":null,"fancybox_css":null,"fastclick":null,"lazyload":null,"velocity":null,"velocity_ui":null,"ua_parser":null,"fontawesome":null,"algolia_instant_js":null,"algolia_instant_css":null,"pace":null,"pace_css":null,"canvas_nest":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_ribbon":null,"han":null},"css":"css","js":"js","images":"images","version":"5.1.1"}}},"excerpt":"<h2 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h2><p>在 SecureCRT 上登录同一台机器，每次都要输入密码，非常繁琐。登录的时候「保存密码」的选项又是勾上的，就是不起作用，怎么办呢？</p>\n<p><img src=\"http://img.ricosmall.xyz/securecrt-connect.png\" alt=\"login-settings\"></p>","more":"<h2 id=\"方法\"><a href=\"#方法\" class=\"headerlink\" title=\"方法\"></a>方法</h2><p>打开 secureCRT =&gt; Preferences，左侧选择 General，去掉右侧面板中 Use Keychain 选项，如下图：</p>\n<p><img src=\"http://img.ricosmall.xyz/securecrt-settings.png\" alt=\"securecrt-settings\"></p>\n<p>然后登录的时候确保「保存密码」 选项选中的情况下，成功登录一次之后，密码就会保存下来了。</p>"},{"title":"学习React（二）","date":"2018-03-29T15:10:34.000Z","_content":"\n## Components\n\nReact 组件分为函数式组件（Functional Components） 和类式组件（Class Components）。从字面意思可以看出来，组件可以写成函数形式，也可以写成类的形式。\n\n<!-- more -->\n\n### Functional Components\n\n`index.js` 文件内容：\n\n```javascript\nimport React from 'react'\nimport ReactDom from 'react-dom'\n\nfunction Welcome (props) {\n    return <h1>Hello, {props.name}</h1>\n}\n\nReactDom.render(\n    <Welcome name=\"John\" />,\n    document.getElementById('root')\n)\n```\n\n### Class Components\n\n`index.js` 文件内容：\n\n```javascript\nimport React from 'react'\nimport ReactDom from 'react-dom'\n\nclass Welcome extends React.Component {\n    constructor () {\n        return <h1>Hello, {this.props.name}</h1>\n    }\n}\n\nReactDom.render(\n    <Welcome name=\"John\" />,\n    document.getElementById('root')\n)\n```\n\n`index.html` 文件内容：\n\n```html\n<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"utf-8\">\n    <title>React Demo</title>\n</head>\n<body>\n    <div id=\"root\"></div>\n    <script src=\"./index.js\"></script>\n</body>\n</html>\n```\n\nFunctional Components 和 Class Components 可以混用，本质上都是传入只读的 props 对象，保证数据的单向流动，React 根据 props 对象传入的内容更新渲染 DOM。\n","source":"_posts/2018-03-29-学习React（二）.md","raw":"---\ntitle: 学习React（二）\ndate: 2018-03-29 23:10:34\ntags:\n- React\ncategories:\n- 笔记\n---\n\n## Components\n\nReact 组件分为函数式组件（Functional Components） 和类式组件（Class Components）。从字面意思可以看出来，组件可以写成函数形式，也可以写成类的形式。\n\n<!-- more -->\n\n### Functional Components\n\n`index.js` 文件内容：\n\n```javascript\nimport React from 'react'\nimport ReactDom from 'react-dom'\n\nfunction Welcome (props) {\n    return <h1>Hello, {props.name}</h1>\n}\n\nReactDom.render(\n    <Welcome name=\"John\" />,\n    document.getElementById('root')\n)\n```\n\n### Class Components\n\n`index.js` 文件内容：\n\n```javascript\nimport React from 'react'\nimport ReactDom from 'react-dom'\n\nclass Welcome extends React.Component {\n    constructor () {\n        return <h1>Hello, {this.props.name}</h1>\n    }\n}\n\nReactDom.render(\n    <Welcome name=\"John\" />,\n    document.getElementById('root')\n)\n```\n\n`index.html` 文件内容：\n\n```html\n<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"utf-8\">\n    <title>React Demo</title>\n</head>\n<body>\n    <div id=\"root\"></div>\n    <script src=\"./index.js\"></script>\n</body>\n</html>\n```\n\nFunctional Components 和 Class Components 可以混用，本质上都是传入只读的 props 对象，保证数据的单向流动，React 根据 props 对象传入的内容更新渲染 DOM。\n","slug":"学习React（二）","published":1,"updated":"2018-03-29T15:26:53.682Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjskilal4001yg9zbljf1jthi","content":"<h2 id=\"Components\"><a href=\"#Components\" class=\"headerlink\" title=\"Components\"></a>Components</h2><p>React 组件分为函数式组件（Functional Components） 和类式组件（Class Components）。从字面意思可以看出来，组件可以写成函数形式，也可以写成类的形式。</p>\n<a id=\"more\"></a>\n<h3 id=\"Functional-Components\"><a href=\"#Functional-Components\" class=\"headerlink\" title=\"Functional Components\"></a>Functional Components</h3><p><code>index.js</code> 文件内容：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> React <span class=\"keyword\">from</span> <span class=\"string\">'react'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> ReactDom <span class=\"keyword\">from</span> <span class=\"string\">'react-dom'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Welcome</span> (<span class=\"params\">props</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Hello, &#123;props.name&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">ReactDom.render(</span><br><span class=\"line\">    &lt;Welcome name=<span class=\"string\">\"John\"</span> /&gt;,</span><br><span class=\"line\">    <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'root'</span>)</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n<h3 id=\"Class-Components\"><a href=\"#Class-Components\" class=\"headerlink\" title=\"Class Components\"></a>Class Components</h3><p><code>index.js</code> 文件内容：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> React <span class=\"keyword\">from</span> <span class=\"string\">'react'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> ReactDom <span class=\"keyword\">from</span> <span class=\"string\">'react-dom'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Welcome</span> <span class=\"keyword\">extends</span> <span class=\"title\">React</span>.<span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">constructor</span> () &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Hello, &#123;this.props.name&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">ReactDom.render(</span><br><span class=\"line\">    &lt;Welcome name=<span class=\"string\">\"John\"</span> /&gt;,</span><br><span class=\"line\">    <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'root'</span>)</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n<p><code>index.html</code> 文件内容：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"zh-CN\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"utf-8\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>React Demo<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"root\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"./index.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>Functional Components 和 Class Components 可以混用，本质上都是传入只读的 props 对象，保证数据的单向流动，React 根据 props 对象传入的内容更新渲染 DOM。</p>\n","site":{"data":{"next":{"favicon":"/favicon.ico","keywords":"Hexo, NexT","rss":null,"since":2016,"authoricon":"heart","copyright":true,"canonical":true,"seo":true,"index_with_subtitle":false,"menu":{"home":"/","categories":"/categories/","archives":"/archives/","tags":"/tags/","about":"/about/"},"menu_icons":{"enable":true,"home":"home","about":"user","categories":"th","schedule":"calendar","tags":"tags","archives":"archive","sitemap":"sitemap","commonweal":"heartbeat"},"scheme":"Mist","social":{"Github":"https://github.com/ricosmall"},"social_icons":{"enable":true,"GitHub":"github","Twitter":"twitter","Weibo":"weibo"},"avatar":"/uploads/avatar.png","toc":{"enable":true,"number":true,"wrap":false},"sidebar":{"position":"left","display":"post","offset":12,"offset_float":0,"b2t":false,"scrollpercent":false,"onmobile":false},"scroll_to_more":true,"save_scroll":false,"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"post_meta":{"item_text":true,"created_at":true,"updated_at":false,"categories":true},"post_wordcount":{"item_text":true,"wordcount":false,"min2read":false,"separated_meta":true},"post_copyright":{"enable":false,"license":"CC BY-NC-SA 3.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/3.0/"},"custom_logo":{"enabled":false,"image":null},"highlight_theme":"night bright","font":{"enable":true,"host":null,"global":{"external":true,"family":"Lato"},"headings":{"external":true,"family":null},"posts":{"external":true,"family":null},"logo":{"external":true,"family":null,"size":null},"codes":{"external":true,"family":"Menlo, Monospace","size":null}},"mathjax":{"enable":true,"per_page":false,"cdn":"//cdn.bootcss.com/mathjax/2.7.1/latest.js?config=TeX-AMS-MML_HTMLorMML"},"han":false,"disqus":{"enable":false,"shortname":"ricosmall","count":false},"changyan":{"enable":false,"appid":null,"appkey":null},"duoshuo_info":{"ua_enable":true,"admin_enable":false,"user_id":0},"facebook_sdk":{"enable":false,"app_id":null,"fb_admin":null,"like_button":null,"webmaster":null},"facebook_comments_plugin":{"enable":false,"num_of_posts":10,"width":"100%","scheme":"light"},"vkontakte_api":{"enable":false,"app_id":null,"like":true,"comments":true,"num_of_posts":10},"rating":{"enable":false,"id":null,"color":"fc6423"},"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null},"busuanzi_count":{"enable":true,"site_uv":true,"site_uv_header":"<i class=\"fa fa-user\"></i>访问人数","site_uv_footer":null,"site_pv":true,"site_pv_header":"<i class=\"fa fa-eye\"></i>总访问量","site_pv_footer":"次","page_pv":true,"page_pv_header":"<i class=\"fa fa-file-o\"></i>浏览","page_pv_footer":"次"},"baidu_push":false,"calendar":{"enable":false,"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"timeZone":null,"showDeleted":false,"singleEvents":true,"maxResults":250},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1},"exturl":false,"use_motion":true,"fancybox":true,"pace":false,"pace_theme":"pace-theme-minimal","canvas_nest":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false,"canvas_ribbon":false,"vendors":{"_internal":"lib","jquery":null,"fancybox":null,"fancybox_css":null,"fastclick":null,"lazyload":null,"velocity":null,"velocity_ui":null,"ua_parser":null,"fontawesome":null,"algolia_instant_js":null,"algolia_instant_css":null,"pace":null,"pace_css":null,"canvas_nest":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_ribbon":null,"han":null},"css":"css","js":"js","images":"images","version":"5.1.1"}}},"excerpt":"<h2 id=\"Components\"><a href=\"#Components\" class=\"headerlink\" title=\"Components\"></a>Components</h2><p>React 组件分为函数式组件（Functional Components） 和类式组件（Class Components）。从字面意思可以看出来，组件可以写成函数形式，也可以写成类的形式。</p>","more":"<h3 id=\"Functional-Components\"><a href=\"#Functional-Components\" class=\"headerlink\" title=\"Functional Components\"></a>Functional Components</h3><p><code>index.js</code> 文件内容：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> React <span class=\"keyword\">from</span> <span class=\"string\">'react'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> ReactDom <span class=\"keyword\">from</span> <span class=\"string\">'react-dom'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Welcome</span> (<span class=\"params\">props</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Hello, &#123;props.name&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">ReactDom.render(</span><br><span class=\"line\">    &lt;Welcome name=<span class=\"string\">\"John\"</span> /&gt;,</span><br><span class=\"line\">    <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'root'</span>)</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n<h3 id=\"Class-Components\"><a href=\"#Class-Components\" class=\"headerlink\" title=\"Class Components\"></a>Class Components</h3><p><code>index.js</code> 文件内容：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> React <span class=\"keyword\">from</span> <span class=\"string\">'react'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> ReactDom <span class=\"keyword\">from</span> <span class=\"string\">'react-dom'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Welcome</span> <span class=\"keyword\">extends</span> <span class=\"title\">React</span>.<span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">constructor</span> () &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Hello, &#123;this.props.name&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">ReactDom.render(</span><br><span class=\"line\">    &lt;Welcome name=<span class=\"string\">\"John\"</span> /&gt;,</span><br><span class=\"line\">    <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'root'</span>)</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n<p><code>index.html</code> 文件内容：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"zh-CN\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"utf-8\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>React Demo<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"root\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"./index.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>Functional Components 和 Class Components 可以混用，本质上都是传入只读的 props 对象，保证数据的单向流动，React 根据 props 对象传入的内容更新渲染 DOM。</p>"},{"title":"解决Vue项目中audio元素在移动端无法自动播放的问题","date":"2018-03-30T02:15:12.000Z","_content":"\n## 问题描述\n\n用 Vue 开发一个 HTML5 活动页面，活动页面需要一个循环播放的背景音乐，一进入页面就自动播放。按照正常思维，直接插入 `audio` 元素，设置好属性就算完了。就像下面这样：\n\n```html\n<audio src=\"path/to/music\" loop autoplay></audio>\n```\n\n这样多简单啊，在 PC 浏览器上也表现正常。拿到手机上测试一下，才发现根本不出声音。问题就来了，为啥在手机上不能自动播放呢。\n\n<!-- more -->\n\n## 探索过程\n\n使用 google 大法了解到，移动设备为了节省流量，禁用了 `audio` 元素的自动播放的功能。必须要有用户交互才能播放音频，比如说 `touchstart` 事件。\n\n了解到这个重要信息，马上也就可以找到相应的解决办法，那就是模拟 `touchstart` 事件啦，然后把这个事件的触发放到 Vue 的生命周期方法中，比如 `mounted`。\n\n因此马上就做一个音频播放器的组件 `AudioPlayer.vue` 的组件，具体代码如下：\n\n```html\n<template>\n  <div class=\"player\">\n    <div\n      class=\"player-cd\"\n      id=\"trigger\"\n    >\n      <audio\n        :src=\"src\"\n        id=\"audio\"\n        loop\n      ></audio>\n  </div>\n  </div>\n</template>\n<script>\nexport default {\n  data () {\n    return {\n      src: 'http://img.ricosmall.xyz/%E5%88%9A%E5%A5%BD%E9%81%87%E8%A7%81%E4%BD%A0.m4a'\n    }\n  },\n  mounted () {\n    let trigger = document.getElementById('trigger')\n    let audio = document.getElementById('audio')\n    trigger.addEventListener('touchstart', () => {\n      audio.play()\n    })\n\n    // 模拟触发 「touchstart」 事件\n    this.createTouchstartEventAndDispatch(trigger)\n  },\n  methods: {\n    createTouchstartEventAndDispatch (el) {\n      let event = document.createEvent('Events')\n      event.initEvent('touchstart', true, true)\n      el.dispatchEvent(event)\n    }\n  }\n}\n</script>\n<style lang=\"less\" scoped>\n// var\n@cdWidth: 50vmin;\n\n// mixins\n// 水平垂直居中的 flex 布局\n.flex-align-justify-center {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n// 直径为 width 的圆\n.circle (@width) {\n  width: @width;\n  height: @width;\n  border-radius: 50%;\n}\n\n// block 伪类\n.absolute-block {\n  content: '';\n  display: block;\n  position: absolute;\n}\n\n.player {\n  .flex-align-justify-center;\n\n  width: 100vw;\n  height: 100vh;\n\n  &-cd {\n    .flex-align-justify-center;\n    .circle(@cdWidth);\n    background: linear-gradient(#666, #000);\n\n    .absolute-circle-block (@color, @width) {\n      .absolute-block;\n      .circle(@width);\n      background: @color;\n    }\n\n    &::before {\n      .absolute-circle-block(darken(#f00, 5%), 20vmin);\n    }\n\n    &::after {\n      .absolute-circle-block(#222, 5vmin);\n    }\n  }\n}\n</style>\n```\n\n去浏览器预览的时候发现，上面的代码在 PC 和 Android 手机上和预期一样，可以自动播放。但是在 iOS 上依然不行。通过更进一步的了解，发现在微信内置浏览器内有一种解决办法，利用的是微信内置浏览器的事件 `WeixinJSBridgeReady`。具体实现见下一小节。\n\n## 解决方法（不彻底）\n\n目前自动播放功能实现情况如下：\n\n| 平台 | 系统自带浏览器 | 微信内置浏览器 |\n| --- | --- | --- |\n| PC | ✔️ | ✔️ |\n| Android | ✔️ | ✔️ |\n| iOS | ✔️ | ✔️ |\n\n在实现上述功能的基础上，增加播放旋转，点击切换播放、暂停功能。最终组件代码如下：\n\n```html\n<template>\n  <div class=\"player\">\n    <div\n      class=\"player-cd\"\n      id=\"trigger\"\n      :style=\"{transform: 'rotate(' + transformValue + 'deg)'}\"\n    >\n      <audio\n        :src=\"src\"\n        id=\"audio\"\n        loop\n      ></audio>\n  </div>\n  </div>\n</template>\n<script>\nexport default {\n  data () {\n    return {\n      src: 'http://img.ricosmall.xyz/%E5%88%9A%E5%A5%BD%E9%81%87%E8%A7%81%E4%BD%A0.m4a',\n      playing: false,\n      transformValue: 10,\n      transformInterval: null\n    }\n  },\n  mounted () {\n    let trigger = document.getElementById('trigger')\n    let audio = document.getElementById('audio')\n    trigger.addEventListener('touchstart', () => {\n      audio.play()\n      this.togglePlay()\n    })\n\n    // 单独处理微信内置浏览器自动播放\n    document.addEventListener('WeixinJSBridgeReady', () => {\n      audio.play()\n    }, false)\n\n    // 模拟触发 「touchstart」 事件\n    this.createTouchstartEventAndDispatch(trigger)\n  },\n  methods: {\n    createTouchstartEventAndDispatch (el) {\n      let event = document.createEvent('Events')\n      event.initEvent('touchstart', true, true)\n      el.dispatchEvent(event)\n    },\n    togglePlay () {\n      this.playing = !this.playing\n      if (this.playing) {\n        this.transformInterval = setInterval(\n          () => this.changeTransformValue(),\n          100\n        )\n      } else {\n        clearInterval(this.transformInterval)\n        this.transformInterval = null\n      }\n    },\n    changeTransformValue () {\n      this.transformValue += 10\n    }\n  },\n  watch: {\n    playing (playing) {\n      let audio = document.getElementById('audio')\n      if (playing) {\n        audio.play()\n      } else {\n        audio.pause()\n      }\n    }\n  }\n}\n</script>\n<style lang=\"less\" scoped>\n// var\n@cdWidth: 50vmin;\n\n// mixins\n// 水平垂直居中的 flex 布局\n.flex-align-justify-center {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n// 直径为 width 的圆\n.circle (@width) {\n  width: @width;\n  height: @width;\n  border-radius: 50%;\n}\n\n// block 伪类\n.absolute-block {\n  content: '';\n  display: block;\n  position: absolute;\n}\n\n.player {\n  .flex-align-justify-center;\n\n  width: 100vw;\n  height: 100vh;\n\n  &-cd {\n    .flex-align-justify-center;\n    .circle(@cdWidth);\n    background: linear-gradient(#666, #000);\n    transition: all .2s linear;\n\n    .absolute-circle-block (@color, @width) {\n      .absolute-block;\n      .circle(@width);\n      background: @color;\n    }\n\n    &::before {\n      .absolute-circle-block(darken(#f00, 5%), 20vmin);\n    }\n\n    &::after {\n      .absolute-circle-block(#222, 5vmin);\n    }\n  }\n}\n</style>\n```\n\n附上线上[预览地址](https://codepen.io/ricosmall/pen/qoYjOP)\n","source":"_posts/2018-03-30-解决Vue项目中audio元素在移动端无法自动播放的问题.md","raw":"---\ntitle: 解决Vue项目中audio元素在移动端无法自动播放的问题\ndate: 2018-03-30 10:15:12\ntags:\n- Vue\n- audio\n- HTML5\n- mobile\ncategories:\n- 笔记\n---\n\n## 问题描述\n\n用 Vue 开发一个 HTML5 活动页面，活动页面需要一个循环播放的背景音乐，一进入页面就自动播放。按照正常思维，直接插入 `audio` 元素，设置好属性就算完了。就像下面这样：\n\n```html\n<audio src=\"path/to/music\" loop autoplay></audio>\n```\n\n这样多简单啊，在 PC 浏览器上也表现正常。拿到手机上测试一下，才发现根本不出声音。问题就来了，为啥在手机上不能自动播放呢。\n\n<!-- more -->\n\n## 探索过程\n\n使用 google 大法了解到，移动设备为了节省流量，禁用了 `audio` 元素的自动播放的功能。必须要有用户交互才能播放音频，比如说 `touchstart` 事件。\n\n了解到这个重要信息，马上也就可以找到相应的解决办法，那就是模拟 `touchstart` 事件啦，然后把这个事件的触发放到 Vue 的生命周期方法中，比如 `mounted`。\n\n因此马上就做一个音频播放器的组件 `AudioPlayer.vue` 的组件，具体代码如下：\n\n```html\n<template>\n  <div class=\"player\">\n    <div\n      class=\"player-cd\"\n      id=\"trigger\"\n    >\n      <audio\n        :src=\"src\"\n        id=\"audio\"\n        loop\n      ></audio>\n  </div>\n  </div>\n</template>\n<script>\nexport default {\n  data () {\n    return {\n      src: 'http://img.ricosmall.xyz/%E5%88%9A%E5%A5%BD%E9%81%87%E8%A7%81%E4%BD%A0.m4a'\n    }\n  },\n  mounted () {\n    let trigger = document.getElementById('trigger')\n    let audio = document.getElementById('audio')\n    trigger.addEventListener('touchstart', () => {\n      audio.play()\n    })\n\n    // 模拟触发 「touchstart」 事件\n    this.createTouchstartEventAndDispatch(trigger)\n  },\n  methods: {\n    createTouchstartEventAndDispatch (el) {\n      let event = document.createEvent('Events')\n      event.initEvent('touchstart', true, true)\n      el.dispatchEvent(event)\n    }\n  }\n}\n</script>\n<style lang=\"less\" scoped>\n// var\n@cdWidth: 50vmin;\n\n// mixins\n// 水平垂直居中的 flex 布局\n.flex-align-justify-center {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n// 直径为 width 的圆\n.circle (@width) {\n  width: @width;\n  height: @width;\n  border-radius: 50%;\n}\n\n// block 伪类\n.absolute-block {\n  content: '';\n  display: block;\n  position: absolute;\n}\n\n.player {\n  .flex-align-justify-center;\n\n  width: 100vw;\n  height: 100vh;\n\n  &-cd {\n    .flex-align-justify-center;\n    .circle(@cdWidth);\n    background: linear-gradient(#666, #000);\n\n    .absolute-circle-block (@color, @width) {\n      .absolute-block;\n      .circle(@width);\n      background: @color;\n    }\n\n    &::before {\n      .absolute-circle-block(darken(#f00, 5%), 20vmin);\n    }\n\n    &::after {\n      .absolute-circle-block(#222, 5vmin);\n    }\n  }\n}\n</style>\n```\n\n去浏览器预览的时候发现，上面的代码在 PC 和 Android 手机上和预期一样，可以自动播放。但是在 iOS 上依然不行。通过更进一步的了解，发现在微信内置浏览器内有一种解决办法，利用的是微信内置浏览器的事件 `WeixinJSBridgeReady`。具体实现见下一小节。\n\n## 解决方法（不彻底）\n\n目前自动播放功能实现情况如下：\n\n| 平台 | 系统自带浏览器 | 微信内置浏览器 |\n| --- | --- | --- |\n| PC | ✔️ | ✔️ |\n| Android | ✔️ | ✔️ |\n| iOS | ✔️ | ✔️ |\n\n在实现上述功能的基础上，增加播放旋转，点击切换播放、暂停功能。最终组件代码如下：\n\n```html\n<template>\n  <div class=\"player\">\n    <div\n      class=\"player-cd\"\n      id=\"trigger\"\n      :style=\"{transform: 'rotate(' + transformValue + 'deg)'}\"\n    >\n      <audio\n        :src=\"src\"\n        id=\"audio\"\n        loop\n      ></audio>\n  </div>\n  </div>\n</template>\n<script>\nexport default {\n  data () {\n    return {\n      src: 'http://img.ricosmall.xyz/%E5%88%9A%E5%A5%BD%E9%81%87%E8%A7%81%E4%BD%A0.m4a',\n      playing: false,\n      transformValue: 10,\n      transformInterval: null\n    }\n  },\n  mounted () {\n    let trigger = document.getElementById('trigger')\n    let audio = document.getElementById('audio')\n    trigger.addEventListener('touchstart', () => {\n      audio.play()\n      this.togglePlay()\n    })\n\n    // 单独处理微信内置浏览器自动播放\n    document.addEventListener('WeixinJSBridgeReady', () => {\n      audio.play()\n    }, false)\n\n    // 模拟触发 「touchstart」 事件\n    this.createTouchstartEventAndDispatch(trigger)\n  },\n  methods: {\n    createTouchstartEventAndDispatch (el) {\n      let event = document.createEvent('Events')\n      event.initEvent('touchstart', true, true)\n      el.dispatchEvent(event)\n    },\n    togglePlay () {\n      this.playing = !this.playing\n      if (this.playing) {\n        this.transformInterval = setInterval(\n          () => this.changeTransformValue(),\n          100\n        )\n      } else {\n        clearInterval(this.transformInterval)\n        this.transformInterval = null\n      }\n    },\n    changeTransformValue () {\n      this.transformValue += 10\n    }\n  },\n  watch: {\n    playing (playing) {\n      let audio = document.getElementById('audio')\n      if (playing) {\n        audio.play()\n      } else {\n        audio.pause()\n      }\n    }\n  }\n}\n</script>\n<style lang=\"less\" scoped>\n// var\n@cdWidth: 50vmin;\n\n// mixins\n// 水平垂直居中的 flex 布局\n.flex-align-justify-center {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n// 直径为 width 的圆\n.circle (@width) {\n  width: @width;\n  height: @width;\n  border-radius: 50%;\n}\n\n// block 伪类\n.absolute-block {\n  content: '';\n  display: block;\n  position: absolute;\n}\n\n.player {\n  .flex-align-justify-center;\n\n  width: 100vw;\n  height: 100vh;\n\n  &-cd {\n    .flex-align-justify-center;\n    .circle(@cdWidth);\n    background: linear-gradient(#666, #000);\n    transition: all .2s linear;\n\n    .absolute-circle-block (@color, @width) {\n      .absolute-block;\n      .circle(@width);\n      background: @color;\n    }\n\n    &::before {\n      .absolute-circle-block(darken(#f00, 5%), 20vmin);\n    }\n\n    &::after {\n      .absolute-circle-block(#222, 5vmin);\n    }\n  }\n}\n</style>\n```\n\n附上线上[预览地址](https://codepen.io/ricosmall/pen/qoYjOP)\n","slug":"解决Vue项目中audio元素在移动端无法自动播放的问题","published":1,"updated":"2019-02-25T15:18:16.463Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjskilal50020g9zby5ut5qbl","content":"<h2 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h2><p>用 Vue 开发一个 HTML5 活动页面，活动页面需要一个循环播放的背景音乐，一进入页面就自动播放。按照正常思维，直接插入 <code>audio</code> 元素，设置好属性就算完了。就像下面这样：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">audio</span> <span class=\"attr\">src</span>=<span class=\"string\">\"path/to/music\"</span> <span class=\"attr\">loop</span> <span class=\"attr\">autoplay</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">audio</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>这样多简单啊，在 PC 浏览器上也表现正常。拿到手机上测试一下，才发现根本不出声音。问题就来了，为啥在手机上不能自动播放呢。</p>\n<a id=\"more\"></a>\n<h2 id=\"探索过程\"><a href=\"#探索过程\" class=\"headerlink\" title=\"探索过程\"></a>探索过程</h2><p>使用 google 大法了解到，移动设备为了节省流量，禁用了 <code>audio</code> 元素的自动播放的功能。必须要有用户交互才能播放音频，比如说 <code>touchstart</code> 事件。</p>\n<p>了解到这个重要信息，马上也就可以找到相应的解决办法，那就是模拟 <code>touchstart</code> 事件啦，然后把这个事件的触发放到 Vue 的生命周期方法中，比如 <code>mounted</code>。</p>\n<p>因此马上就做一个音频播放器的组件 <code>AudioPlayer.vue</code> 的组件，具体代码如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"player\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">class</span>=<span class=\"string\">\"player-cd\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">id</span>=<span class=\"string\">\"trigger\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    &gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">audio</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">:src</span>=<span class=\"string\">\"src\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">id</span>=<span class=\"string\">\"audio\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">loop</span></span></span><br><span class=\"line\"><span class=\"tag\">      &gt;</span><span class=\"tag\">&lt;/<span class=\"name\">audio</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">  data () &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">      src: <span class=\"string\">'http://img.ricosmall.xyz/%E5%88%9A%E5%A5%BD%E9%81%87%E8%A7%81%E4%BD%A0.m4a'</span></span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">  &#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">  mounted () &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">let</span> trigger = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'trigger'</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">let</span> audio = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'audio'</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">    trigger.addEventListener(<span class=\"string\">'touchstart'</span>, () =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">      audio.play()</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;)</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"comment\">// 模拟触发 「touchstart」 事件</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">this</span>.createTouchstartEventAndDispatch(trigger)</span></span><br><span class=\"line\"><span class=\"undefined\">  &#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">  methods: &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">    createTouchstartEventAndDispatch (el) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"keyword\">let</span> event = <span class=\"built_in\">document</span>.createEvent(<span class=\"string\">'Events'</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">      event.initEvent(<span class=\"string\">'touchstart'</span>, <span class=\"literal\">true</span>, <span class=\"literal\">true</span>)</span></span><br><span class=\"line\"><span class=\"undefined\">      el.dispatchEvent(event)</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">  &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">&#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"less\"</span> <span class=\"attr\">scoped</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">// var</span></span><br><span class=\"line\"><span class=\"undefined\">@cdWidth: 50vmin;</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">// mixins</span></span><br><span class=\"line\"><span class=\"undefined\">// 水平垂直居中的 flex 布局</span></span><br><span class=\"line\"><span class=\"css\"><span class=\"selector-class\">.flex-align-justify-center</span> &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">  display: flex;</span></span><br><span class=\"line\"><span class=\"undefined\">  align-items: center;</span></span><br><span class=\"line\"><span class=\"undefined\">  justify-content: center;</span></span><br><span class=\"line\"><span class=\"undefined\">&#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">// 直径为 width 的圆</span></span><br><span class=\"line\"><span class=\"css\"><span class=\"selector-class\">.circle</span> (@<span class=\"keyword\">width</span>) &#123;</span></span><br><span class=\"line\"><span class=\"css\">  <span class=\"selector-tag\">width</span>: @<span class=\"keyword\">width</span>;</span></span><br><span class=\"line\"><span class=\"css\">  <span class=\"selector-tag\">height</span>: @<span class=\"keyword\">width</span>;</span></span><br><span class=\"line\"><span class=\"undefined\">  border-radius: 50%;</span></span><br><span class=\"line\"><span class=\"undefined\">&#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">// block 伪类</span></span><br><span class=\"line\"><span class=\"css\"><span class=\"selector-class\">.absolute-block</span> &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">  content: '';</span></span><br><span class=\"line\"><span class=\"undefined\">  display: block;</span></span><br><span class=\"line\"><span class=\"undefined\">  position: absolute;</span></span><br><span class=\"line\"><span class=\"undefined\">&#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"selector-class\">.player</span> &#123;</span></span><br><span class=\"line\"><span class=\"css\">  <span class=\"selector-class\">.flex-align-justify-center</span>;</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">  width: 100vw;</span></span><br><span class=\"line\"><span class=\"undefined\">  height: 100vh;</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">  &amp;-cd &#123;</span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-class\">.flex-align-justify-center</span>;</span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-class\">.circle</span>(@<span class=\"keyword\">cdWidth</span>);</span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-tag\">background</span>: <span class=\"selector-tag\">linear-gradient</span>(<span class=\"selector-id\">#666</span>, <span class=\"selector-id\">#000</span>);</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-class\">.absolute-circle-block</span> (@<span class=\"keyword\">color</span>, @width) &#123;</span></span><br><span class=\"line\"><span class=\"css\">      <span class=\"selector-class\">.absolute-block</span>;</span></span><br><span class=\"line\"><span class=\"css\">      <span class=\"selector-class\">.circle</span>(@<span class=\"keyword\">width</span>);</span></span><br><span class=\"line\"><span class=\"css\">      <span class=\"selector-tag\">background</span>: @<span class=\"keyword\">color</span>;</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"css\">    &amp;<span class=\"selector-pseudo\">::before</span> &#123;</span></span><br><span class=\"line\"><span class=\"css\">      <span class=\"selector-class\">.absolute-circle-block</span>(<span class=\"selector-tag\">darken</span>(<span class=\"selector-id\">#f00</span>, 5%), 20<span class=\"selector-tag\">vmin</span>);</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"css\">    &amp;<span class=\"selector-pseudo\">::after</span> &#123;</span></span><br><span class=\"line\"><span class=\"css\">      <span class=\"selector-class\">.absolute-circle-block</span>(<span class=\"selector-id\">#222</span>, 5<span class=\"selector-tag\">vmin</span>);</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">  &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">&#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>去浏览器预览的时候发现，上面的代码在 PC 和 Android 手机上和预期一样，可以自动播放。但是在 iOS 上依然不行。通过更进一步的了解，发现在微信内置浏览器内有一种解决办法，利用的是微信内置浏览器的事件 <code>WeixinJSBridgeReady</code>。具体实现见下一小节。</p>\n<h2 id=\"解决方法（不彻底）\"><a href=\"#解决方法（不彻底）\" class=\"headerlink\" title=\"解决方法（不彻底）\"></a>解决方法（不彻底）</h2><p>目前自动播放功能实现情况如下：</p>\n<table>\n<thead>\n<tr>\n<th>平台</th>\n<th>系统自带浏览器</th>\n<th>微信内置浏览器</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>PC</td>\n<td>✔️</td>\n<td>✔️</td>\n</tr>\n<tr>\n<td>Android</td>\n<td>✔️</td>\n<td>✔️</td>\n</tr>\n<tr>\n<td>iOS</td>\n<td>✔️</td>\n<td>✔️</td>\n</tr>\n</tbody>\n</table>\n<p>在实现上述功能的基础上，增加播放旋转，点击切换播放、暂停功能。最终组件代码如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"player\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">class</span>=<span class=\"string\">\"player-cd\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">id</span>=<span class=\"string\">\"trigger\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">:style</span>=<span class=\"string\">\"&#123;transform: 'rotate(' + transformValue + 'deg)'&#125;\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    &gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">audio</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">:src</span>=<span class=\"string\">\"src\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">id</span>=<span class=\"string\">\"audio\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">loop</span></span></span><br><span class=\"line\"><span class=\"tag\">      &gt;</span><span class=\"tag\">&lt;/<span class=\"name\">audio</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">  data () &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">      src: <span class=\"string\">'http://img.ricosmall.xyz/%E5%88%9A%E5%A5%BD%E9%81%87%E8%A7%81%E4%BD%A0.m4a'</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">      playing: <span class=\"literal\">false</span>,</span></span><br><span class=\"line\"><span class=\"undefined\">      transformValue: 10,</span></span><br><span class=\"line\"><span class=\"javascript\">      transformInterval: <span class=\"literal\">null</span></span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">  &#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">  mounted () &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">let</span> trigger = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'trigger'</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">let</span> audio = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'audio'</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">    trigger.addEventListener(<span class=\"string\">'touchstart'</span>, () =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">      audio.play()</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"keyword\">this</span>.togglePlay()</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;)</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"comment\">// 单独处理微信内置浏览器自动播放</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"built_in\">document</span>.addEventListener(<span class=\"string\">'WeixinJSBridgeReady'</span>, () =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">      audio.play()</span></span><br><span class=\"line\"><span class=\"javascript\">    &#125;, <span class=\"literal\">false</span>)</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"comment\">// 模拟触发 「touchstart」 事件</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">this</span>.createTouchstartEventAndDispatch(trigger)</span></span><br><span class=\"line\"><span class=\"undefined\">  &#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">  methods: &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">    createTouchstartEventAndDispatch (el) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"keyword\">let</span> event = <span class=\"built_in\">document</span>.createEvent(<span class=\"string\">'Events'</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">      event.initEvent(<span class=\"string\">'touchstart'</span>, <span class=\"literal\">true</span>, <span class=\"literal\">true</span>)</span></span><br><span class=\"line\"><span class=\"undefined\">      el.dispatchEvent(event)</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">    togglePlay () &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"keyword\">this</span>.playing = !<span class=\"keyword\">this</span>.playing</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.playing) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">this</span>.transformInterval = setInterval(</span></span><br><span class=\"line\"><span class=\"javascript\">          () =&gt; <span class=\"keyword\">this</span>.changeTransformValue(),</span></span><br><span class=\"line\"><span class=\"undefined\">          100</span></span><br><span class=\"line\"><span class=\"undefined\">        )</span></span><br><span class=\"line\"><span class=\"javascript\">      &#125; <span class=\"keyword\">else</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">        clearInterval(<span class=\"keyword\">this</span>.transformInterval)</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">this</span>.transformInterval = <span class=\"literal\">null</span></span></span><br><span class=\"line\"><span class=\"undefined\">      &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">    changeTransformValue () &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"keyword\">this</span>.transformValue += <span class=\"number\">10</span></span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">  &#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">  watch: &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">    playing (playing) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"keyword\">let</span> audio = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'audio'</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"keyword\">if</span> (playing) &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">        audio.play()</span></span><br><span class=\"line\"><span class=\"javascript\">      &#125; <span class=\"keyword\">else</span> &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">        audio.pause()</span></span><br><span class=\"line\"><span class=\"undefined\">      &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">  &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">&#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"less\"</span> <span class=\"attr\">scoped</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">// var</span></span><br><span class=\"line\"><span class=\"undefined\">@cdWidth: 50vmin;</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">// mixins</span></span><br><span class=\"line\"><span class=\"undefined\">// 水平垂直居中的 flex 布局</span></span><br><span class=\"line\"><span class=\"css\"><span class=\"selector-class\">.flex-align-justify-center</span> &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">  display: flex;</span></span><br><span class=\"line\"><span class=\"undefined\">  align-items: center;</span></span><br><span class=\"line\"><span class=\"undefined\">  justify-content: center;</span></span><br><span class=\"line\"><span class=\"undefined\">&#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">// 直径为 width 的圆</span></span><br><span class=\"line\"><span class=\"css\"><span class=\"selector-class\">.circle</span> (@<span class=\"keyword\">width</span>) &#123;</span></span><br><span class=\"line\"><span class=\"css\">  <span class=\"selector-tag\">width</span>: @<span class=\"keyword\">width</span>;</span></span><br><span class=\"line\"><span class=\"css\">  <span class=\"selector-tag\">height</span>: @<span class=\"keyword\">width</span>;</span></span><br><span class=\"line\"><span class=\"undefined\">  border-radius: 50%;</span></span><br><span class=\"line\"><span class=\"undefined\">&#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">// block 伪类</span></span><br><span class=\"line\"><span class=\"css\"><span class=\"selector-class\">.absolute-block</span> &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">  content: '';</span></span><br><span class=\"line\"><span class=\"undefined\">  display: block;</span></span><br><span class=\"line\"><span class=\"undefined\">  position: absolute;</span></span><br><span class=\"line\"><span class=\"undefined\">&#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"selector-class\">.player</span> &#123;</span></span><br><span class=\"line\"><span class=\"css\">  <span class=\"selector-class\">.flex-align-justify-center</span>;</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">  width: 100vw;</span></span><br><span class=\"line\"><span class=\"undefined\">  height: 100vh;</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">  &amp;-cd &#123;</span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-class\">.flex-align-justify-center</span>;</span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-class\">.circle</span>(@<span class=\"keyword\">cdWidth</span>);</span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-tag\">background</span>: <span class=\"selector-tag\">linear-gradient</span>(<span class=\"selector-id\">#666</span>, <span class=\"selector-id\">#000</span>);</span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-tag\">transition</span>: <span class=\"selector-tag\">all</span> <span class=\"selector-class\">.2s</span> <span class=\"selector-tag\">linear</span>;</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-class\">.absolute-circle-block</span> (@<span class=\"keyword\">color</span>, @width) &#123;</span></span><br><span class=\"line\"><span class=\"css\">      <span class=\"selector-class\">.absolute-block</span>;</span></span><br><span class=\"line\"><span class=\"css\">      <span class=\"selector-class\">.circle</span>(@<span class=\"keyword\">width</span>);</span></span><br><span class=\"line\"><span class=\"css\">      <span class=\"selector-tag\">background</span>: @<span class=\"keyword\">color</span>;</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"css\">    &amp;<span class=\"selector-pseudo\">::before</span> &#123;</span></span><br><span class=\"line\"><span class=\"css\">      <span class=\"selector-class\">.absolute-circle-block</span>(<span class=\"selector-tag\">darken</span>(<span class=\"selector-id\">#f00</span>, 5%), 20<span class=\"selector-tag\">vmin</span>);</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"css\">    &amp;<span class=\"selector-pseudo\">::after</span> &#123;</span></span><br><span class=\"line\"><span class=\"css\">      <span class=\"selector-class\">.absolute-circle-block</span>(<span class=\"selector-id\">#222</span>, 5<span class=\"selector-tag\">vmin</span>);</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">  &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">&#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>附上线上<a href=\"https://codepen.io/ricosmall/pen/qoYjOP\" target=\"_blank\" rel=\"noopener\">预览地址</a></p>\n","site":{"data":{"next":{"favicon":"/favicon.ico","keywords":"Hexo, NexT","rss":null,"since":2016,"authoricon":"heart","copyright":true,"canonical":true,"seo":true,"index_with_subtitle":false,"menu":{"home":"/","categories":"/categories/","archives":"/archives/","tags":"/tags/","about":"/about/"},"menu_icons":{"enable":true,"home":"home","about":"user","categories":"th","schedule":"calendar","tags":"tags","archives":"archive","sitemap":"sitemap","commonweal":"heartbeat"},"scheme":"Mist","social":{"Github":"https://github.com/ricosmall"},"social_icons":{"enable":true,"GitHub":"github","Twitter":"twitter","Weibo":"weibo"},"avatar":"/uploads/avatar.png","toc":{"enable":true,"number":true,"wrap":false},"sidebar":{"position":"left","display":"post","offset":12,"offset_float":0,"b2t":false,"scrollpercent":false,"onmobile":false},"scroll_to_more":true,"save_scroll":false,"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"post_meta":{"item_text":true,"created_at":true,"updated_at":false,"categories":true},"post_wordcount":{"item_text":true,"wordcount":false,"min2read":false,"separated_meta":true},"post_copyright":{"enable":false,"license":"CC BY-NC-SA 3.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/3.0/"},"custom_logo":{"enabled":false,"image":null},"highlight_theme":"night bright","font":{"enable":true,"host":null,"global":{"external":true,"family":"Lato"},"headings":{"external":true,"family":null},"posts":{"external":true,"family":null},"logo":{"external":true,"family":null,"size":null},"codes":{"external":true,"family":"Menlo, Monospace","size":null}},"mathjax":{"enable":true,"per_page":false,"cdn":"//cdn.bootcss.com/mathjax/2.7.1/latest.js?config=TeX-AMS-MML_HTMLorMML"},"han":false,"disqus":{"enable":false,"shortname":"ricosmall","count":false},"changyan":{"enable":false,"appid":null,"appkey":null},"duoshuo_info":{"ua_enable":true,"admin_enable":false,"user_id":0},"facebook_sdk":{"enable":false,"app_id":null,"fb_admin":null,"like_button":null,"webmaster":null},"facebook_comments_plugin":{"enable":false,"num_of_posts":10,"width":"100%","scheme":"light"},"vkontakte_api":{"enable":false,"app_id":null,"like":true,"comments":true,"num_of_posts":10},"rating":{"enable":false,"id":null,"color":"fc6423"},"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null},"busuanzi_count":{"enable":true,"site_uv":true,"site_uv_header":"<i class=\"fa fa-user\"></i>访问人数","site_uv_footer":null,"site_pv":true,"site_pv_header":"<i class=\"fa fa-eye\"></i>总访问量","site_pv_footer":"次","page_pv":true,"page_pv_header":"<i class=\"fa fa-file-o\"></i>浏览","page_pv_footer":"次"},"baidu_push":false,"calendar":{"enable":false,"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"timeZone":null,"showDeleted":false,"singleEvents":true,"maxResults":250},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1},"exturl":false,"use_motion":true,"fancybox":true,"pace":false,"pace_theme":"pace-theme-minimal","canvas_nest":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false,"canvas_ribbon":false,"vendors":{"_internal":"lib","jquery":null,"fancybox":null,"fancybox_css":null,"fastclick":null,"lazyload":null,"velocity":null,"velocity_ui":null,"ua_parser":null,"fontawesome":null,"algolia_instant_js":null,"algolia_instant_css":null,"pace":null,"pace_css":null,"canvas_nest":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_ribbon":null,"han":null},"css":"css","js":"js","images":"images","version":"5.1.1"}}},"excerpt":"<h2 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h2><p>用 Vue 开发一个 HTML5 活动页面，活动页面需要一个循环播放的背景音乐，一进入页面就自动播放。按照正常思维，直接插入 <code>audio</code> 元素，设置好属性就算完了。就像下面这样：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">audio</span> <span class=\"attr\">src</span>=<span class=\"string\">\"path/to/music\"</span> <span class=\"attr\">loop</span> <span class=\"attr\">autoplay</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">audio</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>这样多简单啊，在 PC 浏览器上也表现正常。拿到手机上测试一下，才发现根本不出声音。问题就来了，为啥在手机上不能自动播放呢。</p>","more":"<h2 id=\"探索过程\"><a href=\"#探索过程\" class=\"headerlink\" title=\"探索过程\"></a>探索过程</h2><p>使用 google 大法了解到，移动设备为了节省流量，禁用了 <code>audio</code> 元素的自动播放的功能。必须要有用户交互才能播放音频，比如说 <code>touchstart</code> 事件。</p>\n<p>了解到这个重要信息，马上也就可以找到相应的解决办法，那就是模拟 <code>touchstart</code> 事件啦，然后把这个事件的触发放到 Vue 的生命周期方法中，比如 <code>mounted</code>。</p>\n<p>因此马上就做一个音频播放器的组件 <code>AudioPlayer.vue</code> 的组件，具体代码如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"player\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">class</span>=<span class=\"string\">\"player-cd\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">id</span>=<span class=\"string\">\"trigger\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    &gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">audio</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">:src</span>=<span class=\"string\">\"src\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">id</span>=<span class=\"string\">\"audio\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">loop</span></span></span><br><span class=\"line\"><span class=\"tag\">      &gt;</span><span class=\"tag\">&lt;/<span class=\"name\">audio</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">  data () &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">      src: <span class=\"string\">'http://img.ricosmall.xyz/%E5%88%9A%E5%A5%BD%E9%81%87%E8%A7%81%E4%BD%A0.m4a'</span></span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">  &#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">  mounted () &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">let</span> trigger = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'trigger'</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">let</span> audio = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'audio'</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">    trigger.addEventListener(<span class=\"string\">'touchstart'</span>, () =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">      audio.play()</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;)</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"comment\">// 模拟触发 「touchstart」 事件</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">this</span>.createTouchstartEventAndDispatch(trigger)</span></span><br><span class=\"line\"><span class=\"undefined\">  &#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">  methods: &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">    createTouchstartEventAndDispatch (el) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"keyword\">let</span> event = <span class=\"built_in\">document</span>.createEvent(<span class=\"string\">'Events'</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">      event.initEvent(<span class=\"string\">'touchstart'</span>, <span class=\"literal\">true</span>, <span class=\"literal\">true</span>)</span></span><br><span class=\"line\"><span class=\"undefined\">      el.dispatchEvent(event)</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">  &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">&#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"less\"</span> <span class=\"attr\">scoped</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">// var</span></span><br><span class=\"line\"><span class=\"undefined\">@cdWidth: 50vmin;</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">// mixins</span></span><br><span class=\"line\"><span class=\"undefined\">// 水平垂直居中的 flex 布局</span></span><br><span class=\"line\"><span class=\"css\"><span class=\"selector-class\">.flex-align-justify-center</span> &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">  display: flex;</span></span><br><span class=\"line\"><span class=\"undefined\">  align-items: center;</span></span><br><span class=\"line\"><span class=\"undefined\">  justify-content: center;</span></span><br><span class=\"line\"><span class=\"undefined\">&#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">// 直径为 width 的圆</span></span><br><span class=\"line\"><span class=\"css\"><span class=\"selector-class\">.circle</span> (@<span class=\"keyword\">width</span>) &#123;</span></span><br><span class=\"line\"><span class=\"css\">  <span class=\"selector-tag\">width</span>: @<span class=\"keyword\">width</span>;</span></span><br><span class=\"line\"><span class=\"css\">  <span class=\"selector-tag\">height</span>: @<span class=\"keyword\">width</span>;</span></span><br><span class=\"line\"><span class=\"undefined\">  border-radius: 50%;</span></span><br><span class=\"line\"><span class=\"undefined\">&#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">// block 伪类</span></span><br><span class=\"line\"><span class=\"css\"><span class=\"selector-class\">.absolute-block</span> &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">  content: '';</span></span><br><span class=\"line\"><span class=\"undefined\">  display: block;</span></span><br><span class=\"line\"><span class=\"undefined\">  position: absolute;</span></span><br><span class=\"line\"><span class=\"undefined\">&#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"selector-class\">.player</span> &#123;</span></span><br><span class=\"line\"><span class=\"css\">  <span class=\"selector-class\">.flex-align-justify-center</span>;</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">  width: 100vw;</span></span><br><span class=\"line\"><span class=\"undefined\">  height: 100vh;</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">  &amp;-cd &#123;</span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-class\">.flex-align-justify-center</span>;</span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-class\">.circle</span>(@<span class=\"keyword\">cdWidth</span>);</span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-tag\">background</span>: <span class=\"selector-tag\">linear-gradient</span>(<span class=\"selector-id\">#666</span>, <span class=\"selector-id\">#000</span>);</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-class\">.absolute-circle-block</span> (@<span class=\"keyword\">color</span>, @width) &#123;</span></span><br><span class=\"line\"><span class=\"css\">      <span class=\"selector-class\">.absolute-block</span>;</span></span><br><span class=\"line\"><span class=\"css\">      <span class=\"selector-class\">.circle</span>(@<span class=\"keyword\">width</span>);</span></span><br><span class=\"line\"><span class=\"css\">      <span class=\"selector-tag\">background</span>: @<span class=\"keyword\">color</span>;</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"css\">    &amp;<span class=\"selector-pseudo\">::before</span> &#123;</span></span><br><span class=\"line\"><span class=\"css\">      <span class=\"selector-class\">.absolute-circle-block</span>(<span class=\"selector-tag\">darken</span>(<span class=\"selector-id\">#f00</span>, 5%), 20<span class=\"selector-tag\">vmin</span>);</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"css\">    &amp;<span class=\"selector-pseudo\">::after</span> &#123;</span></span><br><span class=\"line\"><span class=\"css\">      <span class=\"selector-class\">.absolute-circle-block</span>(<span class=\"selector-id\">#222</span>, 5<span class=\"selector-tag\">vmin</span>);</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">  &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">&#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>去浏览器预览的时候发现，上面的代码在 PC 和 Android 手机上和预期一样，可以自动播放。但是在 iOS 上依然不行。通过更进一步的了解，发现在微信内置浏览器内有一种解决办法，利用的是微信内置浏览器的事件 <code>WeixinJSBridgeReady</code>。具体实现见下一小节。</p>\n<h2 id=\"解决方法（不彻底）\"><a href=\"#解决方法（不彻底）\" class=\"headerlink\" title=\"解决方法（不彻底）\"></a>解决方法（不彻底）</h2><p>目前自动播放功能实现情况如下：</p>\n<table>\n<thead>\n<tr>\n<th>平台</th>\n<th>系统自带浏览器</th>\n<th>微信内置浏览器</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>PC</td>\n<td>✔️</td>\n<td>✔️</td>\n</tr>\n<tr>\n<td>Android</td>\n<td>✔️</td>\n<td>✔️</td>\n</tr>\n<tr>\n<td>iOS</td>\n<td>✔️</td>\n<td>✔️</td>\n</tr>\n</tbody>\n</table>\n<p>在实现上述功能的基础上，增加播放旋转，点击切换播放、暂停功能。最终组件代码如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"player\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">class</span>=<span class=\"string\">\"player-cd\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">id</span>=<span class=\"string\">\"trigger\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">:style</span>=<span class=\"string\">\"&#123;transform: 'rotate(' + transformValue + 'deg)'&#125;\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    &gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">audio</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">:src</span>=<span class=\"string\">\"src\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">id</span>=<span class=\"string\">\"audio\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">loop</span></span></span><br><span class=\"line\"><span class=\"tag\">      &gt;</span><span class=\"tag\">&lt;/<span class=\"name\">audio</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">  data () &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">      src: <span class=\"string\">'http://img.ricosmall.xyz/%E5%88%9A%E5%A5%BD%E9%81%87%E8%A7%81%E4%BD%A0.m4a'</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">      playing: <span class=\"literal\">false</span>,</span></span><br><span class=\"line\"><span class=\"undefined\">      transformValue: 10,</span></span><br><span class=\"line\"><span class=\"javascript\">      transformInterval: <span class=\"literal\">null</span></span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">  &#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">  mounted () &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">let</span> trigger = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'trigger'</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">let</span> audio = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'audio'</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">    trigger.addEventListener(<span class=\"string\">'touchstart'</span>, () =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">      audio.play()</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"keyword\">this</span>.togglePlay()</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;)</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"comment\">// 单独处理微信内置浏览器自动播放</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"built_in\">document</span>.addEventListener(<span class=\"string\">'WeixinJSBridgeReady'</span>, () =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">      audio.play()</span></span><br><span class=\"line\"><span class=\"javascript\">    &#125;, <span class=\"literal\">false</span>)</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"comment\">// 模拟触发 「touchstart」 事件</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">this</span>.createTouchstartEventAndDispatch(trigger)</span></span><br><span class=\"line\"><span class=\"undefined\">  &#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">  methods: &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">    createTouchstartEventAndDispatch (el) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"keyword\">let</span> event = <span class=\"built_in\">document</span>.createEvent(<span class=\"string\">'Events'</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">      event.initEvent(<span class=\"string\">'touchstart'</span>, <span class=\"literal\">true</span>, <span class=\"literal\">true</span>)</span></span><br><span class=\"line\"><span class=\"undefined\">      el.dispatchEvent(event)</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">    togglePlay () &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"keyword\">this</span>.playing = !<span class=\"keyword\">this</span>.playing</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.playing) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">this</span>.transformInterval = setInterval(</span></span><br><span class=\"line\"><span class=\"javascript\">          () =&gt; <span class=\"keyword\">this</span>.changeTransformValue(),</span></span><br><span class=\"line\"><span class=\"undefined\">          100</span></span><br><span class=\"line\"><span class=\"undefined\">        )</span></span><br><span class=\"line\"><span class=\"javascript\">      &#125; <span class=\"keyword\">else</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">        clearInterval(<span class=\"keyword\">this</span>.transformInterval)</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">this</span>.transformInterval = <span class=\"literal\">null</span></span></span><br><span class=\"line\"><span class=\"undefined\">      &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">    changeTransformValue () &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"keyword\">this</span>.transformValue += <span class=\"number\">10</span></span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">  &#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">  watch: &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">    playing (playing) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"keyword\">let</span> audio = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'audio'</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"keyword\">if</span> (playing) &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">        audio.play()</span></span><br><span class=\"line\"><span class=\"javascript\">      &#125; <span class=\"keyword\">else</span> &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">        audio.pause()</span></span><br><span class=\"line\"><span class=\"undefined\">      &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">  &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">&#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"less\"</span> <span class=\"attr\">scoped</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">// var</span></span><br><span class=\"line\"><span class=\"undefined\">@cdWidth: 50vmin;</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">// mixins</span></span><br><span class=\"line\"><span class=\"undefined\">// 水平垂直居中的 flex 布局</span></span><br><span class=\"line\"><span class=\"css\"><span class=\"selector-class\">.flex-align-justify-center</span> &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">  display: flex;</span></span><br><span class=\"line\"><span class=\"undefined\">  align-items: center;</span></span><br><span class=\"line\"><span class=\"undefined\">  justify-content: center;</span></span><br><span class=\"line\"><span class=\"undefined\">&#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">// 直径为 width 的圆</span></span><br><span class=\"line\"><span class=\"css\"><span class=\"selector-class\">.circle</span> (@<span class=\"keyword\">width</span>) &#123;</span></span><br><span class=\"line\"><span class=\"css\">  <span class=\"selector-tag\">width</span>: @<span class=\"keyword\">width</span>;</span></span><br><span class=\"line\"><span class=\"css\">  <span class=\"selector-tag\">height</span>: @<span class=\"keyword\">width</span>;</span></span><br><span class=\"line\"><span class=\"undefined\">  border-radius: 50%;</span></span><br><span class=\"line\"><span class=\"undefined\">&#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">// block 伪类</span></span><br><span class=\"line\"><span class=\"css\"><span class=\"selector-class\">.absolute-block</span> &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">  content: '';</span></span><br><span class=\"line\"><span class=\"undefined\">  display: block;</span></span><br><span class=\"line\"><span class=\"undefined\">  position: absolute;</span></span><br><span class=\"line\"><span class=\"undefined\">&#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"selector-class\">.player</span> &#123;</span></span><br><span class=\"line\"><span class=\"css\">  <span class=\"selector-class\">.flex-align-justify-center</span>;</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">  width: 100vw;</span></span><br><span class=\"line\"><span class=\"undefined\">  height: 100vh;</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">  &amp;-cd &#123;</span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-class\">.flex-align-justify-center</span>;</span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-class\">.circle</span>(@<span class=\"keyword\">cdWidth</span>);</span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-tag\">background</span>: <span class=\"selector-tag\">linear-gradient</span>(<span class=\"selector-id\">#666</span>, <span class=\"selector-id\">#000</span>);</span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-tag\">transition</span>: <span class=\"selector-tag\">all</span> <span class=\"selector-class\">.2s</span> <span class=\"selector-tag\">linear</span>;</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-class\">.absolute-circle-block</span> (@<span class=\"keyword\">color</span>, @width) &#123;</span></span><br><span class=\"line\"><span class=\"css\">      <span class=\"selector-class\">.absolute-block</span>;</span></span><br><span class=\"line\"><span class=\"css\">      <span class=\"selector-class\">.circle</span>(@<span class=\"keyword\">width</span>);</span></span><br><span class=\"line\"><span class=\"css\">      <span class=\"selector-tag\">background</span>: @<span class=\"keyword\">color</span>;</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"css\">    &amp;<span class=\"selector-pseudo\">::before</span> &#123;</span></span><br><span class=\"line\"><span class=\"css\">      <span class=\"selector-class\">.absolute-circle-block</span>(<span class=\"selector-tag\">darken</span>(<span class=\"selector-id\">#f00</span>, 5%), 20<span class=\"selector-tag\">vmin</span>);</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"css\">    &amp;<span class=\"selector-pseudo\">::after</span> &#123;</span></span><br><span class=\"line\"><span class=\"css\">      <span class=\"selector-class\">.absolute-circle-block</span>(<span class=\"selector-id\">#222</span>, 5<span class=\"selector-tag\">vmin</span>);</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">  &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">&#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>附上线上<a href=\"https://codepen.io/ricosmall/pen/qoYjOP\" target=\"_blank\" rel=\"noopener\">预览地址</a></p>"},{"title":"JavaScript、CSS、HTTP知识相关的面试题","date":"2017-03-03T13:29:10.000Z","_content":"\n一上来就是前端技术人员的面试，让我感觉压力好大，有点紧张。\n\n<!-- more -->\n\n问题：\n\n- Array有哪些方法？\n- 如何封装简单模块？\n- CSS如何实现一份设计稿完美兼容各种移动端？\n- CSS如何做三列布局？\n- CSS如何实现元素垂直水平居中？\n- HTTP请求的头部信息包括哪些东西？\n- HTTP请求的状态码有哪些，分别代表什么意思？\n- Node.js有哪些核心插件或模块？\n- 拿到一份设计稿，如何开始开发工作？\n- 有没有写过一些可复用的组件？\n- 从前端的角度考虑安全性，该如何有效预防？\n\n面试时确实有一部分原因是紧张，有一部分原因是基础确实不够扎实。\n\n现在就来慢慢研究这些问题。\n\n---\n\n### Array有哪些方法？\n\n| 方法名称 | 描述 |\n| -------- | ------------ |\n| `concat` | 连接2个或更多数组，并返回结果 |\n| `every` | 对数组每一项运行给定函数，如果该函数每一项都返回true，则返回true |\n| `filter` | 对数组每一项运行给定函数，返回该函数会返回true的项组成的数组 |\n| `forEach` | 对数组每一项运行给定函数。这个函数没有返回值 |\n| `join` | 将所有的数组元素连成一个字符串 |\n| `indexOf` | 返回第一个与给定参数相等的数组元素的索引，没有找到则放回-1 |\n| `lastIndexOf` | 返回在数组中搜索到的与给定参数相等的元素的索引里的最大值 |\n| `map` | 对数组的每一项运行给定函数，返回每次函数的调用结果组成的数组 |\n| `reverse` | 颠倒数组中元素的顺序，原先第一个元素现在变成最后一个，同样原先的最后一个元素变成了现在的第一个元素 |\n| `slice` | 传入索引值，将数组里对应索引范围内的元素作为新数组返回 |\n| `some` | 对数组的每一项运行给定函数，如果任一项返回true，则返回true |\n| `sort` | 按照字母顺序对数组排序，支持传入指定排序方法的函数作为参数 |\n| `toString` | 将数组作为字符串返回 |\n| `valueOf` | 和toString类似，将数组作为字符串返回 |\n| `push` | 将传入的参数作为数组的最后一项添加到数组中，并返回新数组的长度 |\n| `pop` | 取出数组的最后一项并作为返回值 |\n| `shift` | 取出数组的第一项并作为返回值 |\n| `unshift` | 将传入的参数作为数组的第一项添加到数组中，并返回新数组的长度 |\n\n这是我能想到和找到的所有方法了，如果看官发现更多，请提醒我，谢谢！\n\n\n### 如何封装简单模块？\n\n我采用的是宽放大模式，就是一个立即执行函数表达式：\n\n```javascript\n(function (window, module, undefined) {\n    module.sayHello = function () {\n        console.log('Hello');\n    };\n\n    ...\n\n})(window, window.module || (window.module = {}));\n```\n\n### CSS如何实现一份设计稿完美兼容各种移动端？\n\n采用rem方式，并且采用js动态识别屏幕的宽度动态生成viewport的meta标签。\n\n\n### CSS如何做三列布局？\n\n\n### CSS如何实现元素水平垂直居中？\n\n- 方法一：\n\nHTML部分如下：\n\n```html\n<div class=\"wrapper\">  \n    <div class=\"content\">Content here</div>\n</div>\n```\n\nCSS部分如下：\n\n```css\n.wrapper {\n    float: left;\n    height: 50%;\n    margin-bottom: -120px;\n}\n\n.content {\n    clear: both;\n    height: 240px;\n    position: relative;\n}\n```\n\n- 方法二：\n\n\n### HTTP请求的头部信息包括哪些东西？\n\n最基本的信息如下表：\n\n- 请求头部信息：\n\n| 字段名 | 描述 | 举例\n| ----- | ----- | ----- |\n| `Host` | 服务器域名 | `Host: www.baidu.com` |\n| `Accept` | 可接受的媒体类型 | `Accept: * / *` |\n| `Accept-Encoding` | 可接受的编码类型 | `Accept-Encoding: gzip, deflate, sdch` |\n| `Accept-Language` | 可接受的语言 | `Accept-Language: en-US, en; q=0.8` |\n| `User-Agent` | 用户代理 | `User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36` |\n| `Content-type` | 发送内容类型 | `Content-type: text/plain` |\n| `Content-length` | 发送内容长度 | `Content-length: 327` |\n| `Connection` | 客户端连接的类型 | `Connection: keep-alive` |\n| `Referer` | 当前文档的URL | `Referer: http://www.baidu.com/12345` |\n\n- 响应头部信息：\n\n| 字段名 | 描述 | 举例\n| ----- | ----- | ----- |\n| `Access-Control-Allow-Origin` | 可跨域访问源 | `Access-Control-Allow-Origin: *` |\n| `Cache-Control` | 可缓存性 | `Cache-Control: no-cache` |\n| `Content-length` | 响应内容长度 | `Content-length: 35` |\n| `Content-type` | 响应内容类型 | `Content-type: image/gif` |\n| `Date` | 响应时间 | `Date: Mon, 06 Mar 2017 15:34:16 GMT`|\n| `Status` | 响应状态码 | `Status: 200` |\n\n\n### HTTP请求的状态码有哪些？分别代表什么意思？\n\n状态码分类：\n\n| 整体范围 | 已定义范围 | 分类 |\n| ----- | ----- | ----- |\n| 100 ～ 199 | 100 ～ 101 | 信息提示 |\n| 200 ～ 299 | 200 ～ 206 | 成功提示 |\n| 300 ～ 399 | 300 ～ 307 | 重定向 |\n| 400 ～ 499 | 400 ～ 417 | 客户端错误 |\n| 500 ～ 599 | 500 ～ 505 | 服务器错误 |\n\n状态码解释：\n\n| 状态码 | 解释 |\n| ----- | ----- |\n| `100` | Continue（继续） 初始的请求已经接受，客户应当继续发送请求的其余部分。（HTTP 1.1新） |\n| `101` | Switching Protocols（切换协议） 请求者已要求服务器切换协议，服务器已确认并准备进行切换。（HTTP 1.1新） |\n| `200` | OK（成功） 一切正常，对GET和POST请求的应答文档跟在后面。 |\n| `201` | Created（已创建）服务器已经创建了文档，Location头给出了它的URL。 |\n| `202` | Accepted（已接受）服务器已接受了请求，但尚未对其进行处理。 |\n| `203` | Non-Authoritative Information（非授权信息）文档已经正常地返回，但一些应答头可能不正确，可能来自另一来源 。（HTTP 1.1新）。 |\n| `204` | No Content（无内容）未返回任何内容，浏览器应该继续显示原来的文档。 |\n| `205` | Reset Content（重置内容）没有新的内容，但浏览器应该重置它所显示的内容。用来强制浏览器清除表单输入内容（HTTP 1.1新）。 |\n| `206` | Partial Content（部分内容）服务器成功处理了部分 GET 请求。（HTTP 1.1新） |\n| `300` | Multiple Choices（多种选择）客户请求的文档可以在多个位置找到，这些位置已经在返回的文档内列出。如果服务器要提出优先选择，则应该在Location应答头指明。 |\n| `301` | Moved Permanently（永久移动）请求的网页已被永久移动到新位置。服务器返回此响应（作为对 GET 或 HEAD 请求的响应）时，会自动将请求者转到新位置。 |\n| `302` | Found（临时移动）类似于301，但新的URL应该被视为临时性的替代，而不是永久性的。注意，在HTTP1.0中对应的状态信息是“Moved Temporatily”，出现该状态代码时，浏览器能够自动访问新的URL，因此它是一个很有用的状态代码。注意这个状态代码有时候可以和301替换使用。例如，如果浏览器错误地请求http://host/~user（缺少了后面的斜杠），有的服务器返回301，有的则返回302。严格地说，我们只能假定只有当原来的请求是GET时浏览器才会自动重定向。请参见307。 |\n| `303` | See Other（查看其他位置）类似于301/302，不同之处在于，如果原来的请求是POST，Location头指定的重定向目标文档应该通过GET提取（HTTP 1.1新）。 |\n| `304` | Not Modified（未修改）自从上次请求后，请求的网页未被修改过。原来缓冲的文档还可以继续使用，不会返回网页内容。 |\n| `305` | Use Proxy（使用代理）只能使用代理访问请求的网页。如果服务器返回此响应，那么，服务器还会指明请求者应当使用的代理。（HTTP 1.1新） |\n| `307` | Temporary Redirect（临时重定向）和 302（Found）相同。许多浏览器会错误地响应302应答进行重定向，即使原来的请求是POST，即使它实际上只能在POST请求的应答是303时才能重定向。由于这个原因，HTTP 1.1新增了307，以便更加清除地区分几个状态代码：当出现303应答时，浏览器可以跟随重定向的GET和POST请求；如果是307应答，则浏览器只能跟随对GET请求的重定向。（HTTP 1.1新） |\n| `400` | Bad Request（错误请求）请求出现语法错误。 |\n| `401` | Unauthorized（未授权）客户试图未经授权访问受密码保护的页面。应答中会包含一个WWW-Authenticate头，浏览器据此显示用户名字/密码对话框，然后在填写合适的Authorization头后再次发出请求。 |\n| `403` | Forbidden（已禁止） 资源不可用。服务器理解客户的请求，但拒绝处理它。通常由于服务器上文件或目录的权限设置导致。 |\n| `404` | Not Found（未找到）无法找到指定位置的资源。 |\n| `405` | Method Not Allowed（方法禁用）请求方法（GET、POST、HEAD、DELETE、PUT、TRACE等）禁用。（HTTP 1.1新） |\n| `406` | Not Acceptable（不接受）指定的资源已经找到，但它的MIME类型和客户在Accpet头中所指定的不兼容（HTTP 1.1新） |\n| `407` | Proxy Authentication Required（需要代理授权）类似于401，表示客户必须先经过代理服务器的授权。（HTTP 1.1新） |\n| `408` | Request Time-out（请求超时）服务器等候请求时超时。（HTTP 1.1新） |\n| `409` | Conflict（冲突）通常和PUT请求有关。由于请求和资源的当前状态相冲突，因此请求不能成功。（HTTP 1.1新） |\n| `410` | Gone（已删除）如果请求的资源已被永久删除，那么，服务器会返回此响应。该代码与 404（未找到）代码类似，但在资源以前有但现在已经不复存在的情况下，有时会替代 404 代码出现。如果资源已被永久删除，那么，您应当使用 301 代码指定该资源的新位置。（HTTP 1.1新） |\n| `411` | Length Required（需要有效长度）不会接受包含无效内容长度标头字段的请求。（HTTP 1.1新） |\n| `412` | Precondition Failed（未满足前提条件）服务器未满足请求者在请求中设置的其中一个前提条件。（HTTP 1.1新） |\n| `413` | Request Entity Too Large（请求实体过大）请求实体过大，已超出服务器的处理能力。如果服务器认为自己能够稍后再处理该请求，则应该提供一个Retry-After头。（HTTP 1.1新） |\n| `414` | Request-URI Too Large（请求的 URI 过长）请求的 URI（通常为网址）过长，服务器无法进行处理。 |\n| `415` | Unsupported Media Type（不支持的媒体类型）请求的格式不受请求页面的支持。 |\n| `416` | Requested range not satisfiable（请求范围不符合要求）服务器不能满足客户在请求中指定的Range头。（HTTP 1.1新） |\n| `417` | Expectation Failed（未满足期望值）服务器未满足”期望”请求标头字段的要求。 |\n| `500` | Internal Server Error（服务器内部错误）服务器遇到错误，无法完成请求。 |\n| `501` | Not Implemented（尚未实施） 服务器不具备完成请求的功能。例如，当服务器无法识别请求方法时，服务器可能会返回此代码。 |\n| `502` | Bad Gateway（错误网关）服务器作为网关或者代理时，为了完成请求访问下一个服务器，但该服务器返回了非法的应答。 |\n| `503` | Service Unavailable（服务不可用）服务器由于维护或者负载过重未能应答。通常，这只是一种暂时的状态。 |\n| `504` | Gateway Time-out（网关超时） 由作为代理或网关的服务器使用，表示不能及时地从远程服务器获得应答。（HTTP 1.1新） |\n| `505` | HTTP Version not supported（HTTP 版本不受支持）不支持请求中所使用的 HTTP 协议版本。 |\n\n\n### Node.js有哪些核心插件或模块？\n\nNode.js核心模块如下表：\n\n| 模块名称 | 描述 |\n| ----- | ----- |\n| http | 提供http服务器功能 |\n| url | 用于解析url |\n| fs | 文件IO系统 |\n| querystring | 解析url的查询字符串 |\n| util | 提供实用工具 |\n| path | 处理文件路径 |\n| crypto | 提供加密解密功能 |\n| child_process | 新建子进程 |\n\n为了提高运行速度，上面这些核心模块在安装时都会被编译成二进制文件。\n\n\n### 拿到一份设计稿，如何开始开发工作？\n\n先分析布局，划分框架，然后规划结构，编写代码。\n\n如果是协同开发，那就要建立代码规范：\n- 合理地使用标签\n- 准确使用CSS\n- 良好的注释\n- 清晰的代码结构\n\n除此之外，为了提高效率，降低出错率，应该实现前端工程化。\n\n\n### 有没有写过一些可复用的组件？\n\n\n### 从前端的角度考虑安全性，该如何有效预防？\n","source":"_posts/2017-03-03-JavaScript、CSS、HTTP知识相关的面试题.md","raw":"---\ntitle: JavaScript、CSS、HTTP知识相关的面试题\ndate: 2017-03-03 21:29:10\ntags:\n- JavaScript\n- CSS\ncategories:\n- 面试\n---\n\n一上来就是前端技术人员的面试，让我感觉压力好大，有点紧张。\n\n<!-- more -->\n\n问题：\n\n- Array有哪些方法？\n- 如何封装简单模块？\n- CSS如何实现一份设计稿完美兼容各种移动端？\n- CSS如何做三列布局？\n- CSS如何实现元素垂直水平居中？\n- HTTP请求的头部信息包括哪些东西？\n- HTTP请求的状态码有哪些，分别代表什么意思？\n- Node.js有哪些核心插件或模块？\n- 拿到一份设计稿，如何开始开发工作？\n- 有没有写过一些可复用的组件？\n- 从前端的角度考虑安全性，该如何有效预防？\n\n面试时确实有一部分原因是紧张，有一部分原因是基础确实不够扎实。\n\n现在就来慢慢研究这些问题。\n\n---\n\n### Array有哪些方法？\n\n| 方法名称 | 描述 |\n| -------- | ------------ |\n| `concat` | 连接2个或更多数组，并返回结果 |\n| `every` | 对数组每一项运行给定函数，如果该函数每一项都返回true，则返回true |\n| `filter` | 对数组每一项运行给定函数，返回该函数会返回true的项组成的数组 |\n| `forEach` | 对数组每一项运行给定函数。这个函数没有返回值 |\n| `join` | 将所有的数组元素连成一个字符串 |\n| `indexOf` | 返回第一个与给定参数相等的数组元素的索引，没有找到则放回-1 |\n| `lastIndexOf` | 返回在数组中搜索到的与给定参数相等的元素的索引里的最大值 |\n| `map` | 对数组的每一项运行给定函数，返回每次函数的调用结果组成的数组 |\n| `reverse` | 颠倒数组中元素的顺序，原先第一个元素现在变成最后一个，同样原先的最后一个元素变成了现在的第一个元素 |\n| `slice` | 传入索引值，将数组里对应索引范围内的元素作为新数组返回 |\n| `some` | 对数组的每一项运行给定函数，如果任一项返回true，则返回true |\n| `sort` | 按照字母顺序对数组排序，支持传入指定排序方法的函数作为参数 |\n| `toString` | 将数组作为字符串返回 |\n| `valueOf` | 和toString类似，将数组作为字符串返回 |\n| `push` | 将传入的参数作为数组的最后一项添加到数组中，并返回新数组的长度 |\n| `pop` | 取出数组的最后一项并作为返回值 |\n| `shift` | 取出数组的第一项并作为返回值 |\n| `unshift` | 将传入的参数作为数组的第一项添加到数组中，并返回新数组的长度 |\n\n这是我能想到和找到的所有方法了，如果看官发现更多，请提醒我，谢谢！\n\n\n### 如何封装简单模块？\n\n我采用的是宽放大模式，就是一个立即执行函数表达式：\n\n```javascript\n(function (window, module, undefined) {\n    module.sayHello = function () {\n        console.log('Hello');\n    };\n\n    ...\n\n})(window, window.module || (window.module = {}));\n```\n\n### CSS如何实现一份设计稿完美兼容各种移动端？\n\n采用rem方式，并且采用js动态识别屏幕的宽度动态生成viewport的meta标签。\n\n\n### CSS如何做三列布局？\n\n\n### CSS如何实现元素水平垂直居中？\n\n- 方法一：\n\nHTML部分如下：\n\n```html\n<div class=\"wrapper\">  \n    <div class=\"content\">Content here</div>\n</div>\n```\n\nCSS部分如下：\n\n```css\n.wrapper {\n    float: left;\n    height: 50%;\n    margin-bottom: -120px;\n}\n\n.content {\n    clear: both;\n    height: 240px;\n    position: relative;\n}\n```\n\n- 方法二：\n\n\n### HTTP请求的头部信息包括哪些东西？\n\n最基本的信息如下表：\n\n- 请求头部信息：\n\n| 字段名 | 描述 | 举例\n| ----- | ----- | ----- |\n| `Host` | 服务器域名 | `Host: www.baidu.com` |\n| `Accept` | 可接受的媒体类型 | `Accept: * / *` |\n| `Accept-Encoding` | 可接受的编码类型 | `Accept-Encoding: gzip, deflate, sdch` |\n| `Accept-Language` | 可接受的语言 | `Accept-Language: en-US, en; q=0.8` |\n| `User-Agent` | 用户代理 | `User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36` |\n| `Content-type` | 发送内容类型 | `Content-type: text/plain` |\n| `Content-length` | 发送内容长度 | `Content-length: 327` |\n| `Connection` | 客户端连接的类型 | `Connection: keep-alive` |\n| `Referer` | 当前文档的URL | `Referer: http://www.baidu.com/12345` |\n\n- 响应头部信息：\n\n| 字段名 | 描述 | 举例\n| ----- | ----- | ----- |\n| `Access-Control-Allow-Origin` | 可跨域访问源 | `Access-Control-Allow-Origin: *` |\n| `Cache-Control` | 可缓存性 | `Cache-Control: no-cache` |\n| `Content-length` | 响应内容长度 | `Content-length: 35` |\n| `Content-type` | 响应内容类型 | `Content-type: image/gif` |\n| `Date` | 响应时间 | `Date: Mon, 06 Mar 2017 15:34:16 GMT`|\n| `Status` | 响应状态码 | `Status: 200` |\n\n\n### HTTP请求的状态码有哪些？分别代表什么意思？\n\n状态码分类：\n\n| 整体范围 | 已定义范围 | 分类 |\n| ----- | ----- | ----- |\n| 100 ～ 199 | 100 ～ 101 | 信息提示 |\n| 200 ～ 299 | 200 ～ 206 | 成功提示 |\n| 300 ～ 399 | 300 ～ 307 | 重定向 |\n| 400 ～ 499 | 400 ～ 417 | 客户端错误 |\n| 500 ～ 599 | 500 ～ 505 | 服务器错误 |\n\n状态码解释：\n\n| 状态码 | 解释 |\n| ----- | ----- |\n| `100` | Continue（继续） 初始的请求已经接受，客户应当继续发送请求的其余部分。（HTTP 1.1新） |\n| `101` | Switching Protocols（切换协议） 请求者已要求服务器切换协议，服务器已确认并准备进行切换。（HTTP 1.1新） |\n| `200` | OK（成功） 一切正常，对GET和POST请求的应答文档跟在后面。 |\n| `201` | Created（已创建）服务器已经创建了文档，Location头给出了它的URL。 |\n| `202` | Accepted（已接受）服务器已接受了请求，但尚未对其进行处理。 |\n| `203` | Non-Authoritative Information（非授权信息）文档已经正常地返回，但一些应答头可能不正确，可能来自另一来源 。（HTTP 1.1新）。 |\n| `204` | No Content（无内容）未返回任何内容，浏览器应该继续显示原来的文档。 |\n| `205` | Reset Content（重置内容）没有新的内容，但浏览器应该重置它所显示的内容。用来强制浏览器清除表单输入内容（HTTP 1.1新）。 |\n| `206` | Partial Content（部分内容）服务器成功处理了部分 GET 请求。（HTTP 1.1新） |\n| `300` | Multiple Choices（多种选择）客户请求的文档可以在多个位置找到，这些位置已经在返回的文档内列出。如果服务器要提出优先选择，则应该在Location应答头指明。 |\n| `301` | Moved Permanently（永久移动）请求的网页已被永久移动到新位置。服务器返回此响应（作为对 GET 或 HEAD 请求的响应）时，会自动将请求者转到新位置。 |\n| `302` | Found（临时移动）类似于301，但新的URL应该被视为临时性的替代，而不是永久性的。注意，在HTTP1.0中对应的状态信息是“Moved Temporatily”，出现该状态代码时，浏览器能够自动访问新的URL，因此它是一个很有用的状态代码。注意这个状态代码有时候可以和301替换使用。例如，如果浏览器错误地请求http://host/~user（缺少了后面的斜杠），有的服务器返回301，有的则返回302。严格地说，我们只能假定只有当原来的请求是GET时浏览器才会自动重定向。请参见307。 |\n| `303` | See Other（查看其他位置）类似于301/302，不同之处在于，如果原来的请求是POST，Location头指定的重定向目标文档应该通过GET提取（HTTP 1.1新）。 |\n| `304` | Not Modified（未修改）自从上次请求后，请求的网页未被修改过。原来缓冲的文档还可以继续使用，不会返回网页内容。 |\n| `305` | Use Proxy（使用代理）只能使用代理访问请求的网页。如果服务器返回此响应，那么，服务器还会指明请求者应当使用的代理。（HTTP 1.1新） |\n| `307` | Temporary Redirect（临时重定向）和 302（Found）相同。许多浏览器会错误地响应302应答进行重定向，即使原来的请求是POST，即使它实际上只能在POST请求的应答是303时才能重定向。由于这个原因，HTTP 1.1新增了307，以便更加清除地区分几个状态代码：当出现303应答时，浏览器可以跟随重定向的GET和POST请求；如果是307应答，则浏览器只能跟随对GET请求的重定向。（HTTP 1.1新） |\n| `400` | Bad Request（错误请求）请求出现语法错误。 |\n| `401` | Unauthorized（未授权）客户试图未经授权访问受密码保护的页面。应答中会包含一个WWW-Authenticate头，浏览器据此显示用户名字/密码对话框，然后在填写合适的Authorization头后再次发出请求。 |\n| `403` | Forbidden（已禁止） 资源不可用。服务器理解客户的请求，但拒绝处理它。通常由于服务器上文件或目录的权限设置导致。 |\n| `404` | Not Found（未找到）无法找到指定位置的资源。 |\n| `405` | Method Not Allowed（方法禁用）请求方法（GET、POST、HEAD、DELETE、PUT、TRACE等）禁用。（HTTP 1.1新） |\n| `406` | Not Acceptable（不接受）指定的资源已经找到，但它的MIME类型和客户在Accpet头中所指定的不兼容（HTTP 1.1新） |\n| `407` | Proxy Authentication Required（需要代理授权）类似于401，表示客户必须先经过代理服务器的授权。（HTTP 1.1新） |\n| `408` | Request Time-out（请求超时）服务器等候请求时超时。（HTTP 1.1新） |\n| `409` | Conflict（冲突）通常和PUT请求有关。由于请求和资源的当前状态相冲突，因此请求不能成功。（HTTP 1.1新） |\n| `410` | Gone（已删除）如果请求的资源已被永久删除，那么，服务器会返回此响应。该代码与 404（未找到）代码类似，但在资源以前有但现在已经不复存在的情况下，有时会替代 404 代码出现。如果资源已被永久删除，那么，您应当使用 301 代码指定该资源的新位置。（HTTP 1.1新） |\n| `411` | Length Required（需要有效长度）不会接受包含无效内容长度标头字段的请求。（HTTP 1.1新） |\n| `412` | Precondition Failed（未满足前提条件）服务器未满足请求者在请求中设置的其中一个前提条件。（HTTP 1.1新） |\n| `413` | Request Entity Too Large（请求实体过大）请求实体过大，已超出服务器的处理能力。如果服务器认为自己能够稍后再处理该请求，则应该提供一个Retry-After头。（HTTP 1.1新） |\n| `414` | Request-URI Too Large（请求的 URI 过长）请求的 URI（通常为网址）过长，服务器无法进行处理。 |\n| `415` | Unsupported Media Type（不支持的媒体类型）请求的格式不受请求页面的支持。 |\n| `416` | Requested range not satisfiable（请求范围不符合要求）服务器不能满足客户在请求中指定的Range头。（HTTP 1.1新） |\n| `417` | Expectation Failed（未满足期望值）服务器未满足”期望”请求标头字段的要求。 |\n| `500` | Internal Server Error（服务器内部错误）服务器遇到错误，无法完成请求。 |\n| `501` | Not Implemented（尚未实施） 服务器不具备完成请求的功能。例如，当服务器无法识别请求方法时，服务器可能会返回此代码。 |\n| `502` | Bad Gateway（错误网关）服务器作为网关或者代理时，为了完成请求访问下一个服务器，但该服务器返回了非法的应答。 |\n| `503` | Service Unavailable（服务不可用）服务器由于维护或者负载过重未能应答。通常，这只是一种暂时的状态。 |\n| `504` | Gateway Time-out（网关超时） 由作为代理或网关的服务器使用，表示不能及时地从远程服务器获得应答。（HTTP 1.1新） |\n| `505` | HTTP Version not supported（HTTP 版本不受支持）不支持请求中所使用的 HTTP 协议版本。 |\n\n\n### Node.js有哪些核心插件或模块？\n\nNode.js核心模块如下表：\n\n| 模块名称 | 描述 |\n| ----- | ----- |\n| http | 提供http服务器功能 |\n| url | 用于解析url |\n| fs | 文件IO系统 |\n| querystring | 解析url的查询字符串 |\n| util | 提供实用工具 |\n| path | 处理文件路径 |\n| crypto | 提供加密解密功能 |\n| child_process | 新建子进程 |\n\n为了提高运行速度，上面这些核心模块在安装时都会被编译成二进制文件。\n\n\n### 拿到一份设计稿，如何开始开发工作？\n\n先分析布局，划分框架，然后规划结构，编写代码。\n\n如果是协同开发，那就要建立代码规范：\n- 合理地使用标签\n- 准确使用CSS\n- 良好的注释\n- 清晰的代码结构\n\n除此之外，为了提高效率，降低出错率，应该实现前端工程化。\n\n\n### 有没有写过一些可复用的组件？\n\n\n### 从前端的角度考虑安全性，该如何有效预防？\n","slug":"JavaScript、CSS、HTTP知识相关的面试题","published":1,"updated":"2018-03-27T13:52:33.768Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjskilapm004zg9zbef2oez28","content":"<p>一上来就是前端技术人员的面试，让我感觉压力好大，有点紧张。</p>\n<a id=\"more\"></a>\n<p>问题：</p>\n<ul>\n<li>Array有哪些方法？</li>\n<li>如何封装简单模块？</li>\n<li>CSS如何实现一份设计稿完美兼容各种移动端？</li>\n<li>CSS如何做三列布局？</li>\n<li>CSS如何实现元素垂直水平居中？</li>\n<li>HTTP请求的头部信息包括哪些东西？</li>\n<li>HTTP请求的状态码有哪些，分别代表什么意思？</li>\n<li>Node.js有哪些核心插件或模块？</li>\n<li>拿到一份设计稿，如何开始开发工作？</li>\n<li>有没有写过一些可复用的组件？</li>\n<li>从前端的角度考虑安全性，该如何有效预防？</li>\n</ul>\n<p>面试时确实有一部分原因是紧张，有一部分原因是基础确实不够扎实。</p>\n<p>现在就来慢慢研究这些问题。</p>\n<hr>\n<h3 id=\"Array有哪些方法？\"><a href=\"#Array有哪些方法？\" class=\"headerlink\" title=\"Array有哪些方法？\"></a>Array有哪些方法？</h3><table>\n<thead>\n<tr>\n<th>方法名称</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>concat</code></td>\n<td>连接2个或更多数组，并返回结果</td>\n</tr>\n<tr>\n<td><code>every</code></td>\n<td>对数组每一项运行给定函数，如果该函数每一项都返回true，则返回true</td>\n</tr>\n<tr>\n<td><code>filter</code></td>\n<td>对数组每一项运行给定函数，返回该函数会返回true的项组成的数组</td>\n</tr>\n<tr>\n<td><code>forEach</code></td>\n<td>对数组每一项运行给定函数。这个函数没有返回值</td>\n</tr>\n<tr>\n<td><code>join</code></td>\n<td>将所有的数组元素连成一个字符串</td>\n</tr>\n<tr>\n<td><code>indexOf</code></td>\n<td>返回第一个与给定参数相等的数组元素的索引，没有找到则放回-1</td>\n</tr>\n<tr>\n<td><code>lastIndexOf</code></td>\n<td>返回在数组中搜索到的与给定参数相等的元素的索引里的最大值</td>\n</tr>\n<tr>\n<td><code>map</code></td>\n<td>对数组的每一项运行给定函数，返回每次函数的调用结果组成的数组</td>\n</tr>\n<tr>\n<td><code>reverse</code></td>\n<td>颠倒数组中元素的顺序，原先第一个元素现在变成最后一个，同样原先的最后一个元素变成了现在的第一个元素</td>\n</tr>\n<tr>\n<td><code>slice</code></td>\n<td>传入索引值，将数组里对应索引范围内的元素作为新数组返回</td>\n</tr>\n<tr>\n<td><code>some</code></td>\n<td>对数组的每一项运行给定函数，如果任一项返回true，则返回true</td>\n</tr>\n<tr>\n<td><code>sort</code></td>\n<td>按照字母顺序对数组排序，支持传入指定排序方法的函数作为参数</td>\n</tr>\n<tr>\n<td><code>toString</code></td>\n<td>将数组作为字符串返回</td>\n</tr>\n<tr>\n<td><code>valueOf</code></td>\n<td>和toString类似，将数组作为字符串返回</td>\n</tr>\n<tr>\n<td><code>push</code></td>\n<td>将传入的参数作为数组的最后一项添加到数组中，并返回新数组的长度</td>\n</tr>\n<tr>\n<td><code>pop</code></td>\n<td>取出数组的最后一项并作为返回值</td>\n</tr>\n<tr>\n<td><code>shift</code></td>\n<td>取出数组的第一项并作为返回值</td>\n</tr>\n<tr>\n<td><code>unshift</code></td>\n<td>将传入的参数作为数组的第一项添加到数组中，并返回新数组的长度</td>\n</tr>\n</tbody>\n</table>\n<p>这是我能想到和找到的所有方法了，如果看官发现更多，请提醒我，谢谢！</p>\n<h3 id=\"如何封装简单模块？\"><a href=\"#如何封装简单模块？\" class=\"headerlink\" title=\"如何封装简单模块？\"></a>如何封装简单模块？</h3><p>我采用的是宽放大模式，就是一个立即执行函数表达式：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">window, module, undefined</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">module</span>.sayHello = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">'Hello'</span>);</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    ...</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;)(<span class=\"built_in\">window</span>, <span class=\"built_in\">window</span>.module || (<span class=\"built_in\">window</span>.module = &#123;&#125;));</span><br></pre></td></tr></table></figure>\n<h3 id=\"CSS如何实现一份设计稿完美兼容各种移动端？\"><a href=\"#CSS如何实现一份设计稿完美兼容各种移动端？\" class=\"headerlink\" title=\"CSS如何实现一份设计稿完美兼容各种移动端？\"></a>CSS如何实现一份设计稿完美兼容各种移动端？</h3><p>采用rem方式，并且采用js动态识别屏幕的宽度动态生成viewport的meta标签。</p>\n<h3 id=\"CSS如何做三列布局？\"><a href=\"#CSS如何做三列布局？\" class=\"headerlink\" title=\"CSS如何做三列布局？\"></a>CSS如何做三列布局？</h3><h3 id=\"CSS如何实现元素水平垂直居中？\"><a href=\"#CSS如何实现元素水平垂直居中？\" class=\"headerlink\" title=\"CSS如何实现元素水平垂直居中？\"></a>CSS如何实现元素水平垂直居中？</h3><ul>\n<li>方法一：</li>\n</ul>\n<p>HTML部分如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"wrapper\"</span>&gt;</span>  </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"content\"</span>&gt;</span>Content here<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>CSS部分如下：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.wrapper</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">float</span>: left;</span><br><span class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">margin-bottom</span>: -<span class=\"number\">120px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.content</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">clear</span>: both;</span><br><span class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">240px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>方法二：</li>\n</ul>\n<h3 id=\"HTTP请求的头部信息包括哪些东西？\"><a href=\"#HTTP请求的头部信息包括哪些东西？\" class=\"headerlink\" title=\"HTTP请求的头部信息包括哪些东西？\"></a>HTTP请求的头部信息包括哪些东西？</h3><p>最基本的信息如下表：</p>\n<ul>\n<li>请求头部信息：</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>字段名</th>\n<th>描述</th>\n<th>举例</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>Host</code></td>\n<td>服务器域名</td>\n<td><code>Host: www.baidu.com</code></td>\n</tr>\n<tr>\n<td><code>Accept</code></td>\n<td>可接受的媒体类型</td>\n<td><code>Accept: * / *</code></td>\n</tr>\n<tr>\n<td><code>Accept-Encoding</code></td>\n<td>可接受的编码类型</td>\n<td><code>Accept-Encoding: gzip, deflate, sdch</code></td>\n</tr>\n<tr>\n<td><code>Accept-Language</code></td>\n<td>可接受的语言</td>\n<td><code>Accept-Language: en-US, en; q=0.8</code></td>\n</tr>\n<tr>\n<td><code>User-Agent</code></td>\n<td>用户代理</td>\n<td><code>User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36</code></td>\n</tr>\n<tr>\n<td><code>Content-type</code></td>\n<td>发送内容类型</td>\n<td><code>Content-type: text/plain</code></td>\n</tr>\n<tr>\n<td><code>Content-length</code></td>\n<td>发送内容长度</td>\n<td><code>Content-length: 327</code></td>\n</tr>\n<tr>\n<td><code>Connection</code></td>\n<td>客户端连接的类型</td>\n<td><code>Connection: keep-alive</code></td>\n</tr>\n<tr>\n<td><code>Referer</code></td>\n<td>当前文档的URL</td>\n<td><code>Referer: http://www.baidu.com/12345</code></td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>响应头部信息：</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>字段名</th>\n<th>描述</th>\n<th>举例</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>Access-Control-Allow-Origin</code></td>\n<td>可跨域访问源</td>\n<td><code>Access-Control-Allow-Origin: *</code></td>\n</tr>\n<tr>\n<td><code>Cache-Control</code></td>\n<td>可缓存性</td>\n<td><code>Cache-Control: no-cache</code></td>\n</tr>\n<tr>\n<td><code>Content-length</code></td>\n<td>响应内容长度</td>\n<td><code>Content-length: 35</code></td>\n</tr>\n<tr>\n<td><code>Content-type</code></td>\n<td>响应内容类型</td>\n<td><code>Content-type: image/gif</code></td>\n</tr>\n<tr>\n<td><code>Date</code></td>\n<td>响应时间</td>\n<td><code>Date: Mon, 06 Mar 2017 15:34:16 GMT</code></td>\n</tr>\n<tr>\n<td><code>Status</code></td>\n<td>响应状态码</td>\n<td><code>Status: 200</code></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"HTTP请求的状态码有哪些？分别代表什么意思？\"><a href=\"#HTTP请求的状态码有哪些？分别代表什么意思？\" class=\"headerlink\" title=\"HTTP请求的状态码有哪些？分别代表什么意思？\"></a>HTTP请求的状态码有哪些？分别代表什么意思？</h3><p>状态码分类：</p>\n<table>\n<thead>\n<tr>\n<th>整体范围</th>\n<th>已定义范围</th>\n<th>分类</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>100 ～ 199</td>\n<td>100 ～ 101</td>\n<td>信息提示</td>\n</tr>\n<tr>\n<td>200 ～ 299</td>\n<td>200 ～ 206</td>\n<td>成功提示</td>\n</tr>\n<tr>\n<td>300 ～ 399</td>\n<td>300 ～ 307</td>\n<td>重定向</td>\n</tr>\n<tr>\n<td>400 ～ 499</td>\n<td>400 ～ 417</td>\n<td>客户端错误</td>\n</tr>\n<tr>\n<td>500 ～ 599</td>\n<td>500 ～ 505</td>\n<td>服务器错误</td>\n</tr>\n</tbody>\n</table>\n<p>状态码解释：</p>\n<table>\n<thead>\n<tr>\n<th>状态码</th>\n<th>解释</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>100</code></td>\n<td>Continue（继续） 初始的请求已经接受，客户应当继续发送请求的其余部分。（HTTP 1.1新）</td>\n</tr>\n<tr>\n<td><code>101</code></td>\n<td>Switching Protocols（切换协议） 请求者已要求服务器切换协议，服务器已确认并准备进行切换。（HTTP 1.1新）</td>\n</tr>\n<tr>\n<td><code>200</code></td>\n<td>OK（成功） 一切正常，对GET和POST请求的应答文档跟在后面。</td>\n</tr>\n<tr>\n<td><code>201</code></td>\n<td>Created（已创建）服务器已经创建了文档，Location头给出了它的URL。</td>\n</tr>\n<tr>\n<td><code>202</code></td>\n<td>Accepted（已接受）服务器已接受了请求，但尚未对其进行处理。</td>\n</tr>\n<tr>\n<td><code>203</code></td>\n<td>Non-Authoritative Information（非授权信息）文档已经正常地返回，但一些应答头可能不正确，可能来自另一来源 。（HTTP 1.1新）。</td>\n</tr>\n<tr>\n<td><code>204</code></td>\n<td>No Content（无内容）未返回任何内容，浏览器应该继续显示原来的文档。</td>\n</tr>\n<tr>\n<td><code>205</code></td>\n<td>Reset Content（重置内容）没有新的内容，但浏览器应该重置它所显示的内容。用来强制浏览器清除表单输入内容（HTTP 1.1新）。</td>\n</tr>\n<tr>\n<td><code>206</code></td>\n<td>Partial Content（部分内容）服务器成功处理了部分 GET 请求。（HTTP 1.1新）</td>\n</tr>\n<tr>\n<td><code>300</code></td>\n<td>Multiple Choices（多种选择）客户请求的文档可以在多个位置找到，这些位置已经在返回的文档内列出。如果服务器要提出优先选择，则应该在Location应答头指明。</td>\n</tr>\n<tr>\n<td><code>301</code></td>\n<td>Moved Permanently（永久移动）请求的网页已被永久移动到新位置。服务器返回此响应（作为对 GET 或 HEAD 请求的响应）时，会自动将请求者转到新位置。</td>\n</tr>\n<tr>\n<td><code>302</code></td>\n<td>Found（临时移动）类似于301，但新的URL应该被视为临时性的替代，而不是永久性的。注意，在HTTP1.0中对应的状态信息是“Moved Temporatily”，出现该状态代码时，浏览器能够自动访问新的URL，因此它是一个很有用的状态代码。注意这个状态代码有时候可以和301替换使用。例如，如果浏览器错误地请求<a href=\"http://host/~user（缺少了后面的斜杠），有的服务器返回301，有的则返回302。严格地说，我们只能假定只有当原来的请求是GET时浏览器才会自动重定向。请参见307。\" target=\"_blank\" rel=\"noopener\">http://host/~user（缺少了后面的斜杠），有的服务器返回301，有的则返回302。严格地说，我们只能假定只有当原来的请求是GET时浏览器才会自动重定向。请参见307。</a></td>\n</tr>\n<tr>\n<td><code>303</code></td>\n<td>See Other（查看其他位置）类似于301/302，不同之处在于，如果原来的请求是POST，Location头指定的重定向目标文档应该通过GET提取（HTTP 1.1新）。</td>\n</tr>\n<tr>\n<td><code>304</code></td>\n<td>Not Modified（未修改）自从上次请求后，请求的网页未被修改过。原来缓冲的文档还可以继续使用，不会返回网页内容。</td>\n</tr>\n<tr>\n<td><code>305</code></td>\n<td>Use Proxy（使用代理）只能使用代理访问请求的网页。如果服务器返回此响应，那么，服务器还会指明请求者应当使用的代理。（HTTP 1.1新）</td>\n</tr>\n<tr>\n<td><code>307</code></td>\n<td>Temporary Redirect（临时重定向）和 302（Found）相同。许多浏览器会错误地响应302应答进行重定向，即使原来的请求是POST，即使它实际上只能在POST请求的应答是303时才能重定向。由于这个原因，HTTP 1.1新增了307，以便更加清除地区分几个状态代码：当出现303应答时，浏览器可以跟随重定向的GET和POST请求；如果是307应答，则浏览器只能跟随对GET请求的重定向。（HTTP 1.1新）</td>\n</tr>\n<tr>\n<td><code>400</code></td>\n<td>Bad Request（错误请求）请求出现语法错误。</td>\n</tr>\n<tr>\n<td><code>401</code></td>\n<td>Unauthorized（未授权）客户试图未经授权访问受密码保护的页面。应答中会包含一个WWW-Authenticate头，浏览器据此显示用户名字/密码对话框，然后在填写合适的Authorization头后再次发出请求。</td>\n</tr>\n<tr>\n<td><code>403</code></td>\n<td>Forbidden（已禁止） 资源不可用。服务器理解客户的请求，但拒绝处理它。通常由于服务器上文件或目录的权限设置导致。</td>\n</tr>\n<tr>\n<td><code>404</code></td>\n<td>Not Found（未找到）无法找到指定位置的资源。</td>\n</tr>\n<tr>\n<td><code>405</code></td>\n<td>Method Not Allowed（方法禁用）请求方法（GET、POST、HEAD、DELETE、PUT、TRACE等）禁用。（HTTP 1.1新）</td>\n</tr>\n<tr>\n<td><code>406</code></td>\n<td>Not Acceptable（不接受）指定的资源已经找到，但它的MIME类型和客户在Accpet头中所指定的不兼容（HTTP 1.1新）</td>\n</tr>\n<tr>\n<td><code>407</code></td>\n<td>Proxy Authentication Required（需要代理授权）类似于401，表示客户必须先经过代理服务器的授权。（HTTP 1.1新）</td>\n</tr>\n<tr>\n<td><code>408</code></td>\n<td>Request Time-out（请求超时）服务器等候请求时超时。（HTTP 1.1新）</td>\n</tr>\n<tr>\n<td><code>409</code></td>\n<td>Conflict（冲突）通常和PUT请求有关。由于请求和资源的当前状态相冲突，因此请求不能成功。（HTTP 1.1新）</td>\n</tr>\n<tr>\n<td><code>410</code></td>\n<td>Gone（已删除）如果请求的资源已被永久删除，那么，服务器会返回此响应。该代码与 404（未找到）代码类似，但在资源以前有但现在已经不复存在的情况下，有时会替代 404 代码出现。如果资源已被永久删除，那么，您应当使用 301 代码指定该资源的新位置。（HTTP 1.1新）</td>\n</tr>\n<tr>\n<td><code>411</code></td>\n<td>Length Required（需要有效长度）不会接受包含无效内容长度标头字段的请求。（HTTP 1.1新）</td>\n</tr>\n<tr>\n<td><code>412</code></td>\n<td>Precondition Failed（未满足前提条件）服务器未满足请求者在请求中设置的其中一个前提条件。（HTTP 1.1新）</td>\n</tr>\n<tr>\n<td><code>413</code></td>\n<td>Request Entity Too Large（请求实体过大）请求实体过大，已超出服务器的处理能力。如果服务器认为自己能够稍后再处理该请求，则应该提供一个Retry-After头。（HTTP 1.1新）</td>\n</tr>\n<tr>\n<td><code>414</code></td>\n<td>Request-URI Too Large（请求的 URI 过长）请求的 URI（通常为网址）过长，服务器无法进行处理。</td>\n</tr>\n<tr>\n<td><code>415</code></td>\n<td>Unsupported Media Type（不支持的媒体类型）请求的格式不受请求页面的支持。</td>\n</tr>\n<tr>\n<td><code>416</code></td>\n<td>Requested range not satisfiable（请求范围不符合要求）服务器不能满足客户在请求中指定的Range头。（HTTP 1.1新）</td>\n</tr>\n<tr>\n<td><code>417</code></td>\n<td>Expectation Failed（未满足期望值）服务器未满足”期望”请求标头字段的要求。</td>\n</tr>\n<tr>\n<td><code>500</code></td>\n<td>Internal Server Error（服务器内部错误）服务器遇到错误，无法完成请求。</td>\n</tr>\n<tr>\n<td><code>501</code></td>\n<td>Not Implemented（尚未实施） 服务器不具备完成请求的功能。例如，当服务器无法识别请求方法时，服务器可能会返回此代码。</td>\n</tr>\n<tr>\n<td><code>502</code></td>\n<td>Bad Gateway（错误网关）服务器作为网关或者代理时，为了完成请求访问下一个服务器，但该服务器返回了非法的应答。</td>\n</tr>\n<tr>\n<td><code>503</code></td>\n<td>Service Unavailable（服务不可用）服务器由于维护或者负载过重未能应答。通常，这只是一种暂时的状态。</td>\n</tr>\n<tr>\n<td><code>504</code></td>\n<td>Gateway Time-out（网关超时） 由作为代理或网关的服务器使用，表示不能及时地从远程服务器获得应答。（HTTP 1.1新）</td>\n</tr>\n<tr>\n<td><code>505</code></td>\n<td>HTTP Version not supported（HTTP 版本不受支持）不支持请求中所使用的 HTTP 协议版本。</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Node-js有哪些核心插件或模块？\"><a href=\"#Node-js有哪些核心插件或模块？\" class=\"headerlink\" title=\"Node.js有哪些核心插件或模块？\"></a>Node.js有哪些核心插件或模块？</h3><p>Node.js核心模块如下表：</p>\n<table>\n<thead>\n<tr>\n<th>模块名称</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>http</td>\n<td>提供http服务器功能</td>\n</tr>\n<tr>\n<td>url</td>\n<td>用于解析url</td>\n</tr>\n<tr>\n<td>fs</td>\n<td>文件IO系统</td>\n</tr>\n<tr>\n<td>querystring</td>\n<td>解析url的查询字符串</td>\n</tr>\n<tr>\n<td>util</td>\n<td>提供实用工具</td>\n</tr>\n<tr>\n<td>path</td>\n<td>处理文件路径</td>\n</tr>\n<tr>\n<td>crypto</td>\n<td>提供加密解密功能</td>\n</tr>\n<tr>\n<td>child_process</td>\n<td>新建子进程</td>\n</tr>\n</tbody>\n</table>\n<p>为了提高运行速度，上面这些核心模块在安装时都会被编译成二进制文件。</p>\n<h3 id=\"拿到一份设计稿，如何开始开发工作？\"><a href=\"#拿到一份设计稿，如何开始开发工作？\" class=\"headerlink\" title=\"拿到一份设计稿，如何开始开发工作？\"></a>拿到一份设计稿，如何开始开发工作？</h3><p>先分析布局，划分框架，然后规划结构，编写代码。</p>\n<p>如果是协同开发，那就要建立代码规范：</p>\n<ul>\n<li>合理地使用标签</li>\n<li>准确使用CSS</li>\n<li>良好的注释</li>\n<li>清晰的代码结构</li>\n</ul>\n<p>除此之外，为了提高效率，降低出错率，应该实现前端工程化。</p>\n<h3 id=\"有没有写过一些可复用的组件？\"><a href=\"#有没有写过一些可复用的组件？\" class=\"headerlink\" title=\"有没有写过一些可复用的组件？\"></a>有没有写过一些可复用的组件？</h3><h3 id=\"从前端的角度考虑安全性，该如何有效预防？\"><a href=\"#从前端的角度考虑安全性，该如何有效预防？\" class=\"headerlink\" title=\"从前端的角度考虑安全性，该如何有效预防？\"></a>从前端的角度考虑安全性，该如何有效预防？</h3>","site":{"data":{"next":{"favicon":"/favicon.ico","keywords":"Hexo, NexT","rss":null,"since":2016,"authoricon":"heart","copyright":true,"canonical":true,"seo":true,"index_with_subtitle":false,"menu":{"home":"/","categories":"/categories/","archives":"/archives/","tags":"/tags/","about":"/about/"},"menu_icons":{"enable":true,"home":"home","about":"user","categories":"th","schedule":"calendar","tags":"tags","archives":"archive","sitemap":"sitemap","commonweal":"heartbeat"},"scheme":"Mist","social":{"Github":"https://github.com/ricosmall"},"social_icons":{"enable":true,"GitHub":"github","Twitter":"twitter","Weibo":"weibo"},"avatar":"/uploads/avatar.png","toc":{"enable":true,"number":true,"wrap":false},"sidebar":{"position":"left","display":"post","offset":12,"offset_float":0,"b2t":false,"scrollpercent":false,"onmobile":false},"scroll_to_more":true,"save_scroll":false,"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"post_meta":{"item_text":true,"created_at":true,"updated_at":false,"categories":true},"post_wordcount":{"item_text":true,"wordcount":false,"min2read":false,"separated_meta":true},"post_copyright":{"enable":false,"license":"CC BY-NC-SA 3.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/3.0/"},"custom_logo":{"enabled":false,"image":null},"highlight_theme":"night bright","font":{"enable":true,"host":null,"global":{"external":true,"family":"Lato"},"headings":{"external":true,"family":null},"posts":{"external":true,"family":null},"logo":{"external":true,"family":null,"size":null},"codes":{"external":true,"family":"Menlo, Monospace","size":null}},"mathjax":{"enable":true,"per_page":false,"cdn":"//cdn.bootcss.com/mathjax/2.7.1/latest.js?config=TeX-AMS-MML_HTMLorMML"},"han":false,"disqus":{"enable":false,"shortname":"ricosmall","count":false},"changyan":{"enable":false,"appid":null,"appkey":null},"duoshuo_info":{"ua_enable":true,"admin_enable":false,"user_id":0},"facebook_sdk":{"enable":false,"app_id":null,"fb_admin":null,"like_button":null,"webmaster":null},"facebook_comments_plugin":{"enable":false,"num_of_posts":10,"width":"100%","scheme":"light"},"vkontakte_api":{"enable":false,"app_id":null,"like":true,"comments":true,"num_of_posts":10},"rating":{"enable":false,"id":null,"color":"fc6423"},"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null},"busuanzi_count":{"enable":true,"site_uv":true,"site_uv_header":"<i class=\"fa fa-user\"></i>访问人数","site_uv_footer":null,"site_pv":true,"site_pv_header":"<i class=\"fa fa-eye\"></i>总访问量","site_pv_footer":"次","page_pv":true,"page_pv_header":"<i class=\"fa fa-file-o\"></i>浏览","page_pv_footer":"次"},"baidu_push":false,"calendar":{"enable":false,"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"timeZone":null,"showDeleted":false,"singleEvents":true,"maxResults":250},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1},"exturl":false,"use_motion":true,"fancybox":true,"pace":false,"pace_theme":"pace-theme-minimal","canvas_nest":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false,"canvas_ribbon":false,"vendors":{"_internal":"lib","jquery":null,"fancybox":null,"fancybox_css":null,"fastclick":null,"lazyload":null,"velocity":null,"velocity_ui":null,"ua_parser":null,"fontawesome":null,"algolia_instant_js":null,"algolia_instant_css":null,"pace":null,"pace_css":null,"canvas_nest":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_ribbon":null,"han":null},"css":"css","js":"js","images":"images","version":"5.1.1"}}},"excerpt":"<p>一上来就是前端技术人员的面试，让我感觉压力好大，有点紧张。</p>","more":"<p>问题：</p>\n<ul>\n<li>Array有哪些方法？</li>\n<li>如何封装简单模块？</li>\n<li>CSS如何实现一份设计稿完美兼容各种移动端？</li>\n<li>CSS如何做三列布局？</li>\n<li>CSS如何实现元素垂直水平居中？</li>\n<li>HTTP请求的头部信息包括哪些东西？</li>\n<li>HTTP请求的状态码有哪些，分别代表什么意思？</li>\n<li>Node.js有哪些核心插件或模块？</li>\n<li>拿到一份设计稿，如何开始开发工作？</li>\n<li>有没有写过一些可复用的组件？</li>\n<li>从前端的角度考虑安全性，该如何有效预防？</li>\n</ul>\n<p>面试时确实有一部分原因是紧张，有一部分原因是基础确实不够扎实。</p>\n<p>现在就来慢慢研究这些问题。</p>\n<hr>\n<h3 id=\"Array有哪些方法？\"><a href=\"#Array有哪些方法？\" class=\"headerlink\" title=\"Array有哪些方法？\"></a>Array有哪些方法？</h3><table>\n<thead>\n<tr>\n<th>方法名称</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>concat</code></td>\n<td>连接2个或更多数组，并返回结果</td>\n</tr>\n<tr>\n<td><code>every</code></td>\n<td>对数组每一项运行给定函数，如果该函数每一项都返回true，则返回true</td>\n</tr>\n<tr>\n<td><code>filter</code></td>\n<td>对数组每一项运行给定函数，返回该函数会返回true的项组成的数组</td>\n</tr>\n<tr>\n<td><code>forEach</code></td>\n<td>对数组每一项运行给定函数。这个函数没有返回值</td>\n</tr>\n<tr>\n<td><code>join</code></td>\n<td>将所有的数组元素连成一个字符串</td>\n</tr>\n<tr>\n<td><code>indexOf</code></td>\n<td>返回第一个与给定参数相等的数组元素的索引，没有找到则放回-1</td>\n</tr>\n<tr>\n<td><code>lastIndexOf</code></td>\n<td>返回在数组中搜索到的与给定参数相等的元素的索引里的最大值</td>\n</tr>\n<tr>\n<td><code>map</code></td>\n<td>对数组的每一项运行给定函数，返回每次函数的调用结果组成的数组</td>\n</tr>\n<tr>\n<td><code>reverse</code></td>\n<td>颠倒数组中元素的顺序，原先第一个元素现在变成最后一个，同样原先的最后一个元素变成了现在的第一个元素</td>\n</tr>\n<tr>\n<td><code>slice</code></td>\n<td>传入索引值，将数组里对应索引范围内的元素作为新数组返回</td>\n</tr>\n<tr>\n<td><code>some</code></td>\n<td>对数组的每一项运行给定函数，如果任一项返回true，则返回true</td>\n</tr>\n<tr>\n<td><code>sort</code></td>\n<td>按照字母顺序对数组排序，支持传入指定排序方法的函数作为参数</td>\n</tr>\n<tr>\n<td><code>toString</code></td>\n<td>将数组作为字符串返回</td>\n</tr>\n<tr>\n<td><code>valueOf</code></td>\n<td>和toString类似，将数组作为字符串返回</td>\n</tr>\n<tr>\n<td><code>push</code></td>\n<td>将传入的参数作为数组的最后一项添加到数组中，并返回新数组的长度</td>\n</tr>\n<tr>\n<td><code>pop</code></td>\n<td>取出数组的最后一项并作为返回值</td>\n</tr>\n<tr>\n<td><code>shift</code></td>\n<td>取出数组的第一项并作为返回值</td>\n</tr>\n<tr>\n<td><code>unshift</code></td>\n<td>将传入的参数作为数组的第一项添加到数组中，并返回新数组的长度</td>\n</tr>\n</tbody>\n</table>\n<p>这是我能想到和找到的所有方法了，如果看官发现更多，请提醒我，谢谢！</p>\n<h3 id=\"如何封装简单模块？\"><a href=\"#如何封装简单模块？\" class=\"headerlink\" title=\"如何封装简单模块？\"></a>如何封装简单模块？</h3><p>我采用的是宽放大模式，就是一个立即执行函数表达式：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">window, module, undefined</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">module</span>.sayHello = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">'Hello'</span>);</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    ...</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;)(<span class=\"built_in\">window</span>, <span class=\"built_in\">window</span>.module || (<span class=\"built_in\">window</span>.module = &#123;&#125;));</span><br></pre></td></tr></table></figure>\n<h3 id=\"CSS如何实现一份设计稿完美兼容各种移动端？\"><a href=\"#CSS如何实现一份设计稿完美兼容各种移动端？\" class=\"headerlink\" title=\"CSS如何实现一份设计稿完美兼容各种移动端？\"></a>CSS如何实现一份设计稿完美兼容各种移动端？</h3><p>采用rem方式，并且采用js动态识别屏幕的宽度动态生成viewport的meta标签。</p>\n<h3 id=\"CSS如何做三列布局？\"><a href=\"#CSS如何做三列布局？\" class=\"headerlink\" title=\"CSS如何做三列布局？\"></a>CSS如何做三列布局？</h3><h3 id=\"CSS如何实现元素水平垂直居中？\"><a href=\"#CSS如何实现元素水平垂直居中？\" class=\"headerlink\" title=\"CSS如何实现元素水平垂直居中？\"></a>CSS如何实现元素水平垂直居中？</h3><ul>\n<li>方法一：</li>\n</ul>\n<p>HTML部分如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"wrapper\"</span>&gt;</span>  </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"content\"</span>&gt;</span>Content here<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>CSS部分如下：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.wrapper</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">float</span>: left;</span><br><span class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">margin-bottom</span>: -<span class=\"number\">120px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.content</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">clear</span>: both;</span><br><span class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">240px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>方法二：</li>\n</ul>\n<h3 id=\"HTTP请求的头部信息包括哪些东西？\"><a href=\"#HTTP请求的头部信息包括哪些东西？\" class=\"headerlink\" title=\"HTTP请求的头部信息包括哪些东西？\"></a>HTTP请求的头部信息包括哪些东西？</h3><p>最基本的信息如下表：</p>\n<ul>\n<li>请求头部信息：</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>字段名</th>\n<th>描述</th>\n<th>举例</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>Host</code></td>\n<td>服务器域名</td>\n<td><code>Host: www.baidu.com</code></td>\n</tr>\n<tr>\n<td><code>Accept</code></td>\n<td>可接受的媒体类型</td>\n<td><code>Accept: * / *</code></td>\n</tr>\n<tr>\n<td><code>Accept-Encoding</code></td>\n<td>可接受的编码类型</td>\n<td><code>Accept-Encoding: gzip, deflate, sdch</code></td>\n</tr>\n<tr>\n<td><code>Accept-Language</code></td>\n<td>可接受的语言</td>\n<td><code>Accept-Language: en-US, en; q=0.8</code></td>\n</tr>\n<tr>\n<td><code>User-Agent</code></td>\n<td>用户代理</td>\n<td><code>User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36</code></td>\n</tr>\n<tr>\n<td><code>Content-type</code></td>\n<td>发送内容类型</td>\n<td><code>Content-type: text/plain</code></td>\n</tr>\n<tr>\n<td><code>Content-length</code></td>\n<td>发送内容长度</td>\n<td><code>Content-length: 327</code></td>\n</tr>\n<tr>\n<td><code>Connection</code></td>\n<td>客户端连接的类型</td>\n<td><code>Connection: keep-alive</code></td>\n</tr>\n<tr>\n<td><code>Referer</code></td>\n<td>当前文档的URL</td>\n<td><code>Referer: http://www.baidu.com/12345</code></td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>响应头部信息：</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>字段名</th>\n<th>描述</th>\n<th>举例</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>Access-Control-Allow-Origin</code></td>\n<td>可跨域访问源</td>\n<td><code>Access-Control-Allow-Origin: *</code></td>\n</tr>\n<tr>\n<td><code>Cache-Control</code></td>\n<td>可缓存性</td>\n<td><code>Cache-Control: no-cache</code></td>\n</tr>\n<tr>\n<td><code>Content-length</code></td>\n<td>响应内容长度</td>\n<td><code>Content-length: 35</code></td>\n</tr>\n<tr>\n<td><code>Content-type</code></td>\n<td>响应内容类型</td>\n<td><code>Content-type: image/gif</code></td>\n</tr>\n<tr>\n<td><code>Date</code></td>\n<td>响应时间</td>\n<td><code>Date: Mon, 06 Mar 2017 15:34:16 GMT</code></td>\n</tr>\n<tr>\n<td><code>Status</code></td>\n<td>响应状态码</td>\n<td><code>Status: 200</code></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"HTTP请求的状态码有哪些？分别代表什么意思？\"><a href=\"#HTTP请求的状态码有哪些？分别代表什么意思？\" class=\"headerlink\" title=\"HTTP请求的状态码有哪些？分别代表什么意思？\"></a>HTTP请求的状态码有哪些？分别代表什么意思？</h3><p>状态码分类：</p>\n<table>\n<thead>\n<tr>\n<th>整体范围</th>\n<th>已定义范围</th>\n<th>分类</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>100 ～ 199</td>\n<td>100 ～ 101</td>\n<td>信息提示</td>\n</tr>\n<tr>\n<td>200 ～ 299</td>\n<td>200 ～ 206</td>\n<td>成功提示</td>\n</tr>\n<tr>\n<td>300 ～ 399</td>\n<td>300 ～ 307</td>\n<td>重定向</td>\n</tr>\n<tr>\n<td>400 ～ 499</td>\n<td>400 ～ 417</td>\n<td>客户端错误</td>\n</tr>\n<tr>\n<td>500 ～ 599</td>\n<td>500 ～ 505</td>\n<td>服务器错误</td>\n</tr>\n</tbody>\n</table>\n<p>状态码解释：</p>\n<table>\n<thead>\n<tr>\n<th>状态码</th>\n<th>解释</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>100</code></td>\n<td>Continue（继续） 初始的请求已经接受，客户应当继续发送请求的其余部分。（HTTP 1.1新）</td>\n</tr>\n<tr>\n<td><code>101</code></td>\n<td>Switching Protocols（切换协议） 请求者已要求服务器切换协议，服务器已确认并准备进行切换。（HTTP 1.1新）</td>\n</tr>\n<tr>\n<td><code>200</code></td>\n<td>OK（成功） 一切正常，对GET和POST请求的应答文档跟在后面。</td>\n</tr>\n<tr>\n<td><code>201</code></td>\n<td>Created（已创建）服务器已经创建了文档，Location头给出了它的URL。</td>\n</tr>\n<tr>\n<td><code>202</code></td>\n<td>Accepted（已接受）服务器已接受了请求，但尚未对其进行处理。</td>\n</tr>\n<tr>\n<td><code>203</code></td>\n<td>Non-Authoritative Information（非授权信息）文档已经正常地返回，但一些应答头可能不正确，可能来自另一来源 。（HTTP 1.1新）。</td>\n</tr>\n<tr>\n<td><code>204</code></td>\n<td>No Content（无内容）未返回任何内容，浏览器应该继续显示原来的文档。</td>\n</tr>\n<tr>\n<td><code>205</code></td>\n<td>Reset Content（重置内容）没有新的内容，但浏览器应该重置它所显示的内容。用来强制浏览器清除表单输入内容（HTTP 1.1新）。</td>\n</tr>\n<tr>\n<td><code>206</code></td>\n<td>Partial Content（部分内容）服务器成功处理了部分 GET 请求。（HTTP 1.1新）</td>\n</tr>\n<tr>\n<td><code>300</code></td>\n<td>Multiple Choices（多种选择）客户请求的文档可以在多个位置找到，这些位置已经在返回的文档内列出。如果服务器要提出优先选择，则应该在Location应答头指明。</td>\n</tr>\n<tr>\n<td><code>301</code></td>\n<td>Moved Permanently（永久移动）请求的网页已被永久移动到新位置。服务器返回此响应（作为对 GET 或 HEAD 请求的响应）时，会自动将请求者转到新位置。</td>\n</tr>\n<tr>\n<td><code>302</code></td>\n<td>Found（临时移动）类似于301，但新的URL应该被视为临时性的替代，而不是永久性的。注意，在HTTP1.0中对应的状态信息是“Moved Temporatily”，出现该状态代码时，浏览器能够自动访问新的URL，因此它是一个很有用的状态代码。注意这个状态代码有时候可以和301替换使用。例如，如果浏览器错误地请求<a href=\"http://host/~user（缺少了后面的斜杠），有的服务器返回301，有的则返回302。严格地说，我们只能假定只有当原来的请求是GET时浏览器才会自动重定向。请参见307。\" target=\"_blank\" rel=\"noopener\">http://host/~user（缺少了后面的斜杠），有的服务器返回301，有的则返回302。严格地说，我们只能假定只有当原来的请求是GET时浏览器才会自动重定向。请参见307。</a></td>\n</tr>\n<tr>\n<td><code>303</code></td>\n<td>See Other（查看其他位置）类似于301/302，不同之处在于，如果原来的请求是POST，Location头指定的重定向目标文档应该通过GET提取（HTTP 1.1新）。</td>\n</tr>\n<tr>\n<td><code>304</code></td>\n<td>Not Modified（未修改）自从上次请求后，请求的网页未被修改过。原来缓冲的文档还可以继续使用，不会返回网页内容。</td>\n</tr>\n<tr>\n<td><code>305</code></td>\n<td>Use Proxy（使用代理）只能使用代理访问请求的网页。如果服务器返回此响应，那么，服务器还会指明请求者应当使用的代理。（HTTP 1.1新）</td>\n</tr>\n<tr>\n<td><code>307</code></td>\n<td>Temporary Redirect（临时重定向）和 302（Found）相同。许多浏览器会错误地响应302应答进行重定向，即使原来的请求是POST，即使它实际上只能在POST请求的应答是303时才能重定向。由于这个原因，HTTP 1.1新增了307，以便更加清除地区分几个状态代码：当出现303应答时，浏览器可以跟随重定向的GET和POST请求；如果是307应答，则浏览器只能跟随对GET请求的重定向。（HTTP 1.1新）</td>\n</tr>\n<tr>\n<td><code>400</code></td>\n<td>Bad Request（错误请求）请求出现语法错误。</td>\n</tr>\n<tr>\n<td><code>401</code></td>\n<td>Unauthorized（未授权）客户试图未经授权访问受密码保护的页面。应答中会包含一个WWW-Authenticate头，浏览器据此显示用户名字/密码对话框，然后在填写合适的Authorization头后再次发出请求。</td>\n</tr>\n<tr>\n<td><code>403</code></td>\n<td>Forbidden（已禁止） 资源不可用。服务器理解客户的请求，但拒绝处理它。通常由于服务器上文件或目录的权限设置导致。</td>\n</tr>\n<tr>\n<td><code>404</code></td>\n<td>Not Found（未找到）无法找到指定位置的资源。</td>\n</tr>\n<tr>\n<td><code>405</code></td>\n<td>Method Not Allowed（方法禁用）请求方法（GET、POST、HEAD、DELETE、PUT、TRACE等）禁用。（HTTP 1.1新）</td>\n</tr>\n<tr>\n<td><code>406</code></td>\n<td>Not Acceptable（不接受）指定的资源已经找到，但它的MIME类型和客户在Accpet头中所指定的不兼容（HTTP 1.1新）</td>\n</tr>\n<tr>\n<td><code>407</code></td>\n<td>Proxy Authentication Required（需要代理授权）类似于401，表示客户必须先经过代理服务器的授权。（HTTP 1.1新）</td>\n</tr>\n<tr>\n<td><code>408</code></td>\n<td>Request Time-out（请求超时）服务器等候请求时超时。（HTTP 1.1新）</td>\n</tr>\n<tr>\n<td><code>409</code></td>\n<td>Conflict（冲突）通常和PUT请求有关。由于请求和资源的当前状态相冲突，因此请求不能成功。（HTTP 1.1新）</td>\n</tr>\n<tr>\n<td><code>410</code></td>\n<td>Gone（已删除）如果请求的资源已被永久删除，那么，服务器会返回此响应。该代码与 404（未找到）代码类似，但在资源以前有但现在已经不复存在的情况下，有时会替代 404 代码出现。如果资源已被永久删除，那么，您应当使用 301 代码指定该资源的新位置。（HTTP 1.1新）</td>\n</tr>\n<tr>\n<td><code>411</code></td>\n<td>Length Required（需要有效长度）不会接受包含无效内容长度标头字段的请求。（HTTP 1.1新）</td>\n</tr>\n<tr>\n<td><code>412</code></td>\n<td>Precondition Failed（未满足前提条件）服务器未满足请求者在请求中设置的其中一个前提条件。（HTTP 1.1新）</td>\n</tr>\n<tr>\n<td><code>413</code></td>\n<td>Request Entity Too Large（请求实体过大）请求实体过大，已超出服务器的处理能力。如果服务器认为自己能够稍后再处理该请求，则应该提供一个Retry-After头。（HTTP 1.1新）</td>\n</tr>\n<tr>\n<td><code>414</code></td>\n<td>Request-URI Too Large（请求的 URI 过长）请求的 URI（通常为网址）过长，服务器无法进行处理。</td>\n</tr>\n<tr>\n<td><code>415</code></td>\n<td>Unsupported Media Type（不支持的媒体类型）请求的格式不受请求页面的支持。</td>\n</tr>\n<tr>\n<td><code>416</code></td>\n<td>Requested range not satisfiable（请求范围不符合要求）服务器不能满足客户在请求中指定的Range头。（HTTP 1.1新）</td>\n</tr>\n<tr>\n<td><code>417</code></td>\n<td>Expectation Failed（未满足期望值）服务器未满足”期望”请求标头字段的要求。</td>\n</tr>\n<tr>\n<td><code>500</code></td>\n<td>Internal Server Error（服务器内部错误）服务器遇到错误，无法完成请求。</td>\n</tr>\n<tr>\n<td><code>501</code></td>\n<td>Not Implemented（尚未实施） 服务器不具备完成请求的功能。例如，当服务器无法识别请求方法时，服务器可能会返回此代码。</td>\n</tr>\n<tr>\n<td><code>502</code></td>\n<td>Bad Gateway（错误网关）服务器作为网关或者代理时，为了完成请求访问下一个服务器，但该服务器返回了非法的应答。</td>\n</tr>\n<tr>\n<td><code>503</code></td>\n<td>Service Unavailable（服务不可用）服务器由于维护或者负载过重未能应答。通常，这只是一种暂时的状态。</td>\n</tr>\n<tr>\n<td><code>504</code></td>\n<td>Gateway Time-out（网关超时） 由作为代理或网关的服务器使用，表示不能及时地从远程服务器获得应答。（HTTP 1.1新）</td>\n</tr>\n<tr>\n<td><code>505</code></td>\n<td>HTTP Version not supported（HTTP 版本不受支持）不支持请求中所使用的 HTTP 协议版本。</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Node-js有哪些核心插件或模块？\"><a href=\"#Node-js有哪些核心插件或模块？\" class=\"headerlink\" title=\"Node.js有哪些核心插件或模块？\"></a>Node.js有哪些核心插件或模块？</h3><p>Node.js核心模块如下表：</p>\n<table>\n<thead>\n<tr>\n<th>模块名称</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>http</td>\n<td>提供http服务器功能</td>\n</tr>\n<tr>\n<td>url</td>\n<td>用于解析url</td>\n</tr>\n<tr>\n<td>fs</td>\n<td>文件IO系统</td>\n</tr>\n<tr>\n<td>querystring</td>\n<td>解析url的查询字符串</td>\n</tr>\n<tr>\n<td>util</td>\n<td>提供实用工具</td>\n</tr>\n<tr>\n<td>path</td>\n<td>处理文件路径</td>\n</tr>\n<tr>\n<td>crypto</td>\n<td>提供加密解密功能</td>\n</tr>\n<tr>\n<td>child_process</td>\n<td>新建子进程</td>\n</tr>\n</tbody>\n</table>\n<p>为了提高运行速度，上面这些核心模块在安装时都会被编译成二进制文件。</p>\n<h3 id=\"拿到一份设计稿，如何开始开发工作？\"><a href=\"#拿到一份设计稿，如何开始开发工作？\" class=\"headerlink\" title=\"拿到一份设计稿，如何开始开发工作？\"></a>拿到一份设计稿，如何开始开发工作？</h3><p>先分析布局，划分框架，然后规划结构，编写代码。</p>\n<p>如果是协同开发，那就要建立代码规范：</p>\n<ul>\n<li>合理地使用标签</li>\n<li>准确使用CSS</li>\n<li>良好的注释</li>\n<li>清晰的代码结构</li>\n</ul>\n<p>除此之外，为了提高效率，降低出错率，应该实现前端工程化。</p>\n<h3 id=\"有没有写过一些可复用的组件？\"><a href=\"#有没有写过一些可复用的组件？\" class=\"headerlink\" title=\"有没有写过一些可复用的组件？\"></a>有没有写过一些可复用的组件？</h3><h3 id=\"从前端的角度考虑安全性，该如何有效预防？\"><a href=\"#从前端的角度考虑安全性，该如何有效预防？\" class=\"headerlink\" title=\"从前端的角度考虑安全性，该如何有效预防？\"></a>从前端的角度考虑安全性，该如何有效预防？</h3>"},{"title":"Quantum聚焦：什么是浏览器引擎？","date":"2017-05-17T11:58:52.000Z","_content":"\n>[原文地址](https://hacks.mozilla.org/2017/05/quantum-up-close-what-is-a-browser-engine/)\n\n2016年10月的时候我们宣布了Quantum项目--我们计划开发下一代浏览器引擎。现在该项目正在顺利进行。事实上我们已经将Quantum项目的阶段性成果应用到了Firefox 53中。\n\n但是，我们意识到对于不开发浏览器的人（其实是大多数人）来说，要理解我们做的一些改变为什么对Firefox如此重要是很困难的。毕竟我们做的大多数改变对用户来说是不可见的。\n\n<!-- more -->\n\n考虑到这一点，我们开始撰写一系列的博客文章，使大家对我们在Quantum项目中所做的事情有一个更深层的理解。我们希望这一系列的文章能够让你们更好地理解Firefox是如何工作的，同时了解Firefox采用的方式是构建下一代浏览器引擎以更好地利用现代计算机硬件。\n\n作为这一系列文章的开始，我们认为解释Quantum正在改变的基础原理是最合适的。\n\n什么是浏览器引擎，它是怎么工作？\n\n那么要从哪里开始呢？我们认为应该从头开始。\n\n浏览器就是一个软件，它的功能是加载文件（通常从远程服务器）并且在本地显示出来，允许用户和页面交互。\n\nQuantum是我们Mozilla正在进行的一个项目，旨在大规模升级Firefox的一部分，这部分的功能就是基于远程文件计算出要呈现给用户的东西。这部分的专业术语叫“浏览器引擎”。如果没有这部分，你所看到的将会是一行行代码，而不是现在所看到的页面。Firefox的浏览器引擎名字叫Gecko。\n\n简单来说，可以把浏览器引擎比喻成一个黑盒子，就像电视盒子，这个黑盒子从网络接收数据然后把数据计算成要显示在屏幕上的图像。今天的问题是：怎么做到的？把数据计算成我们看到的网页经历了哪些步骤？\n\n![黑盒子](https://hacks.mozilla.org/files/2017/05/black-box.png)\n\n组成一个网页的数据包含很多东西，但是基本上可以分解成3个部分：\n\n- 表示网页结构的代码\n- 提供样式的代码：网页结构的视觉外观\n- 浏览器行为的脚本代码：对用户的行为进行计算并作出反馈，对网页的结构和样式作出改变\n\n浏览器引擎把结构和样式结合在一起，用来绘制显示在屏幕上的网页，并且计算出哪些部分是可以进行交互的。\n\n这一切都始于结构。当你要求浏览器加载一个网站，你会给它一个地址。这个地址对应的是另一台电脑，这台电脑收到请求就会发送数据给你的浏览器。发送数据给浏览器的细节在[另一篇文章](https://developer.mozilla.org/en-US/docs/Web/HTTP)做了详述。总之最后浏览器拿到了数据。数据以HTML的格式返回，用于描述网页的结构。浏览器又是怎么理解HTML的呢？\n\n浏览器引擎包含了一系列特殊的代码，叫做解析器，它可以把浏览器存在内存中的数据从一种格式转换成另一种格式。HTML解析器专门负责解析HTML数据，例如：\n\n```html\n<section>\n <h1 class=\"main-title\">Hello!</h1>\n <img src=\"http://example.com/image.png\">\n</section>\n```\n\n解析过程描述如下：\n\n```\n好的，这是个section。包含在section里面的有一个个h1的标题，\n标题的内容为'Hello!'；还有一张图片也包含在section里面，图片\n的数据源为'http://example.com/image.png'。\n```\n\n内存中的网页结构叫做[文档对象模型](https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model/Introduction)或者DOM。和一长串的文字形式相反，DOM表示为最终网页的元素组成的一棵树：元素包含哪些属性，哪些元素包含在其他元素中。\n\n![DOM](https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2017/05/html-diagra.png)\n\n除了描述页面的结构，HTML里面也包含了样式和脚本的资源地址。当浏览器找到这些地址，就会去请求对应的地址并加载对应的数据。然后这些数据被传给专门处理这些数据格式的解析器。如果脚本被找到了，在HTML解析完成之前，这些脚本可以改变页面的结构和样式。作为样式格式，CSS在浏览器引擎中扮演下一个角色。\n\n## 样式\n\nCSS是一种编程语言，开发者可以用这种编程语言去定义页面中特定元素的外观。CSS的全称是\"Cascading Style Sheets\"（层叠样式表），之所以这样命名，是因为它允许很多样式指令集合，在这些样式指令集中，新的指令可以覆盖旧的或者默认的指令（叫做层叠）。下面是一小段CSS示例：\n\n```CSS\nsection {\n  font-size: 15px;\n  color: #333;\n  border: 1px solid blue;\n}\nh1 {\n  font-size: 2em;\n}\n.main-title {\n  font-size: 3em;\n}\nimg {\n  width: 100%;\n}\n```\n\nCSS被大量分解成被称为规则的组合，这些组合都是由两部分组成。第一部分是选择器。选择器表示DOM中需要更改样式的元素（还记得上面的描述吗？）。另一部分是一个列表，包含着将要应用到选择器对应元素的样式声明列表。浏览器引擎包含了一个子引擎，名字叫样式引擎，它的工作就是将CSS代码指定的样式应用到HTML解析器解析出来的DOM中去。\n\n![样式引擎](https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2017/05/style-engine-1.png)\n\n举例来说，在上面那段CSS代码中，我们声明的一些样式规则，目标选择器是“section”，这个选择器会和DOM中的同名元素匹配。之后样式说明会逐一应用到DOM中的每一个元素。最终DOM中的每一个元素都会被加上样式，我们把这种状态叫做元素的计算样式。当多种样式规则都被应用到同一个元素上的时候，那些排在后面的会覆盖掉排在前面的，定义的样式声明多的会覆盖样式声明少的。可以把样式表想象成临摹用的半透明的薄纸，每一层可以覆盖前面一层，但是同时又能够透过去看到上面一层。\n\n一旦浏览器引擎拿到了计算样式，就会马上用起来。DOM和计算样式都会传给一个布局引擎，这个布局引擎可以计算将要展示页面的窗口的尺寸。布局引擎采用了一系列算法，画一个盒子，然后拿一个元素，把元素的内容以及应用在该元素上的样式依照规则放进盒子里。\n\n![布局引擎](https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2017/05/layout-time.png)\n\n布局完成之后要做的就是把页面转换成最终你看到的样子。这个过程被称为渲染，它是所有前面进行的步骤的最终结合。每个被布局定义好的盒子都被绘制好，包括来自DOM的所有内容和来自CSS的所有样式。现在，用户看到了通过对代码重新组装的页面。\n\n以上就是发生的一切。\n\n当用户滚动页面的时候，我们会重绘，然后呈现页面中未被显示在窗口中的新的部分。然而，事实证明用户喜欢滚动！浏览器引擎确信它将会被要求显示初始窗口（我们称为视口）以外的内容。很多现代浏览器深知这一点，因此一开始就会绘制更多的可见内容。当用户滚动的时候，他们想看到的部分其实早已经绘制好并且等着了。结果使滚动变得快速而又平滑。这个技术是合成的基础，一种用于减少页面绘制请求次数的技术手段。\n\n另外，有时候我们需要重绘当前屏幕上的一部分。也许用户正在观看一个60帧每秒的视频。也许页面上有一张幻灯片或者动画列表。浏览器能够检测到到页面的一部分会发生移动或者更新，并且会创建一个控制该部分内容的层，而不是重绘整个页面。一个页面可以有很多层，一层覆盖另一层。其中的某一层可以改变位置，滑动，透明，后置或者前置于另一个不需要重绘任何东西的层。非常方便不是吗？\n\n有时候一个脚本或者一个动画会改变元素的样式。当这个发生的时候，样式引擎需要重新计算这个元素的样式（有可能是页面中更多的元素），重新布局（做一个重排），然后重绘这个页面。这些计算将会花费很多时间，但是只要这种事情只是偶尔发生，那么对用户体验来说不会产生消极的影响。\n\n在现代网页应用中，DOM结构被脚本频繁地改变。这将使整个渲染过程或多或少出现终止并重新开始，同事伴随着HTML被解析到DOM，样式计算，重排和重绘。\n\n![渲染过程](https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2017/05/browser-diagram-full-2.png)\n\n## 标准\n\n不是每一个浏览器都用同样的方式去解析HTML，CSS和JavaScript。不同的浏览器渲染出来的页面可能不同：小到局部样式不同，大到整个网站可能只能在一个浏览器运行而其他浏览器都不行。目前，在现代网络中，大多数网站都能正常运行在你使用的浏览器中，不管你使用的是哪个浏览器。这些浏览器是怎么实现这么高的一致性的呢？\n\n网站代码的格式，和控制代码如何被解析成可见的交互页面的规则，都是被大家都同意的文件定义的，这个文件就叫做标准（规范）。这些标准都是由一个委员会制定，这个委员会由浏览器厂商的代表、web开发者、设计师和这个行业的其他人员组成的。他们一起决定一个浏览器引擎的精确行为：给一段特定的代码，完成对应的展示。这里有[HTML，CSS和JavaScript的规范](https://developer.mozilla.org/en-US/docs/Web_Standards)以及图片、视频、音频的数据格式等等。\n\n为什么这个很重要？开发一个全新的浏览器引擎是可行的，只要你确保你的引擎遵循了标准，这个引擎会以和其他所有浏览器一样的方式去为网络上数以十亿计的网页做绘制渲染工作。这意味着让网站正常工作的秘诀不属于任何一个浏览器专属。标准允许用户去选择能满足他们需求的浏览器。\n\n## 摩尔定律不再\n\n当恐龙漫步在地球上而且人们只有桌面电脑，电脑只会变得更快更强大是一个相对安全的假设。这个想法基于摩尔定律，摩尔定律描述的是一种现象：组件的密度会每两年增加一倍。令人难以置信的是，这个现象在21世纪一直存在，有些人甚至认为，在最新的研究中仍然是正确的。那么为什么在最近的10年里普通电脑的速度趋于平稳？\n\n用户去购买电脑的时候，处理速度不是用户看重的唯一特性。速度快的电脑会非常耗能，发热严重，而且非常贵。有时候，人们需要一款续航很好的电脑。有时候，他们需要一款微型的触控电脑，可以放进裤兜里，而且一整天都不用充电。先进的计算技术使得这个成为可能（令人惊讶！），但是是以原始速度为代价的。就像汽车一样，不可能越快越高效，电脑也是一样的。解决方案就是在一个CPU芯片上集成很多个“电脑”（核心）。一个智能手机拥有4个低性能的核心是很常见的。\n\n不幸的是，浏览器的历史设计对上行速度做了假设。而且，要编写能够同时利用CPU的多核心的代码是很复杂的。如此一来，在这个到处都是小电脑的时代，我们要如何创造一个快速、高效的浏览器呢？\n\n我们有一些想法。\n\n在接下来的几个月里，我们一起来仔细看看Firefox上的一些新的变化，以及Firefox是如何充分利用硬件的优势呈现一个快速稳定的浏览器来点亮网站的吧。\n\n前进！\n\n以上。我第一完整地翻译一篇英文技术文章，文中有诸多生硬拗口甚至难以理解的地方。请看官们帮忙指正，勿喷。\n","source":"_posts/2017-05-17-Quantum聚焦：什么是浏览器引擎.md","raw":"---\ntitle: Quantum聚焦：什么是浏览器引擎？\ndate: 2017-05-17 19:58:52\ntags:\n- 浏览器\n- 渲染引擎原理\n- Gecko\n- Firefox\ncategories:\n- 翻译\n---\n\n>[原文地址](https://hacks.mozilla.org/2017/05/quantum-up-close-what-is-a-browser-engine/)\n\n2016年10月的时候我们宣布了Quantum项目--我们计划开发下一代浏览器引擎。现在该项目正在顺利进行。事实上我们已经将Quantum项目的阶段性成果应用到了Firefox 53中。\n\n但是，我们意识到对于不开发浏览器的人（其实是大多数人）来说，要理解我们做的一些改变为什么对Firefox如此重要是很困难的。毕竟我们做的大多数改变对用户来说是不可见的。\n\n<!-- more -->\n\n考虑到这一点，我们开始撰写一系列的博客文章，使大家对我们在Quantum项目中所做的事情有一个更深层的理解。我们希望这一系列的文章能够让你们更好地理解Firefox是如何工作的，同时了解Firefox采用的方式是构建下一代浏览器引擎以更好地利用现代计算机硬件。\n\n作为这一系列文章的开始，我们认为解释Quantum正在改变的基础原理是最合适的。\n\n什么是浏览器引擎，它是怎么工作？\n\n那么要从哪里开始呢？我们认为应该从头开始。\n\n浏览器就是一个软件，它的功能是加载文件（通常从远程服务器）并且在本地显示出来，允许用户和页面交互。\n\nQuantum是我们Mozilla正在进行的一个项目，旨在大规模升级Firefox的一部分，这部分的功能就是基于远程文件计算出要呈现给用户的东西。这部分的专业术语叫“浏览器引擎”。如果没有这部分，你所看到的将会是一行行代码，而不是现在所看到的页面。Firefox的浏览器引擎名字叫Gecko。\n\n简单来说，可以把浏览器引擎比喻成一个黑盒子，就像电视盒子，这个黑盒子从网络接收数据然后把数据计算成要显示在屏幕上的图像。今天的问题是：怎么做到的？把数据计算成我们看到的网页经历了哪些步骤？\n\n![黑盒子](https://hacks.mozilla.org/files/2017/05/black-box.png)\n\n组成一个网页的数据包含很多东西，但是基本上可以分解成3个部分：\n\n- 表示网页结构的代码\n- 提供样式的代码：网页结构的视觉外观\n- 浏览器行为的脚本代码：对用户的行为进行计算并作出反馈，对网页的结构和样式作出改变\n\n浏览器引擎把结构和样式结合在一起，用来绘制显示在屏幕上的网页，并且计算出哪些部分是可以进行交互的。\n\n这一切都始于结构。当你要求浏览器加载一个网站，你会给它一个地址。这个地址对应的是另一台电脑，这台电脑收到请求就会发送数据给你的浏览器。发送数据给浏览器的细节在[另一篇文章](https://developer.mozilla.org/en-US/docs/Web/HTTP)做了详述。总之最后浏览器拿到了数据。数据以HTML的格式返回，用于描述网页的结构。浏览器又是怎么理解HTML的呢？\n\n浏览器引擎包含了一系列特殊的代码，叫做解析器，它可以把浏览器存在内存中的数据从一种格式转换成另一种格式。HTML解析器专门负责解析HTML数据，例如：\n\n```html\n<section>\n <h1 class=\"main-title\">Hello!</h1>\n <img src=\"http://example.com/image.png\">\n</section>\n```\n\n解析过程描述如下：\n\n```\n好的，这是个section。包含在section里面的有一个个h1的标题，\n标题的内容为'Hello!'；还有一张图片也包含在section里面，图片\n的数据源为'http://example.com/image.png'。\n```\n\n内存中的网页结构叫做[文档对象模型](https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model/Introduction)或者DOM。和一长串的文字形式相反，DOM表示为最终网页的元素组成的一棵树：元素包含哪些属性，哪些元素包含在其他元素中。\n\n![DOM](https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2017/05/html-diagra.png)\n\n除了描述页面的结构，HTML里面也包含了样式和脚本的资源地址。当浏览器找到这些地址，就会去请求对应的地址并加载对应的数据。然后这些数据被传给专门处理这些数据格式的解析器。如果脚本被找到了，在HTML解析完成之前，这些脚本可以改变页面的结构和样式。作为样式格式，CSS在浏览器引擎中扮演下一个角色。\n\n## 样式\n\nCSS是一种编程语言，开发者可以用这种编程语言去定义页面中特定元素的外观。CSS的全称是\"Cascading Style Sheets\"（层叠样式表），之所以这样命名，是因为它允许很多样式指令集合，在这些样式指令集中，新的指令可以覆盖旧的或者默认的指令（叫做层叠）。下面是一小段CSS示例：\n\n```CSS\nsection {\n  font-size: 15px;\n  color: #333;\n  border: 1px solid blue;\n}\nh1 {\n  font-size: 2em;\n}\n.main-title {\n  font-size: 3em;\n}\nimg {\n  width: 100%;\n}\n```\n\nCSS被大量分解成被称为规则的组合，这些组合都是由两部分组成。第一部分是选择器。选择器表示DOM中需要更改样式的元素（还记得上面的描述吗？）。另一部分是一个列表，包含着将要应用到选择器对应元素的样式声明列表。浏览器引擎包含了一个子引擎，名字叫样式引擎，它的工作就是将CSS代码指定的样式应用到HTML解析器解析出来的DOM中去。\n\n![样式引擎](https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2017/05/style-engine-1.png)\n\n举例来说，在上面那段CSS代码中，我们声明的一些样式规则，目标选择器是“section”，这个选择器会和DOM中的同名元素匹配。之后样式说明会逐一应用到DOM中的每一个元素。最终DOM中的每一个元素都会被加上样式，我们把这种状态叫做元素的计算样式。当多种样式规则都被应用到同一个元素上的时候，那些排在后面的会覆盖掉排在前面的，定义的样式声明多的会覆盖样式声明少的。可以把样式表想象成临摹用的半透明的薄纸，每一层可以覆盖前面一层，但是同时又能够透过去看到上面一层。\n\n一旦浏览器引擎拿到了计算样式，就会马上用起来。DOM和计算样式都会传给一个布局引擎，这个布局引擎可以计算将要展示页面的窗口的尺寸。布局引擎采用了一系列算法，画一个盒子，然后拿一个元素，把元素的内容以及应用在该元素上的样式依照规则放进盒子里。\n\n![布局引擎](https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2017/05/layout-time.png)\n\n布局完成之后要做的就是把页面转换成最终你看到的样子。这个过程被称为渲染，它是所有前面进行的步骤的最终结合。每个被布局定义好的盒子都被绘制好，包括来自DOM的所有内容和来自CSS的所有样式。现在，用户看到了通过对代码重新组装的页面。\n\n以上就是发生的一切。\n\n当用户滚动页面的时候，我们会重绘，然后呈现页面中未被显示在窗口中的新的部分。然而，事实证明用户喜欢滚动！浏览器引擎确信它将会被要求显示初始窗口（我们称为视口）以外的内容。很多现代浏览器深知这一点，因此一开始就会绘制更多的可见内容。当用户滚动的时候，他们想看到的部分其实早已经绘制好并且等着了。结果使滚动变得快速而又平滑。这个技术是合成的基础，一种用于减少页面绘制请求次数的技术手段。\n\n另外，有时候我们需要重绘当前屏幕上的一部分。也许用户正在观看一个60帧每秒的视频。也许页面上有一张幻灯片或者动画列表。浏览器能够检测到到页面的一部分会发生移动或者更新，并且会创建一个控制该部分内容的层，而不是重绘整个页面。一个页面可以有很多层，一层覆盖另一层。其中的某一层可以改变位置，滑动，透明，后置或者前置于另一个不需要重绘任何东西的层。非常方便不是吗？\n\n有时候一个脚本或者一个动画会改变元素的样式。当这个发生的时候，样式引擎需要重新计算这个元素的样式（有可能是页面中更多的元素），重新布局（做一个重排），然后重绘这个页面。这些计算将会花费很多时间，但是只要这种事情只是偶尔发生，那么对用户体验来说不会产生消极的影响。\n\n在现代网页应用中，DOM结构被脚本频繁地改变。这将使整个渲染过程或多或少出现终止并重新开始，同事伴随着HTML被解析到DOM，样式计算，重排和重绘。\n\n![渲染过程](https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2017/05/browser-diagram-full-2.png)\n\n## 标准\n\n不是每一个浏览器都用同样的方式去解析HTML，CSS和JavaScript。不同的浏览器渲染出来的页面可能不同：小到局部样式不同，大到整个网站可能只能在一个浏览器运行而其他浏览器都不行。目前，在现代网络中，大多数网站都能正常运行在你使用的浏览器中，不管你使用的是哪个浏览器。这些浏览器是怎么实现这么高的一致性的呢？\n\n网站代码的格式，和控制代码如何被解析成可见的交互页面的规则，都是被大家都同意的文件定义的，这个文件就叫做标准（规范）。这些标准都是由一个委员会制定，这个委员会由浏览器厂商的代表、web开发者、设计师和这个行业的其他人员组成的。他们一起决定一个浏览器引擎的精确行为：给一段特定的代码，完成对应的展示。这里有[HTML，CSS和JavaScript的规范](https://developer.mozilla.org/en-US/docs/Web_Standards)以及图片、视频、音频的数据格式等等。\n\n为什么这个很重要？开发一个全新的浏览器引擎是可行的，只要你确保你的引擎遵循了标准，这个引擎会以和其他所有浏览器一样的方式去为网络上数以十亿计的网页做绘制渲染工作。这意味着让网站正常工作的秘诀不属于任何一个浏览器专属。标准允许用户去选择能满足他们需求的浏览器。\n\n## 摩尔定律不再\n\n当恐龙漫步在地球上而且人们只有桌面电脑，电脑只会变得更快更强大是一个相对安全的假设。这个想法基于摩尔定律，摩尔定律描述的是一种现象：组件的密度会每两年增加一倍。令人难以置信的是，这个现象在21世纪一直存在，有些人甚至认为，在最新的研究中仍然是正确的。那么为什么在最近的10年里普通电脑的速度趋于平稳？\n\n用户去购买电脑的时候，处理速度不是用户看重的唯一特性。速度快的电脑会非常耗能，发热严重，而且非常贵。有时候，人们需要一款续航很好的电脑。有时候，他们需要一款微型的触控电脑，可以放进裤兜里，而且一整天都不用充电。先进的计算技术使得这个成为可能（令人惊讶！），但是是以原始速度为代价的。就像汽车一样，不可能越快越高效，电脑也是一样的。解决方案就是在一个CPU芯片上集成很多个“电脑”（核心）。一个智能手机拥有4个低性能的核心是很常见的。\n\n不幸的是，浏览器的历史设计对上行速度做了假设。而且，要编写能够同时利用CPU的多核心的代码是很复杂的。如此一来，在这个到处都是小电脑的时代，我们要如何创造一个快速、高效的浏览器呢？\n\n我们有一些想法。\n\n在接下来的几个月里，我们一起来仔细看看Firefox上的一些新的变化，以及Firefox是如何充分利用硬件的优势呈现一个快速稳定的浏览器来点亮网站的吧。\n\n前进！\n\n以上。我第一完整地翻译一篇英文技术文章，文中有诸多生硬拗口甚至难以理解的地方。请看官们帮忙指正，勿喷。\n","slug":"Quantum聚焦：什么是浏览器引擎","published":1,"updated":"2018-03-27T13:52:33.769Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjskilapo0051g9zb8frxcdf8","content":"<blockquote>\n<p><a href=\"https://hacks.mozilla.org/2017/05/quantum-up-close-what-is-a-browser-engine/\" target=\"_blank\" rel=\"noopener\">原文地址</a></p>\n</blockquote>\n<p>2016年10月的时候我们宣布了Quantum项目–我们计划开发下一代浏览器引擎。现在该项目正在顺利进行。事实上我们已经将Quantum项目的阶段性成果应用到了Firefox 53中。</p>\n<p>但是，我们意识到对于不开发浏览器的人（其实是大多数人）来说，要理解我们做的一些改变为什么对Firefox如此重要是很困难的。毕竟我们做的大多数改变对用户来说是不可见的。</p>\n<a id=\"more\"></a>\n<p>考虑到这一点，我们开始撰写一系列的博客文章，使大家对我们在Quantum项目中所做的事情有一个更深层的理解。我们希望这一系列的文章能够让你们更好地理解Firefox是如何工作的，同时了解Firefox采用的方式是构建下一代浏览器引擎以更好地利用现代计算机硬件。</p>\n<p>作为这一系列文章的开始，我们认为解释Quantum正在改变的基础原理是最合适的。</p>\n<p>什么是浏览器引擎，它是怎么工作？</p>\n<p>那么要从哪里开始呢？我们认为应该从头开始。</p>\n<p>浏览器就是一个软件，它的功能是加载文件（通常从远程服务器）并且在本地显示出来，允许用户和页面交互。</p>\n<p>Quantum是我们Mozilla正在进行的一个项目，旨在大规模升级Firefox的一部分，这部分的功能就是基于远程文件计算出要呈现给用户的东西。这部分的专业术语叫“浏览器引擎”。如果没有这部分，你所看到的将会是一行行代码，而不是现在所看到的页面。Firefox的浏览器引擎名字叫Gecko。</p>\n<p>简单来说，可以把浏览器引擎比喻成一个黑盒子，就像电视盒子，这个黑盒子从网络接收数据然后把数据计算成要显示在屏幕上的图像。今天的问题是：怎么做到的？把数据计算成我们看到的网页经历了哪些步骤？</p>\n<p><img src=\"https://hacks.mozilla.org/files/2017/05/black-box.png\" alt=\"黑盒子\"></p>\n<p>组成一个网页的数据包含很多东西，但是基本上可以分解成3个部分：</p>\n<ul>\n<li>表示网页结构的代码</li>\n<li>提供样式的代码：网页结构的视觉外观</li>\n<li>浏览器行为的脚本代码：对用户的行为进行计算并作出反馈，对网页的结构和样式作出改变</li>\n</ul>\n<p>浏览器引擎把结构和样式结合在一起，用来绘制显示在屏幕上的网页，并且计算出哪些部分是可以进行交互的。</p>\n<p>这一切都始于结构。当你要求浏览器加载一个网站，你会给它一个地址。这个地址对应的是另一台电脑，这台电脑收到请求就会发送数据给你的浏览器。发送数据给浏览器的细节在<a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP\" target=\"_blank\" rel=\"noopener\">另一篇文章</a>做了详述。总之最后浏览器拿到了数据。数据以HTML的格式返回，用于描述网页的结构。浏览器又是怎么理解HTML的呢？</p>\n<p>浏览器引擎包含了一系列特殊的代码，叫做解析器，它可以把浏览器存在内存中的数据从一种格式转换成另一种格式。HTML解析器专门负责解析HTML数据，例如：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">section</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">class</span>=<span class=\"string\">\"main-title\"</span>&gt;</span>Hello!<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"http://example.com/image.png\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">section</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>解析过程描述如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">好的，这是个section。包含在section里面的有一个个h1的标题，</span><br><span class=\"line\">标题的内容为&apos;Hello!&apos;；还有一张图片也包含在section里面，图片</span><br><span class=\"line\">的数据源为&apos;http://example.com/image.png&apos;。</span><br></pre></td></tr></table></figure>\n<p>内存中的网页结构叫做<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model/Introduction\" target=\"_blank\" rel=\"noopener\">文档对象模型</a>或者DOM。和一长串的文字形式相反，DOM表示为最终网页的元素组成的一棵树：元素包含哪些属性，哪些元素包含在其他元素中。</p>\n<p><img src=\"https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2017/05/html-diagra.png\" alt=\"DOM\"></p>\n<p>除了描述页面的结构，HTML里面也包含了样式和脚本的资源地址。当浏览器找到这些地址，就会去请求对应的地址并加载对应的数据。然后这些数据被传给专门处理这些数据格式的解析器。如果脚本被找到了，在HTML解析完成之前，这些脚本可以改变页面的结构和样式。作为样式格式，CSS在浏览器引擎中扮演下一个角色。</p>\n<h2 id=\"样式\"><a href=\"#样式\" class=\"headerlink\" title=\"样式\"></a>样式</h2><p>CSS是一种编程语言，开发者可以用这种编程语言去定义页面中特定元素的外观。CSS的全称是”Cascading Style Sheets”（层叠样式表），之所以这样命名，是因为它允许很多样式指令集合，在这些样式指令集中，新的指令可以覆盖旧的或者默认的指令（叫做层叠）。下面是一小段CSS示例：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">section</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">15px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#333</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid blue;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">h1</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">2em</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.main-title</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">3em</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">img</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>CSS被大量分解成被称为规则的组合，这些组合都是由两部分组成。第一部分是选择器。选择器表示DOM中需要更改样式的元素（还记得上面的描述吗？）。另一部分是一个列表，包含着将要应用到选择器对应元素的样式声明列表。浏览器引擎包含了一个子引擎，名字叫样式引擎，它的工作就是将CSS代码指定的样式应用到HTML解析器解析出来的DOM中去。</p>\n<p><img src=\"https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2017/05/style-engine-1.png\" alt=\"样式引擎\"></p>\n<p>举例来说，在上面那段CSS代码中，我们声明的一些样式规则，目标选择器是“section”，这个选择器会和DOM中的同名元素匹配。之后样式说明会逐一应用到DOM中的每一个元素。最终DOM中的每一个元素都会被加上样式，我们把这种状态叫做元素的计算样式。当多种样式规则都被应用到同一个元素上的时候，那些排在后面的会覆盖掉排在前面的，定义的样式声明多的会覆盖样式声明少的。可以把样式表想象成临摹用的半透明的薄纸，每一层可以覆盖前面一层，但是同时又能够透过去看到上面一层。</p>\n<p>一旦浏览器引擎拿到了计算样式，就会马上用起来。DOM和计算样式都会传给一个布局引擎，这个布局引擎可以计算将要展示页面的窗口的尺寸。布局引擎采用了一系列算法，画一个盒子，然后拿一个元素，把元素的内容以及应用在该元素上的样式依照规则放进盒子里。</p>\n<p><img src=\"https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2017/05/layout-time.png\" alt=\"布局引擎\"></p>\n<p>布局完成之后要做的就是把页面转换成最终你看到的样子。这个过程被称为渲染，它是所有前面进行的步骤的最终结合。每个被布局定义好的盒子都被绘制好，包括来自DOM的所有内容和来自CSS的所有样式。现在，用户看到了通过对代码重新组装的页面。</p>\n<p>以上就是发生的一切。</p>\n<p>当用户滚动页面的时候，我们会重绘，然后呈现页面中未被显示在窗口中的新的部分。然而，事实证明用户喜欢滚动！浏览器引擎确信它将会被要求显示初始窗口（我们称为视口）以外的内容。很多现代浏览器深知这一点，因此一开始就会绘制更多的可见内容。当用户滚动的时候，他们想看到的部分其实早已经绘制好并且等着了。结果使滚动变得快速而又平滑。这个技术是合成的基础，一种用于减少页面绘制请求次数的技术手段。</p>\n<p>另外，有时候我们需要重绘当前屏幕上的一部分。也许用户正在观看一个60帧每秒的视频。也许页面上有一张幻灯片或者动画列表。浏览器能够检测到到页面的一部分会发生移动或者更新，并且会创建一个控制该部分内容的层，而不是重绘整个页面。一个页面可以有很多层，一层覆盖另一层。其中的某一层可以改变位置，滑动，透明，后置或者前置于另一个不需要重绘任何东西的层。非常方便不是吗？</p>\n<p>有时候一个脚本或者一个动画会改变元素的样式。当这个发生的时候，样式引擎需要重新计算这个元素的样式（有可能是页面中更多的元素），重新布局（做一个重排），然后重绘这个页面。这些计算将会花费很多时间，但是只要这种事情只是偶尔发生，那么对用户体验来说不会产生消极的影响。</p>\n<p>在现代网页应用中，DOM结构被脚本频繁地改变。这将使整个渲染过程或多或少出现终止并重新开始，同事伴随着HTML被解析到DOM，样式计算，重排和重绘。</p>\n<p><img src=\"https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2017/05/browser-diagram-full-2.png\" alt=\"渲染过程\"></p>\n<h2 id=\"标准\"><a href=\"#标准\" class=\"headerlink\" title=\"标准\"></a>标准</h2><p>不是每一个浏览器都用同样的方式去解析HTML，CSS和JavaScript。不同的浏览器渲染出来的页面可能不同：小到局部样式不同，大到整个网站可能只能在一个浏览器运行而其他浏览器都不行。目前，在现代网络中，大多数网站都能正常运行在你使用的浏览器中，不管你使用的是哪个浏览器。这些浏览器是怎么实现这么高的一致性的呢？</p>\n<p>网站代码的格式，和控制代码如何被解析成可见的交互页面的规则，都是被大家都同意的文件定义的，这个文件就叫做标准（规范）。这些标准都是由一个委员会制定，这个委员会由浏览器厂商的代表、web开发者、设计师和这个行业的其他人员组成的。他们一起决定一个浏览器引擎的精确行为：给一段特定的代码，完成对应的展示。这里有<a href=\"https://developer.mozilla.org/en-US/docs/Web_Standards\" target=\"_blank\" rel=\"noopener\">HTML，CSS和JavaScript的规范</a>以及图片、视频、音频的数据格式等等。</p>\n<p>为什么这个很重要？开发一个全新的浏览器引擎是可行的，只要你确保你的引擎遵循了标准，这个引擎会以和其他所有浏览器一样的方式去为网络上数以十亿计的网页做绘制渲染工作。这意味着让网站正常工作的秘诀不属于任何一个浏览器专属。标准允许用户去选择能满足他们需求的浏览器。</p>\n<h2 id=\"摩尔定律不再\"><a href=\"#摩尔定律不再\" class=\"headerlink\" title=\"摩尔定律不再\"></a>摩尔定律不再</h2><p>当恐龙漫步在地球上而且人们只有桌面电脑，电脑只会变得更快更强大是一个相对安全的假设。这个想法基于摩尔定律，摩尔定律描述的是一种现象：组件的密度会每两年增加一倍。令人难以置信的是，这个现象在21世纪一直存在，有些人甚至认为，在最新的研究中仍然是正确的。那么为什么在最近的10年里普通电脑的速度趋于平稳？</p>\n<p>用户去购买电脑的时候，处理速度不是用户看重的唯一特性。速度快的电脑会非常耗能，发热严重，而且非常贵。有时候，人们需要一款续航很好的电脑。有时候，他们需要一款微型的触控电脑，可以放进裤兜里，而且一整天都不用充电。先进的计算技术使得这个成为可能（令人惊讶！），但是是以原始速度为代价的。就像汽车一样，不可能越快越高效，电脑也是一样的。解决方案就是在一个CPU芯片上集成很多个“电脑”（核心）。一个智能手机拥有4个低性能的核心是很常见的。</p>\n<p>不幸的是，浏览器的历史设计对上行速度做了假设。而且，要编写能够同时利用CPU的多核心的代码是很复杂的。如此一来，在这个到处都是小电脑的时代，我们要如何创造一个快速、高效的浏览器呢？</p>\n<p>我们有一些想法。</p>\n<p>在接下来的几个月里，我们一起来仔细看看Firefox上的一些新的变化，以及Firefox是如何充分利用硬件的优势呈现一个快速稳定的浏览器来点亮网站的吧。</p>\n<p>前进！</p>\n<p>以上。我第一完整地翻译一篇英文技术文章，文中有诸多生硬拗口甚至难以理解的地方。请看官们帮忙指正，勿喷。</p>\n","site":{"data":{"next":{"favicon":"/favicon.ico","keywords":"Hexo, NexT","rss":null,"since":2016,"authoricon":"heart","copyright":true,"canonical":true,"seo":true,"index_with_subtitle":false,"menu":{"home":"/","categories":"/categories/","archives":"/archives/","tags":"/tags/","about":"/about/"},"menu_icons":{"enable":true,"home":"home","about":"user","categories":"th","schedule":"calendar","tags":"tags","archives":"archive","sitemap":"sitemap","commonweal":"heartbeat"},"scheme":"Mist","social":{"Github":"https://github.com/ricosmall"},"social_icons":{"enable":true,"GitHub":"github","Twitter":"twitter","Weibo":"weibo"},"avatar":"/uploads/avatar.png","toc":{"enable":true,"number":true,"wrap":false},"sidebar":{"position":"left","display":"post","offset":12,"offset_float":0,"b2t":false,"scrollpercent":false,"onmobile":false},"scroll_to_more":true,"save_scroll":false,"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"post_meta":{"item_text":true,"created_at":true,"updated_at":false,"categories":true},"post_wordcount":{"item_text":true,"wordcount":false,"min2read":false,"separated_meta":true},"post_copyright":{"enable":false,"license":"CC BY-NC-SA 3.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/3.0/"},"custom_logo":{"enabled":false,"image":null},"highlight_theme":"night bright","font":{"enable":true,"host":null,"global":{"external":true,"family":"Lato"},"headings":{"external":true,"family":null},"posts":{"external":true,"family":null},"logo":{"external":true,"family":null,"size":null},"codes":{"external":true,"family":"Menlo, Monospace","size":null}},"mathjax":{"enable":true,"per_page":false,"cdn":"//cdn.bootcss.com/mathjax/2.7.1/latest.js?config=TeX-AMS-MML_HTMLorMML"},"han":false,"disqus":{"enable":false,"shortname":"ricosmall","count":false},"changyan":{"enable":false,"appid":null,"appkey":null},"duoshuo_info":{"ua_enable":true,"admin_enable":false,"user_id":0},"facebook_sdk":{"enable":false,"app_id":null,"fb_admin":null,"like_button":null,"webmaster":null},"facebook_comments_plugin":{"enable":false,"num_of_posts":10,"width":"100%","scheme":"light"},"vkontakte_api":{"enable":false,"app_id":null,"like":true,"comments":true,"num_of_posts":10},"rating":{"enable":false,"id":null,"color":"fc6423"},"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null},"busuanzi_count":{"enable":true,"site_uv":true,"site_uv_header":"<i class=\"fa fa-user\"></i>访问人数","site_uv_footer":null,"site_pv":true,"site_pv_header":"<i class=\"fa fa-eye\"></i>总访问量","site_pv_footer":"次","page_pv":true,"page_pv_header":"<i class=\"fa fa-file-o\"></i>浏览","page_pv_footer":"次"},"baidu_push":false,"calendar":{"enable":false,"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"timeZone":null,"showDeleted":false,"singleEvents":true,"maxResults":250},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1},"exturl":false,"use_motion":true,"fancybox":true,"pace":false,"pace_theme":"pace-theme-minimal","canvas_nest":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false,"canvas_ribbon":false,"vendors":{"_internal":"lib","jquery":null,"fancybox":null,"fancybox_css":null,"fastclick":null,"lazyload":null,"velocity":null,"velocity_ui":null,"ua_parser":null,"fontawesome":null,"algolia_instant_js":null,"algolia_instant_css":null,"pace":null,"pace_css":null,"canvas_nest":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_ribbon":null,"han":null},"css":"css","js":"js","images":"images","version":"5.1.1"}}},"excerpt":"<blockquote>\n<p><a href=\"https://hacks.mozilla.org/2017/05/quantum-up-close-what-is-a-browser-engine/\" target=\"_blank\" rel=\"noopener\">原文地址</a></p>\n</blockquote>\n<p>2016年10月的时候我们宣布了Quantum项目–我们计划开发下一代浏览器引擎。现在该项目正在顺利进行。事实上我们已经将Quantum项目的阶段性成果应用到了Firefox 53中。</p>\n<p>但是，我们意识到对于不开发浏览器的人（其实是大多数人）来说，要理解我们做的一些改变为什么对Firefox如此重要是很困难的。毕竟我们做的大多数改变对用户来说是不可见的。</p>","more":"<p>考虑到这一点，我们开始撰写一系列的博客文章，使大家对我们在Quantum项目中所做的事情有一个更深层的理解。我们希望这一系列的文章能够让你们更好地理解Firefox是如何工作的，同时了解Firefox采用的方式是构建下一代浏览器引擎以更好地利用现代计算机硬件。</p>\n<p>作为这一系列文章的开始，我们认为解释Quantum正在改变的基础原理是最合适的。</p>\n<p>什么是浏览器引擎，它是怎么工作？</p>\n<p>那么要从哪里开始呢？我们认为应该从头开始。</p>\n<p>浏览器就是一个软件，它的功能是加载文件（通常从远程服务器）并且在本地显示出来，允许用户和页面交互。</p>\n<p>Quantum是我们Mozilla正在进行的一个项目，旨在大规模升级Firefox的一部分，这部分的功能就是基于远程文件计算出要呈现给用户的东西。这部分的专业术语叫“浏览器引擎”。如果没有这部分，你所看到的将会是一行行代码，而不是现在所看到的页面。Firefox的浏览器引擎名字叫Gecko。</p>\n<p>简单来说，可以把浏览器引擎比喻成一个黑盒子，就像电视盒子，这个黑盒子从网络接收数据然后把数据计算成要显示在屏幕上的图像。今天的问题是：怎么做到的？把数据计算成我们看到的网页经历了哪些步骤？</p>\n<p><img src=\"https://hacks.mozilla.org/files/2017/05/black-box.png\" alt=\"黑盒子\"></p>\n<p>组成一个网页的数据包含很多东西，但是基本上可以分解成3个部分：</p>\n<ul>\n<li>表示网页结构的代码</li>\n<li>提供样式的代码：网页结构的视觉外观</li>\n<li>浏览器行为的脚本代码：对用户的行为进行计算并作出反馈，对网页的结构和样式作出改变</li>\n</ul>\n<p>浏览器引擎把结构和样式结合在一起，用来绘制显示在屏幕上的网页，并且计算出哪些部分是可以进行交互的。</p>\n<p>这一切都始于结构。当你要求浏览器加载一个网站，你会给它一个地址。这个地址对应的是另一台电脑，这台电脑收到请求就会发送数据给你的浏览器。发送数据给浏览器的细节在<a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP\" target=\"_blank\" rel=\"noopener\">另一篇文章</a>做了详述。总之最后浏览器拿到了数据。数据以HTML的格式返回，用于描述网页的结构。浏览器又是怎么理解HTML的呢？</p>\n<p>浏览器引擎包含了一系列特殊的代码，叫做解析器，它可以把浏览器存在内存中的数据从一种格式转换成另一种格式。HTML解析器专门负责解析HTML数据，例如：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">section</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">class</span>=<span class=\"string\">\"main-title\"</span>&gt;</span>Hello!<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"http://example.com/image.png\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">section</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>解析过程描述如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">好的，这是个section。包含在section里面的有一个个h1的标题，</span><br><span class=\"line\">标题的内容为&apos;Hello!&apos;；还有一张图片也包含在section里面，图片</span><br><span class=\"line\">的数据源为&apos;http://example.com/image.png&apos;。</span><br></pre></td></tr></table></figure>\n<p>内存中的网页结构叫做<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model/Introduction\" target=\"_blank\" rel=\"noopener\">文档对象模型</a>或者DOM。和一长串的文字形式相反，DOM表示为最终网页的元素组成的一棵树：元素包含哪些属性，哪些元素包含在其他元素中。</p>\n<p><img src=\"https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2017/05/html-diagra.png\" alt=\"DOM\"></p>\n<p>除了描述页面的结构，HTML里面也包含了样式和脚本的资源地址。当浏览器找到这些地址，就会去请求对应的地址并加载对应的数据。然后这些数据被传给专门处理这些数据格式的解析器。如果脚本被找到了，在HTML解析完成之前，这些脚本可以改变页面的结构和样式。作为样式格式，CSS在浏览器引擎中扮演下一个角色。</p>\n<h2 id=\"样式\"><a href=\"#样式\" class=\"headerlink\" title=\"样式\"></a>样式</h2><p>CSS是一种编程语言，开发者可以用这种编程语言去定义页面中特定元素的外观。CSS的全称是”Cascading Style Sheets”（层叠样式表），之所以这样命名，是因为它允许很多样式指令集合，在这些样式指令集中，新的指令可以覆盖旧的或者默认的指令（叫做层叠）。下面是一小段CSS示例：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">section</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">15px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#333</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid blue;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">h1</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">2em</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.main-title</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">3em</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">img</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>CSS被大量分解成被称为规则的组合，这些组合都是由两部分组成。第一部分是选择器。选择器表示DOM中需要更改样式的元素（还记得上面的描述吗？）。另一部分是一个列表，包含着将要应用到选择器对应元素的样式声明列表。浏览器引擎包含了一个子引擎，名字叫样式引擎，它的工作就是将CSS代码指定的样式应用到HTML解析器解析出来的DOM中去。</p>\n<p><img src=\"https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2017/05/style-engine-1.png\" alt=\"样式引擎\"></p>\n<p>举例来说，在上面那段CSS代码中，我们声明的一些样式规则，目标选择器是“section”，这个选择器会和DOM中的同名元素匹配。之后样式说明会逐一应用到DOM中的每一个元素。最终DOM中的每一个元素都会被加上样式，我们把这种状态叫做元素的计算样式。当多种样式规则都被应用到同一个元素上的时候，那些排在后面的会覆盖掉排在前面的，定义的样式声明多的会覆盖样式声明少的。可以把样式表想象成临摹用的半透明的薄纸，每一层可以覆盖前面一层，但是同时又能够透过去看到上面一层。</p>\n<p>一旦浏览器引擎拿到了计算样式，就会马上用起来。DOM和计算样式都会传给一个布局引擎，这个布局引擎可以计算将要展示页面的窗口的尺寸。布局引擎采用了一系列算法，画一个盒子，然后拿一个元素，把元素的内容以及应用在该元素上的样式依照规则放进盒子里。</p>\n<p><img src=\"https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2017/05/layout-time.png\" alt=\"布局引擎\"></p>\n<p>布局完成之后要做的就是把页面转换成最终你看到的样子。这个过程被称为渲染，它是所有前面进行的步骤的最终结合。每个被布局定义好的盒子都被绘制好，包括来自DOM的所有内容和来自CSS的所有样式。现在，用户看到了通过对代码重新组装的页面。</p>\n<p>以上就是发生的一切。</p>\n<p>当用户滚动页面的时候，我们会重绘，然后呈现页面中未被显示在窗口中的新的部分。然而，事实证明用户喜欢滚动！浏览器引擎确信它将会被要求显示初始窗口（我们称为视口）以外的内容。很多现代浏览器深知这一点，因此一开始就会绘制更多的可见内容。当用户滚动的时候，他们想看到的部分其实早已经绘制好并且等着了。结果使滚动变得快速而又平滑。这个技术是合成的基础，一种用于减少页面绘制请求次数的技术手段。</p>\n<p>另外，有时候我们需要重绘当前屏幕上的一部分。也许用户正在观看一个60帧每秒的视频。也许页面上有一张幻灯片或者动画列表。浏览器能够检测到到页面的一部分会发生移动或者更新，并且会创建一个控制该部分内容的层，而不是重绘整个页面。一个页面可以有很多层，一层覆盖另一层。其中的某一层可以改变位置，滑动，透明，后置或者前置于另一个不需要重绘任何东西的层。非常方便不是吗？</p>\n<p>有时候一个脚本或者一个动画会改变元素的样式。当这个发生的时候，样式引擎需要重新计算这个元素的样式（有可能是页面中更多的元素），重新布局（做一个重排），然后重绘这个页面。这些计算将会花费很多时间，但是只要这种事情只是偶尔发生，那么对用户体验来说不会产生消极的影响。</p>\n<p>在现代网页应用中，DOM结构被脚本频繁地改变。这将使整个渲染过程或多或少出现终止并重新开始，同事伴随着HTML被解析到DOM，样式计算，重排和重绘。</p>\n<p><img src=\"https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2017/05/browser-diagram-full-2.png\" alt=\"渲染过程\"></p>\n<h2 id=\"标准\"><a href=\"#标准\" class=\"headerlink\" title=\"标准\"></a>标准</h2><p>不是每一个浏览器都用同样的方式去解析HTML，CSS和JavaScript。不同的浏览器渲染出来的页面可能不同：小到局部样式不同，大到整个网站可能只能在一个浏览器运行而其他浏览器都不行。目前，在现代网络中，大多数网站都能正常运行在你使用的浏览器中，不管你使用的是哪个浏览器。这些浏览器是怎么实现这么高的一致性的呢？</p>\n<p>网站代码的格式，和控制代码如何被解析成可见的交互页面的规则，都是被大家都同意的文件定义的，这个文件就叫做标准（规范）。这些标准都是由一个委员会制定，这个委员会由浏览器厂商的代表、web开发者、设计师和这个行业的其他人员组成的。他们一起决定一个浏览器引擎的精确行为：给一段特定的代码，完成对应的展示。这里有<a href=\"https://developer.mozilla.org/en-US/docs/Web_Standards\" target=\"_blank\" rel=\"noopener\">HTML，CSS和JavaScript的规范</a>以及图片、视频、音频的数据格式等等。</p>\n<p>为什么这个很重要？开发一个全新的浏览器引擎是可行的，只要你确保你的引擎遵循了标准，这个引擎会以和其他所有浏览器一样的方式去为网络上数以十亿计的网页做绘制渲染工作。这意味着让网站正常工作的秘诀不属于任何一个浏览器专属。标准允许用户去选择能满足他们需求的浏览器。</p>\n<h2 id=\"摩尔定律不再\"><a href=\"#摩尔定律不再\" class=\"headerlink\" title=\"摩尔定律不再\"></a>摩尔定律不再</h2><p>当恐龙漫步在地球上而且人们只有桌面电脑，电脑只会变得更快更强大是一个相对安全的假设。这个想法基于摩尔定律，摩尔定律描述的是一种现象：组件的密度会每两年增加一倍。令人难以置信的是，这个现象在21世纪一直存在，有些人甚至认为，在最新的研究中仍然是正确的。那么为什么在最近的10年里普通电脑的速度趋于平稳？</p>\n<p>用户去购买电脑的时候，处理速度不是用户看重的唯一特性。速度快的电脑会非常耗能，发热严重，而且非常贵。有时候，人们需要一款续航很好的电脑。有时候，他们需要一款微型的触控电脑，可以放进裤兜里，而且一整天都不用充电。先进的计算技术使得这个成为可能（令人惊讶！），但是是以原始速度为代价的。就像汽车一样，不可能越快越高效，电脑也是一样的。解决方案就是在一个CPU芯片上集成很多个“电脑”（核心）。一个智能手机拥有4个低性能的核心是很常见的。</p>\n<p>不幸的是，浏览器的历史设计对上行速度做了假设。而且，要编写能够同时利用CPU的多核心的代码是很复杂的。如此一来，在这个到处都是小电脑的时代，我们要如何创造一个快速、高效的浏览器呢？</p>\n<p>我们有一些想法。</p>\n<p>在接下来的几个月里，我们一起来仔细看看Firefox上的一些新的变化，以及Firefox是如何充分利用硬件的优势呈现一个快速稳定的浏览器来点亮网站的吧。</p>\n<p>前进！</p>\n<p>以上。我第一完整地翻译一篇英文技术文章，文中有诸多生硬拗口甚至难以理解的地方。请看官们帮忙指正，勿喷。</p>"},{"title":"JavaScript开发规范","date":"2017-06-02T14:41:28.000Z","_content":"\n## 1. 命名规范\n\n### 驼峰式命名法：\n\n驼峰式命名法由大（小）写字母开始，后续每个单词首字母都大写。\n按照第一个字母是否大写，分为：\n\n- Pascal Case 大驼峰式命名法：首字母大写。如：StudentInfo\n- Camel Case 小驼峰式命名法：首字母小写。如：studentInfo\n\n<!-- more -->\n\n### 1.1 变量\n\n命名方法： 小驼峰式命名法\n命名规范： 前缀应当是名词。（函数的名字前缀为动词，以此区分变量和函数）\n命名建议：尽量在变量名字中体现所属类型，如：length、count等表示数字类型；而包含name、title表示为字符串类型。\n\n示例：\n\n```javascript\n// good\nvar maxCount = 10;\nvar tableTitle = 'LoginTable';\n\n// bad\nvar setCount = 10;\nvar getTitle = 'LoginTable';\n```\n\n### 1.2 函数\n\n命名方法：小驼峰式命名法\n命名规范：前缀应当为动词\n命名建议：可以使用常见动词约定\n\n| 动词 | 含义 | 返回值 |\n| :------------- | :------------- | :------------- |\n| can      | 判断是否可执行某个动作（权限）     | Boolean    |\n| has      | 判断是否含有某个值     | Boolean    |\n| is      | 判断是否为某个值     | Boolean    |\n| get      | 获取某个值     | NOT Boolean    |\n| set      | 设置某个值     | 无返回值、Boolean或者返回链式对象    |\n| load      | 加载某些数据     | 无返回值或加载状态    |\n\n示例：\n\n```javascript\n// 判断是否可读\nfunction canRead() {\n    return true;\n}\n\n// 获取名字\nfunction getName() {\n    return this.name;\n}\n```\n\n### 1.3 常量\n\n命名方法：名称全部大写\n命名规范：使用大写字母和下划线组合命名，下划线用以分割单词\n命名建议：参照1.1\n\n示例：\n\n```javascript\nvar MAX_COUNT = 10;\nvar URL = 'http://www.lrts.me';\n```\n\n### 1.4 构造函数\n\n命名方法：大驼峰式命名法\n命名规范：前缀为名称\n命名建议：无\n\n示例：\n\n```javascript\nfunction Student(name) {\n    this.name = name;\n}\n\nvar student1 = new Student('Tom');\n```\n\n### 1.5 类的成员\n\n命名建议：\n\n- 公共属性和方法：跟变量和函数的命名一样\n- 私有属性和方法：前缀为_（下划线），后面跟公共属性和方法一样的命名方式\n\n示例：\n\n```javascript\nfunction Student(name) {\n\n    // 私有属性\n    var _name = name;\n\n    // 公共方法\n    this.getName = function () {\n        return _name;\n    }\n\n    this.setName = function (value) {\n        _name = value;\n    }\n}\n\nvar student1 = new Student('Tom');\nstudent1.setName('John');\nconsole.log(student1.getName()); // => John\n```\n\n## 2. 注释规范\n\nJavaScript支持两种不同类型的注释：单行注释和多行注释。\n\n### 2.1 单行注释\n\n说明：单行注释以两个斜杠开始，以行尾结束\n语法：`//` 这是单行注释\n使用方式：\n\n- 单独一行：`// comments` 双斜杠与文字之间保留一个空格\n- 在代码后面添加注释：`var MAX_COUNT = 10; // comments` 双斜杠与代码结尾之间保留一个空格，与注释文字之间保留一个空格。\n- 注释代码：`// var MAX_COUNT = 10;` 双斜杠与代码之间保留一个空格。\n\n示例：\n\n```javascript\n// 单独一行\nsetCount();\n\nvar MAX_COUNT = 10; // 在代码后面添加注释\n\n// 注释代码\n// setName();\n```\n\n### 2.2 多行注释\n\n说明：以`/*`开头，以`*/`结尾\n语法：`/* comments */`\n使用方法：\n\n- 若`/*`和`*/`在同一行，推荐采用单行注释\n- 若至少三行注释，第一行为`/*`，最后一行为`*/`，其他行以`*`开始，与注释文字之间保留一个空格，并且所有的`*`保持竖向对齐\n\n示例：\n\n```javascript\n/*\n * comments line one\n * comments line two\n */\nsetName();\n```\n\n### 2.3 函数（方法）注释\n\n说明：函数（方法）注释也是多行注释的一种，但是包含了特殊的注释要求。\n语法：\n```javascript\n/**\n * 函数说明\n * @关键字\n */\n```\n\n常用注释关键字：（只列出一部分）\n\n| 注释名 | 语法 | 含义 | 示例 |\n| :------------- | :------------- | :------------- | :------------- |\n| @param | @param 参数名 {参数类型} 描述信息 | 描述参数的信息 | @param name {String} 名称 |\n| @return | @return {返回类型} 描述信息 | 描述返回值的信息 | @return {String} 名称 |\n| @author | @author 作者名字 附属信息 | 描述此函数或者模块的作者信息 | @author Tom 2016-10-10 |\n| @version | @version xx.xx.xx | 描述此函数或者模块的版本号 | @version 1.0.1 |\n| @example | @example 示例代码 | 示例函数使用方法 | @example setName('John') |\n\n示例：\n\n```javascript\n/**\n * 合并Grid的行\n * @param grid {Ext.Grid.Panel} 需要合并的Grid\n * @param cols {Array} 需要合并的Index（序号）数组；从0开始计数，序号也包含\n * @param isAllSome {Boolean} 是否2个tr的cols必须完全一样才能进行合并。true: 完全一样；false(默认): 不完全一样\n * @return void\n * @author polk6 2015/07/21\n * @example\n * ______________                                  ______________\n * | 年龄 | 姓名 |                                   | 年龄 | 姓名 |\n * --------------       mergeCells(grid, [0])      --------------\n * | 18  | 张三 |               =>                  |     | 张三 |\n * --------------                                  |  18 |-------\n * | 18  | 王五 |                                   |     | 王五 |\n * --------------                                  --------------\n */\nfunction mergeCells(grid, cols, isAllSome) {\n    // do something\n}\n```\n\n## 3. 框架开发\n\n在团队开发或者引入第三方JS的时候，有时候会造成全局对象的命名冲突，比如a.js有个全局函数sendMsg()，b.js也有个全局函数sendMsg()，引入a.js和b.js文件时，会造成sendMsg()函数冲突。\n\n示例：\n\n```\n全局变量冲突：b.js会覆盖a.js的同名函数                                // a.js\n                                                                 ------------------------\n                                                          +----> | function sendMsg() { |\n<script src=\"/js/b.js\" type=\"text/javascript\"></script>---+      |     alert('a');      |\n<script src=\"/js/a.js\" type=\"text/javascript\"></script>---+      | }                    |\n<script type=\"text/javascript\">                           |      ------------------------\n                                                          |      // b.js\n    sendMsg(); // => ‘b’                                  |      -------------------------\n                                                          |      | function sendMsg() {  |\n</script>                                                 +----> |     alert('b');       |\n                                                                 | }                     |\n                                                                 -------------------------\n```\n\n### 3.2 单全局变量\n\n所创建的全局对象名称是独一无二的，并将所有的功能代码添加到这个全局对象上。调用自己所写的代码时，以这个全局对象为入口。\n\n如：\n- jQuery的全局对象：$和jQuery\n- ExtJS的全局对象：Ext\n\n示例：\n\n```\n全局变量冲突：b.js和a.js都有各自的主对象。                             // a.js\n                                                                 -----------------------------\n                                                                 | var A = A || {};          |\n                                                          +----> | A.sendMsg = function () { |\n<script src=\"/js/b.js\" type=\"text/javascript\"></script>---+      |     alert('a');           |\n<script src=\"/js/a.js\" type=\"text/javascript\"></script>---+      | }                         |\n<script type=\"text/javascript\">                           |      -----------------------------\n                                                          |      // b.js\n    A.sendMsg(); // => ‘a’                                |      ------------------------------\n                                                          |      | var B = B || {};           |\n                                                          |      | B.sendMsg = function () {  |\n    B.sendMsg(); // => 'b'                                +----> |     alert('b');            |\n                                                                 | }                          |\n                                                                 ------------------------------\n</script>\n```\n\n### 3.3 命名空间\n\n在项目规模日益壮大时，可采用命名空间的方式对JS代码进行规范：即将代码按照功能进行分组，以组的形式附加到单全局对象上。\n\n以Ext的chart模块为例：\n\n```\n                                                       ------------\n                                                 +---> |   Axis   |\n                                                 |     ------------\n                                                 |     ------------\n                                                 +---> | Category |\n                                    子模块名称     |     ------------\n                                    ----------   |     ------------\n                              +---> |  axis  | --+---> |    ...   |\n                  模块名称     |      ----------         ------------\n                  ---------   |     ----------         ------------\n            +---> | chart | --+---> | series | --+---> |   Area   |\n单全局对象    |     ---------   |     ----------   |     ------------\n---------   |                 |     ----------   |     ------------\n|  Ext  | --+                 +---> |  ...   |   +---> |   Bar    |\n---------   |                       ----------   |     ------------\n            |     ---------                      |     ------------\n            +---> |  ...  |                      +---> |   ...    |\n                  ---------                            ------------\n```\n","source":"_posts/2017-06-02-JavaScript开发规范.md","raw":"---\ntitle: JavaScript开发规范\ndate: 2017-06-02 22:41:28\ntags:\n- JavaScript\n- 开发规范\ncategories:\n- 规范\n---\n\n## 1. 命名规范\n\n### 驼峰式命名法：\n\n驼峰式命名法由大（小）写字母开始，后续每个单词首字母都大写。\n按照第一个字母是否大写，分为：\n\n- Pascal Case 大驼峰式命名法：首字母大写。如：StudentInfo\n- Camel Case 小驼峰式命名法：首字母小写。如：studentInfo\n\n<!-- more -->\n\n### 1.1 变量\n\n命名方法： 小驼峰式命名法\n命名规范： 前缀应当是名词。（函数的名字前缀为动词，以此区分变量和函数）\n命名建议：尽量在变量名字中体现所属类型，如：length、count等表示数字类型；而包含name、title表示为字符串类型。\n\n示例：\n\n```javascript\n// good\nvar maxCount = 10;\nvar tableTitle = 'LoginTable';\n\n// bad\nvar setCount = 10;\nvar getTitle = 'LoginTable';\n```\n\n### 1.2 函数\n\n命名方法：小驼峰式命名法\n命名规范：前缀应当为动词\n命名建议：可以使用常见动词约定\n\n| 动词 | 含义 | 返回值 |\n| :------------- | :------------- | :------------- |\n| can      | 判断是否可执行某个动作（权限）     | Boolean    |\n| has      | 判断是否含有某个值     | Boolean    |\n| is      | 判断是否为某个值     | Boolean    |\n| get      | 获取某个值     | NOT Boolean    |\n| set      | 设置某个值     | 无返回值、Boolean或者返回链式对象    |\n| load      | 加载某些数据     | 无返回值或加载状态    |\n\n示例：\n\n```javascript\n// 判断是否可读\nfunction canRead() {\n    return true;\n}\n\n// 获取名字\nfunction getName() {\n    return this.name;\n}\n```\n\n### 1.3 常量\n\n命名方法：名称全部大写\n命名规范：使用大写字母和下划线组合命名，下划线用以分割单词\n命名建议：参照1.1\n\n示例：\n\n```javascript\nvar MAX_COUNT = 10;\nvar URL = 'http://www.lrts.me';\n```\n\n### 1.4 构造函数\n\n命名方法：大驼峰式命名法\n命名规范：前缀为名称\n命名建议：无\n\n示例：\n\n```javascript\nfunction Student(name) {\n    this.name = name;\n}\n\nvar student1 = new Student('Tom');\n```\n\n### 1.5 类的成员\n\n命名建议：\n\n- 公共属性和方法：跟变量和函数的命名一样\n- 私有属性和方法：前缀为_（下划线），后面跟公共属性和方法一样的命名方式\n\n示例：\n\n```javascript\nfunction Student(name) {\n\n    // 私有属性\n    var _name = name;\n\n    // 公共方法\n    this.getName = function () {\n        return _name;\n    }\n\n    this.setName = function (value) {\n        _name = value;\n    }\n}\n\nvar student1 = new Student('Tom');\nstudent1.setName('John');\nconsole.log(student1.getName()); // => John\n```\n\n## 2. 注释规范\n\nJavaScript支持两种不同类型的注释：单行注释和多行注释。\n\n### 2.1 单行注释\n\n说明：单行注释以两个斜杠开始，以行尾结束\n语法：`//` 这是单行注释\n使用方式：\n\n- 单独一行：`// comments` 双斜杠与文字之间保留一个空格\n- 在代码后面添加注释：`var MAX_COUNT = 10; // comments` 双斜杠与代码结尾之间保留一个空格，与注释文字之间保留一个空格。\n- 注释代码：`// var MAX_COUNT = 10;` 双斜杠与代码之间保留一个空格。\n\n示例：\n\n```javascript\n// 单独一行\nsetCount();\n\nvar MAX_COUNT = 10; // 在代码后面添加注释\n\n// 注释代码\n// setName();\n```\n\n### 2.2 多行注释\n\n说明：以`/*`开头，以`*/`结尾\n语法：`/* comments */`\n使用方法：\n\n- 若`/*`和`*/`在同一行，推荐采用单行注释\n- 若至少三行注释，第一行为`/*`，最后一行为`*/`，其他行以`*`开始，与注释文字之间保留一个空格，并且所有的`*`保持竖向对齐\n\n示例：\n\n```javascript\n/*\n * comments line one\n * comments line two\n */\nsetName();\n```\n\n### 2.3 函数（方法）注释\n\n说明：函数（方法）注释也是多行注释的一种，但是包含了特殊的注释要求。\n语法：\n```javascript\n/**\n * 函数说明\n * @关键字\n */\n```\n\n常用注释关键字：（只列出一部分）\n\n| 注释名 | 语法 | 含义 | 示例 |\n| :------------- | :------------- | :------------- | :------------- |\n| @param | @param 参数名 {参数类型} 描述信息 | 描述参数的信息 | @param name {String} 名称 |\n| @return | @return {返回类型} 描述信息 | 描述返回值的信息 | @return {String} 名称 |\n| @author | @author 作者名字 附属信息 | 描述此函数或者模块的作者信息 | @author Tom 2016-10-10 |\n| @version | @version xx.xx.xx | 描述此函数或者模块的版本号 | @version 1.0.1 |\n| @example | @example 示例代码 | 示例函数使用方法 | @example setName('John') |\n\n示例：\n\n```javascript\n/**\n * 合并Grid的行\n * @param grid {Ext.Grid.Panel} 需要合并的Grid\n * @param cols {Array} 需要合并的Index（序号）数组；从0开始计数，序号也包含\n * @param isAllSome {Boolean} 是否2个tr的cols必须完全一样才能进行合并。true: 完全一样；false(默认): 不完全一样\n * @return void\n * @author polk6 2015/07/21\n * @example\n * ______________                                  ______________\n * | 年龄 | 姓名 |                                   | 年龄 | 姓名 |\n * --------------       mergeCells(grid, [0])      --------------\n * | 18  | 张三 |               =>                  |     | 张三 |\n * --------------                                  |  18 |-------\n * | 18  | 王五 |                                   |     | 王五 |\n * --------------                                  --------------\n */\nfunction mergeCells(grid, cols, isAllSome) {\n    // do something\n}\n```\n\n## 3. 框架开发\n\n在团队开发或者引入第三方JS的时候，有时候会造成全局对象的命名冲突，比如a.js有个全局函数sendMsg()，b.js也有个全局函数sendMsg()，引入a.js和b.js文件时，会造成sendMsg()函数冲突。\n\n示例：\n\n```\n全局变量冲突：b.js会覆盖a.js的同名函数                                // a.js\n                                                                 ------------------------\n                                                          +----> | function sendMsg() { |\n<script src=\"/js/b.js\" type=\"text/javascript\"></script>---+      |     alert('a');      |\n<script src=\"/js/a.js\" type=\"text/javascript\"></script>---+      | }                    |\n<script type=\"text/javascript\">                           |      ------------------------\n                                                          |      // b.js\n    sendMsg(); // => ‘b’                                  |      -------------------------\n                                                          |      | function sendMsg() {  |\n</script>                                                 +----> |     alert('b');       |\n                                                                 | }                     |\n                                                                 -------------------------\n```\n\n### 3.2 单全局变量\n\n所创建的全局对象名称是独一无二的，并将所有的功能代码添加到这个全局对象上。调用自己所写的代码时，以这个全局对象为入口。\n\n如：\n- jQuery的全局对象：$和jQuery\n- ExtJS的全局对象：Ext\n\n示例：\n\n```\n全局变量冲突：b.js和a.js都有各自的主对象。                             // a.js\n                                                                 -----------------------------\n                                                                 | var A = A || {};          |\n                                                          +----> | A.sendMsg = function () { |\n<script src=\"/js/b.js\" type=\"text/javascript\"></script>---+      |     alert('a');           |\n<script src=\"/js/a.js\" type=\"text/javascript\"></script>---+      | }                         |\n<script type=\"text/javascript\">                           |      -----------------------------\n                                                          |      // b.js\n    A.sendMsg(); // => ‘a’                                |      ------------------------------\n                                                          |      | var B = B || {};           |\n                                                          |      | B.sendMsg = function () {  |\n    B.sendMsg(); // => 'b'                                +----> |     alert('b');            |\n                                                                 | }                          |\n                                                                 ------------------------------\n</script>\n```\n\n### 3.3 命名空间\n\n在项目规模日益壮大时，可采用命名空间的方式对JS代码进行规范：即将代码按照功能进行分组，以组的形式附加到单全局对象上。\n\n以Ext的chart模块为例：\n\n```\n                                                       ------------\n                                                 +---> |   Axis   |\n                                                 |     ------------\n                                                 |     ------------\n                                                 +---> | Category |\n                                    子模块名称     |     ------------\n                                    ----------   |     ------------\n                              +---> |  axis  | --+---> |    ...   |\n                  模块名称     |      ----------         ------------\n                  ---------   |     ----------         ------------\n            +---> | chart | --+---> | series | --+---> |   Area   |\n单全局对象    |     ---------   |     ----------   |     ------------\n---------   |                 |     ----------   |     ------------\n|  Ext  | --+                 +---> |  ...   |   +---> |   Bar    |\n---------   |                       ----------   |     ------------\n            |     ---------                      |     ------------\n            +---> |  ...  |                      +---> |   ...    |\n                  ---------                            ------------\n```\n","slug":"JavaScript开发规范","published":1,"updated":"2018-03-27T13:52:33.770Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjskilapr0053g9zbzxovhnxy","content":"<h2 id=\"1-命名规范\"><a href=\"#1-命名规范\" class=\"headerlink\" title=\"1. 命名规范\"></a>1. 命名规范</h2><h3 id=\"驼峰式命名法：\"><a href=\"#驼峰式命名法：\" class=\"headerlink\" title=\"驼峰式命名法：\"></a>驼峰式命名法：</h3><p>驼峰式命名法由大（小）写字母开始，后续每个单词首字母都大写。<br>按照第一个字母是否大写，分为：</p>\n<ul>\n<li>Pascal Case 大驼峰式命名法：首字母大写。如：StudentInfo</li>\n<li>Camel Case 小驼峰式命名法：首字母小写。如：studentInfo</li>\n</ul>\n<a id=\"more\"></a>\n<h3 id=\"1-1-变量\"><a href=\"#1-1-变量\" class=\"headerlink\" title=\"1.1 变量\"></a>1.1 变量</h3><p>命名方法： 小驼峰式命名法<br>命名规范： 前缀应当是名词。（函数的名字前缀为动词，以此区分变量和函数）<br>命名建议：尽量在变量名字中体现所属类型，如：length、count等表示数字类型；而包含name、title表示为字符串类型。</p>\n<p>示例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// good</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> maxCount = <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> tableTitle = <span class=\"string\">'LoginTable'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// bad</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> setCount = <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> getTitle = <span class=\"string\">'LoginTable'</span>;</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-2-函数\"><a href=\"#1-2-函数\" class=\"headerlink\" title=\"1.2 函数\"></a>1.2 函数</h3><p>命名方法：小驼峰式命名法<br>命名规范：前缀应当为动词<br>命名建议：可以使用常见动词约定</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">动词</th>\n<th style=\"text-align:left\">含义</th>\n<th style=\"text-align:left\">返回值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">can</td>\n<td style=\"text-align:left\">判断是否可执行某个动作（权限）</td>\n<td style=\"text-align:left\">Boolean</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">has</td>\n<td style=\"text-align:left\">判断是否含有某个值</td>\n<td style=\"text-align:left\">Boolean</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">is</td>\n<td style=\"text-align:left\">判断是否为某个值</td>\n<td style=\"text-align:left\">Boolean</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">get</td>\n<td style=\"text-align:left\">获取某个值</td>\n<td style=\"text-align:left\">NOT Boolean</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">set</td>\n<td style=\"text-align:left\">设置某个值</td>\n<td style=\"text-align:left\">无返回值、Boolean或者返回链式对象</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">load</td>\n<td style=\"text-align:left\">加载某些数据</td>\n<td style=\"text-align:left\">无返回值或加载状态</td>\n</tr>\n</tbody>\n</table>\n<p>示例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 判断是否可读</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canRead</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 获取名字</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getName</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.name;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-3-常量\"><a href=\"#1-3-常量\" class=\"headerlink\" title=\"1.3 常量\"></a>1.3 常量</h3><p>命名方法：名称全部大写<br>命名规范：使用大写字母和下划线组合命名，下划线用以分割单词<br>命名建议：参照1.1</p>\n<p>示例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> MAX_COUNT = <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> URL = <span class=\"string\">'http://www.lrts.me'</span>;</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-4-构造函数\"><a href=\"#1-4-构造函数\" class=\"headerlink\" title=\"1.4 构造函数\"></a>1.4 构造函数</h3><p>命名方法：大驼峰式命名法<br>命名规范：前缀为名称<br>命名建议：无</p>\n<p>示例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Student</span>(<span class=\"params\">name</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> student1 = <span class=\"keyword\">new</span> Student(<span class=\"string\">'Tom'</span>);</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-5-类的成员\"><a href=\"#1-5-类的成员\" class=\"headerlink\" title=\"1.5 类的成员\"></a>1.5 类的成员</h3><p>命名建议：</p>\n<ul>\n<li>公共属性和方法：跟变量和函数的命名一样</li>\n<li>私有属性和方法：前缀为_（下划线），后面跟公共属性和方法一样的命名方式</li>\n</ul>\n<p>示例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Student</span>(<span class=\"params\">name</span>) </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 私有属性</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> _name = name;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 公共方法</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.getName = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> _name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.setName = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">value</span>) </span>&#123;</span><br><span class=\"line\">        _name = value;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> student1 = <span class=\"keyword\">new</span> Student(<span class=\"string\">'Tom'</span>);</span><br><span class=\"line\">student1.setName(<span class=\"string\">'John'</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(student1.getName()); <span class=\"comment\">// =&gt; John</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"2-注释规范\"><a href=\"#2-注释规范\" class=\"headerlink\" title=\"2. 注释规范\"></a>2. 注释规范</h2><p>JavaScript支持两种不同类型的注释：单行注释和多行注释。</p>\n<h3 id=\"2-1-单行注释\"><a href=\"#2-1-单行注释\" class=\"headerlink\" title=\"2.1 单行注释\"></a>2.1 单行注释</h3><p>说明：单行注释以两个斜杠开始，以行尾结束<br>语法：<code>//</code> 这是单行注释<br>使用方式：</p>\n<ul>\n<li>单独一行：<code>// comments</code> 双斜杠与文字之间保留一个空格</li>\n<li>在代码后面添加注释：<code>var MAX_COUNT = 10; // comments</code> 双斜杠与代码结尾之间保留一个空格，与注释文字之间保留一个空格。</li>\n<li>注释代码：<code>// var MAX_COUNT = 10;</code> 双斜杠与代码之间保留一个空格。</li>\n</ul>\n<p>示例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 单独一行</span></span><br><span class=\"line\">setCount();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> MAX_COUNT = <span class=\"number\">10</span>; <span class=\"comment\">// 在代码后面添加注释</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 注释代码</span></span><br><span class=\"line\"><span class=\"comment\">// setName();</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"2-2-多行注释\"><a href=\"#2-2-多行注释\" class=\"headerlink\" title=\"2.2 多行注释\"></a>2.2 多行注释</h3><p>说明：以<code>/*</code>开头，以<code>*/</code>结尾<br>语法：<code>/* comments */</code><br>使用方法：</p>\n<ul>\n<li>若<code>/*</code>和<code>*/</code>在同一行，推荐采用单行注释</li>\n<li>若至少三行注释，第一行为<code>/*</code>，最后一行为<code>*/</code>，其他行以<code>*</code>开始，与注释文字之间保留一个空格，并且所有的<code>*</code>保持竖向对齐</li>\n</ul>\n<p>示例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"> * comments line one</span></span><br><span class=\"line\"><span class=\"comment\"> * comments line two</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\">setName();</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-3-函数（方法）注释\"><a href=\"#2-3-函数（方法）注释\" class=\"headerlink\" title=\"2.3 函数（方法）注释\"></a>2.3 函数（方法）注释</h3><p>说明：函数（方法）注释也是多行注释的一种，但是包含了特殊的注释要求。<br>语法：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 函数说明</span></span><br><span class=\"line\"><span class=\"comment\"> * @关键字</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br></pre></td></tr></table></figure></p>\n<p>常用注释关键字：（只列出一部分）</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">注释名</th>\n<th style=\"text-align:left\">语法</th>\n<th style=\"text-align:left\">含义</th>\n<th style=\"text-align:left\">示例</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">@param</td>\n<td style=\"text-align:left\">@param 参数名 {参数类型} 描述信息</td>\n<td style=\"text-align:left\">描述参数的信息</td>\n<td style=\"text-align:left\">@param name {String} 名称</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">@return</td>\n<td style=\"text-align:left\">@return {返回类型} 描述信息</td>\n<td style=\"text-align:left\">描述返回值的信息</td>\n<td style=\"text-align:left\">@return {String} 名称</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">@author</td>\n<td style=\"text-align:left\">@author 作者名字 附属信息</td>\n<td style=\"text-align:left\">描述此函数或者模块的作者信息</td>\n<td style=\"text-align:left\">@author Tom 2016-10-10</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">@version</td>\n<td style=\"text-align:left\">@version xx.xx.xx</td>\n<td style=\"text-align:left\">描述此函数或者模块的版本号</td>\n<td style=\"text-align:left\">@version 1.0.1</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">@example</td>\n<td style=\"text-align:left\">@example 示例代码</td>\n<td style=\"text-align:left\">示例函数使用方法</td>\n<td style=\"text-align:left\">@example setName(‘John’)</td>\n</tr>\n</tbody>\n</table>\n<p>示例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 合并Grid的行</span></span><br><span class=\"line\"><span class=\"comment\"> * @param grid &#123;Ext.Grid.Panel&#125; 需要合并的Grid</span></span><br><span class=\"line\"><span class=\"comment\"> * @param cols &#123;Array&#125; 需要合并的Index（序号）数组；从0开始计数，序号也包含</span></span><br><span class=\"line\"><span class=\"comment\"> * @param isAllSome &#123;Boolean&#125; 是否2个tr的cols必须完全一样才能进行合并。true: 完全一样；false(默认): 不完全一样</span></span><br><span class=\"line\"><span class=\"comment\"> * @return void</span></span><br><span class=\"line\"><span class=\"comment\"> * @author polk6 2015/07/21</span></span><br><span class=\"line\"><span class=\"comment\"> * @example</span></span><br><span class=\"line\"><span class=\"comment\"> * ______________                                  ______________</span></span><br><span class=\"line\"><span class=\"comment\"> * | 年龄 | 姓名 |                                   | 年龄 | 姓名 |</span></span><br><span class=\"line\"><span class=\"comment\"> * --------------       mergeCells(grid, [0])      --------------</span></span><br><span class=\"line\"><span class=\"comment\"> * | 18  | 张三 |               =&gt;                  |     | 张三 |</span></span><br><span class=\"line\"><span class=\"comment\"> * --------------                                  |  18 |-------</span></span><br><span class=\"line\"><span class=\"comment\"> * | 18  | 王五 |                                   |     | 王五 |</span></span><br><span class=\"line\"><span class=\"comment\"> * --------------                                  --------------</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">mergeCells</span>(<span class=\"params\">grid, cols, isAllSome</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// do something</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-框架开发\"><a href=\"#3-框架开发\" class=\"headerlink\" title=\"3. 框架开发\"></a>3. 框架开发</h2><p>在团队开发或者引入第三方JS的时候，有时候会造成全局对象的命名冲突，比如a.js有个全局函数sendMsg()，b.js也有个全局函数sendMsg()，引入a.js和b.js文件时，会造成sendMsg()函数冲突。</p>\n<p>示例：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">全局变量冲突：b.js会覆盖a.js的同名函数                                // a.js</span><br><span class=\"line\">                                                                 ------------------------</span><br><span class=\"line\">                                                          +----&gt; | function sendMsg() &#123; |</span><br><span class=\"line\">&lt;script src=&quot;/js/b.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;---+      |     alert(&apos;a&apos;);      |</span><br><span class=\"line\">&lt;script src=&quot;/js/a.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;---+      | &#125;                    |</span><br><span class=\"line\">&lt;script type=&quot;text/javascript&quot;&gt;                           |      ------------------------</span><br><span class=\"line\">                                                          |      // b.js</span><br><span class=\"line\">    sendMsg(); // =&gt; ‘b’                                  |      -------------------------</span><br><span class=\"line\">                                                          |      | function sendMsg() &#123;  |</span><br><span class=\"line\">&lt;/script&gt;                                                 +----&gt; |     alert(&apos;b&apos;);       |</span><br><span class=\"line\">                                                                 | &#125;                     |</span><br><span class=\"line\">                                                                 -------------------------</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-2-单全局变量\"><a href=\"#3-2-单全局变量\" class=\"headerlink\" title=\"3.2 单全局变量\"></a>3.2 单全局变量</h3><p>所创建的全局对象名称是独一无二的，并将所有的功能代码添加到这个全局对象上。调用自己所写的代码时，以这个全局对象为入口。</p>\n<p>如：</p>\n<ul>\n<li>jQuery的全局对象：$和jQuery</li>\n<li>ExtJS的全局对象：Ext</li>\n</ul>\n<p>示例：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">全局变量冲突：b.js和a.js都有各自的主对象。                             // a.js</span><br><span class=\"line\">                                                                 -----------------------------</span><br><span class=\"line\">                                                                 | var A = A || &#123;&#125;;          |</span><br><span class=\"line\">                                                          +----&gt; | A.sendMsg = function () &#123; |</span><br><span class=\"line\">&lt;script src=&quot;/js/b.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;---+      |     alert(&apos;a&apos;);           |</span><br><span class=\"line\">&lt;script src=&quot;/js/a.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;---+      | &#125;                         |</span><br><span class=\"line\">&lt;script type=&quot;text/javascript&quot;&gt;                           |      -----------------------------</span><br><span class=\"line\">                                                          |      // b.js</span><br><span class=\"line\">    A.sendMsg(); // =&gt; ‘a’                                |      ------------------------------</span><br><span class=\"line\">                                                          |      | var B = B || &#123;&#125;;           |</span><br><span class=\"line\">                                                          |      | B.sendMsg = function () &#123;  |</span><br><span class=\"line\">    B.sendMsg(); // =&gt; &apos;b&apos;                                +----&gt; |     alert(&apos;b&apos;);            |</span><br><span class=\"line\">                                                                 | &#125;                          |</span><br><span class=\"line\">                                                                 ------------------------------</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-3-命名空间\"><a href=\"#3-3-命名空间\" class=\"headerlink\" title=\"3.3 命名空间\"></a>3.3 命名空间</h3><p>在项目规模日益壮大时，可采用命名空间的方式对JS代码进行规范：即将代码按照功能进行分组，以组的形式附加到单全局对象上。</p>\n<p>以Ext的chart模块为例：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">                                                       ------------</span><br><span class=\"line\">                                                 +---&gt; |   Axis   |</span><br><span class=\"line\">                                                 |     ------------</span><br><span class=\"line\">                                                 |     ------------</span><br><span class=\"line\">                                                 +---&gt; | Category |</span><br><span class=\"line\">                                    子模块名称     |     ------------</span><br><span class=\"line\">                                    ----------   |     ------------</span><br><span class=\"line\">                              +---&gt; |  axis  | --+---&gt; |    ...   |</span><br><span class=\"line\">                  模块名称     |      ----------         ------------</span><br><span class=\"line\">                  ---------   |     ----------         ------------</span><br><span class=\"line\">            +---&gt; | chart | --+---&gt; | series | --+---&gt; |   Area   |</span><br><span class=\"line\">单全局对象    |     ---------   |     ----------   |     ------------</span><br><span class=\"line\">---------   |                 |     ----------   |     ------------</span><br><span class=\"line\">|  Ext  | --+                 +---&gt; |  ...   |   +---&gt; |   Bar    |</span><br><span class=\"line\">---------   |                       ----------   |     ------------</span><br><span class=\"line\">            |     ---------                      |     ------------</span><br><span class=\"line\">            +---&gt; |  ...  |                      +---&gt; |   ...    |</span><br><span class=\"line\">                  ---------                            ------------</span><br></pre></td></tr></table></figure>\n","site":{"data":{"next":{"favicon":"/favicon.ico","keywords":"Hexo, NexT","rss":null,"since":2016,"authoricon":"heart","copyright":true,"canonical":true,"seo":true,"index_with_subtitle":false,"menu":{"home":"/","categories":"/categories/","archives":"/archives/","tags":"/tags/","about":"/about/"},"menu_icons":{"enable":true,"home":"home","about":"user","categories":"th","schedule":"calendar","tags":"tags","archives":"archive","sitemap":"sitemap","commonweal":"heartbeat"},"scheme":"Mist","social":{"Github":"https://github.com/ricosmall"},"social_icons":{"enable":true,"GitHub":"github","Twitter":"twitter","Weibo":"weibo"},"avatar":"/uploads/avatar.png","toc":{"enable":true,"number":true,"wrap":false},"sidebar":{"position":"left","display":"post","offset":12,"offset_float":0,"b2t":false,"scrollpercent":false,"onmobile":false},"scroll_to_more":true,"save_scroll":false,"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"post_meta":{"item_text":true,"created_at":true,"updated_at":false,"categories":true},"post_wordcount":{"item_text":true,"wordcount":false,"min2read":false,"separated_meta":true},"post_copyright":{"enable":false,"license":"CC BY-NC-SA 3.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/3.0/"},"custom_logo":{"enabled":false,"image":null},"highlight_theme":"night bright","font":{"enable":true,"host":null,"global":{"external":true,"family":"Lato"},"headings":{"external":true,"family":null},"posts":{"external":true,"family":null},"logo":{"external":true,"family":null,"size":null},"codes":{"external":true,"family":"Menlo, Monospace","size":null}},"mathjax":{"enable":true,"per_page":false,"cdn":"//cdn.bootcss.com/mathjax/2.7.1/latest.js?config=TeX-AMS-MML_HTMLorMML"},"han":false,"disqus":{"enable":false,"shortname":"ricosmall","count":false},"changyan":{"enable":false,"appid":null,"appkey":null},"duoshuo_info":{"ua_enable":true,"admin_enable":false,"user_id":0},"facebook_sdk":{"enable":false,"app_id":null,"fb_admin":null,"like_button":null,"webmaster":null},"facebook_comments_plugin":{"enable":false,"num_of_posts":10,"width":"100%","scheme":"light"},"vkontakte_api":{"enable":false,"app_id":null,"like":true,"comments":true,"num_of_posts":10},"rating":{"enable":false,"id":null,"color":"fc6423"},"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null},"busuanzi_count":{"enable":true,"site_uv":true,"site_uv_header":"<i class=\"fa fa-user\"></i>访问人数","site_uv_footer":null,"site_pv":true,"site_pv_header":"<i class=\"fa fa-eye\"></i>总访问量","site_pv_footer":"次","page_pv":true,"page_pv_header":"<i class=\"fa fa-file-o\"></i>浏览","page_pv_footer":"次"},"baidu_push":false,"calendar":{"enable":false,"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"timeZone":null,"showDeleted":false,"singleEvents":true,"maxResults":250},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1},"exturl":false,"use_motion":true,"fancybox":true,"pace":false,"pace_theme":"pace-theme-minimal","canvas_nest":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false,"canvas_ribbon":false,"vendors":{"_internal":"lib","jquery":null,"fancybox":null,"fancybox_css":null,"fastclick":null,"lazyload":null,"velocity":null,"velocity_ui":null,"ua_parser":null,"fontawesome":null,"algolia_instant_js":null,"algolia_instant_css":null,"pace":null,"pace_css":null,"canvas_nest":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_ribbon":null,"han":null},"css":"css","js":"js","images":"images","version":"5.1.1"}}},"excerpt":"<h2 id=\"1-命名规范\"><a href=\"#1-命名规范\" class=\"headerlink\" title=\"1. 命名规范\"></a>1. 命名规范</h2><h3 id=\"驼峰式命名法：\"><a href=\"#驼峰式命名法：\" class=\"headerlink\" title=\"驼峰式命名法：\"></a>驼峰式命名法：</h3><p>驼峰式命名法由大（小）写字母开始，后续每个单词首字母都大写。<br>按照第一个字母是否大写，分为：</p>\n<ul>\n<li>Pascal Case 大驼峰式命名法：首字母大写。如：StudentInfo</li>\n<li>Camel Case 小驼峰式命名法：首字母小写。如：studentInfo</li>\n</ul>","more":"<h3 id=\"1-1-变量\"><a href=\"#1-1-变量\" class=\"headerlink\" title=\"1.1 变量\"></a>1.1 变量</h3><p>命名方法： 小驼峰式命名法<br>命名规范： 前缀应当是名词。（函数的名字前缀为动词，以此区分变量和函数）<br>命名建议：尽量在变量名字中体现所属类型，如：length、count等表示数字类型；而包含name、title表示为字符串类型。</p>\n<p>示例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// good</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> maxCount = <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> tableTitle = <span class=\"string\">'LoginTable'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// bad</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> setCount = <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> getTitle = <span class=\"string\">'LoginTable'</span>;</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-2-函数\"><a href=\"#1-2-函数\" class=\"headerlink\" title=\"1.2 函数\"></a>1.2 函数</h3><p>命名方法：小驼峰式命名法<br>命名规范：前缀应当为动词<br>命名建议：可以使用常见动词约定</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">动词</th>\n<th style=\"text-align:left\">含义</th>\n<th style=\"text-align:left\">返回值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">can</td>\n<td style=\"text-align:left\">判断是否可执行某个动作（权限）</td>\n<td style=\"text-align:left\">Boolean</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">has</td>\n<td style=\"text-align:left\">判断是否含有某个值</td>\n<td style=\"text-align:left\">Boolean</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">is</td>\n<td style=\"text-align:left\">判断是否为某个值</td>\n<td style=\"text-align:left\">Boolean</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">get</td>\n<td style=\"text-align:left\">获取某个值</td>\n<td style=\"text-align:left\">NOT Boolean</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">set</td>\n<td style=\"text-align:left\">设置某个值</td>\n<td style=\"text-align:left\">无返回值、Boolean或者返回链式对象</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">load</td>\n<td style=\"text-align:left\">加载某些数据</td>\n<td style=\"text-align:left\">无返回值或加载状态</td>\n</tr>\n</tbody>\n</table>\n<p>示例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 判断是否可读</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canRead</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 获取名字</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getName</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.name;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-3-常量\"><a href=\"#1-3-常量\" class=\"headerlink\" title=\"1.3 常量\"></a>1.3 常量</h3><p>命名方法：名称全部大写<br>命名规范：使用大写字母和下划线组合命名，下划线用以分割单词<br>命名建议：参照1.1</p>\n<p>示例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> MAX_COUNT = <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> URL = <span class=\"string\">'http://www.lrts.me'</span>;</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-4-构造函数\"><a href=\"#1-4-构造函数\" class=\"headerlink\" title=\"1.4 构造函数\"></a>1.4 构造函数</h3><p>命名方法：大驼峰式命名法<br>命名规范：前缀为名称<br>命名建议：无</p>\n<p>示例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Student</span>(<span class=\"params\">name</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> student1 = <span class=\"keyword\">new</span> Student(<span class=\"string\">'Tom'</span>);</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-5-类的成员\"><a href=\"#1-5-类的成员\" class=\"headerlink\" title=\"1.5 类的成员\"></a>1.5 类的成员</h3><p>命名建议：</p>\n<ul>\n<li>公共属性和方法：跟变量和函数的命名一样</li>\n<li>私有属性和方法：前缀为_（下划线），后面跟公共属性和方法一样的命名方式</li>\n</ul>\n<p>示例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Student</span>(<span class=\"params\">name</span>) </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 私有属性</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> _name = name;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 公共方法</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.getName = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> _name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.setName = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">value</span>) </span>&#123;</span><br><span class=\"line\">        _name = value;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> student1 = <span class=\"keyword\">new</span> Student(<span class=\"string\">'Tom'</span>);</span><br><span class=\"line\">student1.setName(<span class=\"string\">'John'</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(student1.getName()); <span class=\"comment\">// =&gt; John</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"2-注释规范\"><a href=\"#2-注释规范\" class=\"headerlink\" title=\"2. 注释规范\"></a>2. 注释规范</h2><p>JavaScript支持两种不同类型的注释：单行注释和多行注释。</p>\n<h3 id=\"2-1-单行注释\"><a href=\"#2-1-单行注释\" class=\"headerlink\" title=\"2.1 单行注释\"></a>2.1 单行注释</h3><p>说明：单行注释以两个斜杠开始，以行尾结束<br>语法：<code>//</code> 这是单行注释<br>使用方式：</p>\n<ul>\n<li>单独一行：<code>// comments</code> 双斜杠与文字之间保留一个空格</li>\n<li>在代码后面添加注释：<code>var MAX_COUNT = 10; // comments</code> 双斜杠与代码结尾之间保留一个空格，与注释文字之间保留一个空格。</li>\n<li>注释代码：<code>// var MAX_COUNT = 10;</code> 双斜杠与代码之间保留一个空格。</li>\n</ul>\n<p>示例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 单独一行</span></span><br><span class=\"line\">setCount();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> MAX_COUNT = <span class=\"number\">10</span>; <span class=\"comment\">// 在代码后面添加注释</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 注释代码</span></span><br><span class=\"line\"><span class=\"comment\">// setName();</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"2-2-多行注释\"><a href=\"#2-2-多行注释\" class=\"headerlink\" title=\"2.2 多行注释\"></a>2.2 多行注释</h3><p>说明：以<code>/*</code>开头，以<code>*/</code>结尾<br>语法：<code>/* comments */</code><br>使用方法：</p>\n<ul>\n<li>若<code>/*</code>和<code>*/</code>在同一行，推荐采用单行注释</li>\n<li>若至少三行注释，第一行为<code>/*</code>，最后一行为<code>*/</code>，其他行以<code>*</code>开始，与注释文字之间保留一个空格，并且所有的<code>*</code>保持竖向对齐</li>\n</ul>\n<p>示例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"> * comments line one</span></span><br><span class=\"line\"><span class=\"comment\"> * comments line two</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\">setName();</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-3-函数（方法）注释\"><a href=\"#2-3-函数（方法）注释\" class=\"headerlink\" title=\"2.3 函数（方法）注释\"></a>2.3 函数（方法）注释</h3><p>说明：函数（方法）注释也是多行注释的一种，但是包含了特殊的注释要求。<br>语法：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 函数说明</span></span><br><span class=\"line\"><span class=\"comment\"> * @关键字</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br></pre></td></tr></table></figure></p>\n<p>常用注释关键字：（只列出一部分）</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">注释名</th>\n<th style=\"text-align:left\">语法</th>\n<th style=\"text-align:left\">含义</th>\n<th style=\"text-align:left\">示例</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">@param</td>\n<td style=\"text-align:left\">@param 参数名 {参数类型} 描述信息</td>\n<td style=\"text-align:left\">描述参数的信息</td>\n<td style=\"text-align:left\">@param name {String} 名称</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">@return</td>\n<td style=\"text-align:left\">@return {返回类型} 描述信息</td>\n<td style=\"text-align:left\">描述返回值的信息</td>\n<td style=\"text-align:left\">@return {String} 名称</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">@author</td>\n<td style=\"text-align:left\">@author 作者名字 附属信息</td>\n<td style=\"text-align:left\">描述此函数或者模块的作者信息</td>\n<td style=\"text-align:left\">@author Tom 2016-10-10</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">@version</td>\n<td style=\"text-align:left\">@version xx.xx.xx</td>\n<td style=\"text-align:left\">描述此函数或者模块的版本号</td>\n<td style=\"text-align:left\">@version 1.0.1</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">@example</td>\n<td style=\"text-align:left\">@example 示例代码</td>\n<td style=\"text-align:left\">示例函数使用方法</td>\n<td style=\"text-align:left\">@example setName(‘John’)</td>\n</tr>\n</tbody>\n</table>\n<p>示例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 合并Grid的行</span></span><br><span class=\"line\"><span class=\"comment\"> * @param grid &#123;Ext.Grid.Panel&#125; 需要合并的Grid</span></span><br><span class=\"line\"><span class=\"comment\"> * @param cols &#123;Array&#125; 需要合并的Index（序号）数组；从0开始计数，序号也包含</span></span><br><span class=\"line\"><span class=\"comment\"> * @param isAllSome &#123;Boolean&#125; 是否2个tr的cols必须完全一样才能进行合并。true: 完全一样；false(默认): 不完全一样</span></span><br><span class=\"line\"><span class=\"comment\"> * @return void</span></span><br><span class=\"line\"><span class=\"comment\"> * @author polk6 2015/07/21</span></span><br><span class=\"line\"><span class=\"comment\"> * @example</span></span><br><span class=\"line\"><span class=\"comment\"> * ______________                                  ______________</span></span><br><span class=\"line\"><span class=\"comment\"> * | 年龄 | 姓名 |                                   | 年龄 | 姓名 |</span></span><br><span class=\"line\"><span class=\"comment\"> * --------------       mergeCells(grid, [0])      --------------</span></span><br><span class=\"line\"><span class=\"comment\"> * | 18  | 张三 |               =&gt;                  |     | 张三 |</span></span><br><span class=\"line\"><span class=\"comment\"> * --------------                                  |  18 |-------</span></span><br><span class=\"line\"><span class=\"comment\"> * | 18  | 王五 |                                   |     | 王五 |</span></span><br><span class=\"line\"><span class=\"comment\"> * --------------                                  --------------</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">mergeCells</span>(<span class=\"params\">grid, cols, isAllSome</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// do something</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-框架开发\"><a href=\"#3-框架开发\" class=\"headerlink\" title=\"3. 框架开发\"></a>3. 框架开发</h2><p>在团队开发或者引入第三方JS的时候，有时候会造成全局对象的命名冲突，比如a.js有个全局函数sendMsg()，b.js也有个全局函数sendMsg()，引入a.js和b.js文件时，会造成sendMsg()函数冲突。</p>\n<p>示例：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">全局变量冲突：b.js会覆盖a.js的同名函数                                // a.js</span><br><span class=\"line\">                                                                 ------------------------</span><br><span class=\"line\">                                                          +----&gt; | function sendMsg() &#123; |</span><br><span class=\"line\">&lt;script src=&quot;/js/b.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;---+      |     alert(&apos;a&apos;);      |</span><br><span class=\"line\">&lt;script src=&quot;/js/a.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;---+      | &#125;                    |</span><br><span class=\"line\">&lt;script type=&quot;text/javascript&quot;&gt;                           |      ------------------------</span><br><span class=\"line\">                                                          |      // b.js</span><br><span class=\"line\">    sendMsg(); // =&gt; ‘b’                                  |      -------------------------</span><br><span class=\"line\">                                                          |      | function sendMsg() &#123;  |</span><br><span class=\"line\">&lt;/script&gt;                                                 +----&gt; |     alert(&apos;b&apos;);       |</span><br><span class=\"line\">                                                                 | &#125;                     |</span><br><span class=\"line\">                                                                 -------------------------</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-2-单全局变量\"><a href=\"#3-2-单全局变量\" class=\"headerlink\" title=\"3.2 单全局变量\"></a>3.2 单全局变量</h3><p>所创建的全局对象名称是独一无二的，并将所有的功能代码添加到这个全局对象上。调用自己所写的代码时，以这个全局对象为入口。</p>\n<p>如：</p>\n<ul>\n<li>jQuery的全局对象：$和jQuery</li>\n<li>ExtJS的全局对象：Ext</li>\n</ul>\n<p>示例：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">全局变量冲突：b.js和a.js都有各自的主对象。                             // a.js</span><br><span class=\"line\">                                                                 -----------------------------</span><br><span class=\"line\">                                                                 | var A = A || &#123;&#125;;          |</span><br><span class=\"line\">                                                          +----&gt; | A.sendMsg = function () &#123; |</span><br><span class=\"line\">&lt;script src=&quot;/js/b.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;---+      |     alert(&apos;a&apos;);           |</span><br><span class=\"line\">&lt;script src=&quot;/js/a.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;---+      | &#125;                         |</span><br><span class=\"line\">&lt;script type=&quot;text/javascript&quot;&gt;                           |      -----------------------------</span><br><span class=\"line\">                                                          |      // b.js</span><br><span class=\"line\">    A.sendMsg(); // =&gt; ‘a’                                |      ------------------------------</span><br><span class=\"line\">                                                          |      | var B = B || &#123;&#125;;           |</span><br><span class=\"line\">                                                          |      | B.sendMsg = function () &#123;  |</span><br><span class=\"line\">    B.sendMsg(); // =&gt; &apos;b&apos;                                +----&gt; |     alert(&apos;b&apos;);            |</span><br><span class=\"line\">                                                                 | &#125;                          |</span><br><span class=\"line\">                                                                 ------------------------------</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-3-命名空间\"><a href=\"#3-3-命名空间\" class=\"headerlink\" title=\"3.3 命名空间\"></a>3.3 命名空间</h3><p>在项目规模日益壮大时，可采用命名空间的方式对JS代码进行规范：即将代码按照功能进行分组，以组的形式附加到单全局对象上。</p>\n<p>以Ext的chart模块为例：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">                                                       ------------</span><br><span class=\"line\">                                                 +---&gt; |   Axis   |</span><br><span class=\"line\">                                                 |     ------------</span><br><span class=\"line\">                                                 |     ------------</span><br><span class=\"line\">                                                 +---&gt; | Category |</span><br><span class=\"line\">                                    子模块名称     |     ------------</span><br><span class=\"line\">                                    ----------   |     ------------</span><br><span class=\"line\">                              +---&gt; |  axis  | --+---&gt; |    ...   |</span><br><span class=\"line\">                  模块名称     |      ----------         ------------</span><br><span class=\"line\">                  ---------   |     ----------         ------------</span><br><span class=\"line\">            +---&gt; | chart | --+---&gt; | series | --+---&gt; |   Area   |</span><br><span class=\"line\">单全局对象    |     ---------   |     ----------   |     ------------</span><br><span class=\"line\">---------   |                 |     ----------   |     ------------</span><br><span class=\"line\">|  Ext  | --+                 +---&gt; |  ...   |   +---&gt; |   Bar    |</span><br><span class=\"line\">---------   |                       ----------   |     ------------</span><br><span class=\"line\">            |     ---------                      |     ------------</span><br><span class=\"line\">            +---&gt; |  ...  |                      +---&gt; |   ...    |</span><br><span class=\"line\">                  ---------                            ------------</span><br></pre></td></tr></table></figure>"},{"title":"JavaScript设计模式（一）","date":"2017-06-13T00:58:29.000Z","_content":"\n## 创建对象的基本模式\n\nJavaScript中创建对象的基本模式有3种。第一种是门户大开型，它只能提供公用成员；第二种是使用下划线来表示方法或属性的私用性；第三种做法使用闭包来创建真正私用的成员，这些成员只能通过一些特权方法来访问。\n\n不能简单地说这些定义类的模式中哪种是‘正确的’。它们各有利弊。\n\n<!-- more -->\n\n### 门户大开型对象\n\n创建一个类，用一个函数来做其构造器。我们称其为门户大开型对象，因为它的所有属性和方法都是公开的、可访问的。这些公用属性要使用this关键字来创建：\n\n```javascript\nvar Book = function (isbn, title, author) {\n    if (isbn == undefined) throw new Error('Book constructor requires an isbn.');\n\n    this.isbn = isbn;\n    this.title = title || 'No title specified';\n    this.author = author || 'No author specified';\n}\n\nBook.prototype.display = function () {\n    ...\n};\n```\n\n乍一看这个类似乎符合一切需求。但是最大的问题是你无法检验ISBN数据的完整性，而不完整的ISBN数据有可能导致display方法失灵。这破坏了你与其他程序员之间的契约。如果Book对象在创建的时候没有抛出任何错误，那么display方法应该能够正常工作才是，但是由于没有进行完整性检查，这就不一定了。因此需要强化一下：\n\n```javascript\nvar Book = function (isbn, title, author) {\n    if (!this.checkIsbn(isbn) throw new Error('Book: Invalid ISBN.'));\n\n    this.isbn = isbn;\n    this.title = title || 'No title specified';\n    this.author = author || 'No author specified';\n}\n\nBook.prototype = {\n    checkIsbn: function (isbn) {\n        if (isbn == undefined || typeof isbn != 'string') {\n            return false;\n        }\n    }\n\n    isbn = isbn.replace(/-/, '');\n    if (isbn.length != 10 && isbn.length != 13) {\n        return false;\n    }\n\n    var sum = 0;\n    if (isbn.length === 10) {\n        if (!isbn.match(/^\\d{9}/)) {\n            return false;\n        }\n\n        for (var i = 0; i < 9; i++) {\n            sum += isbn.charAt(i) * (10 - i);\n        }\n\n        var checksum = sum % 11;\n        if (checksum === 10) checksum = 'X';\n        if (isbn.charAt(9) != checksum) {\n            return false;\n        }\n    } else {\n        if (!isbn.match(/^\\d{12}/)) {\n            return false;\n        }\n\n        for (var i = 0; i < 12; i++) {\n            sum += isbn.charAt(i) * ((i % 2 === 0) ? 1 : 3);\n        }\n\n        var checksum = sum % 10;\n        if (isbn.charAt(12) != checksum) {\n            return false;\n        }\n    },\n\n    display: function () {\n        ...\n    }\n}\n```\n现在看起来情况有所改善。在创建对象的时候可以对ISBN的有效性进行检查，这可以确保display方法能正常工作。但是现在又出现另一个问题。假设另一个程序员认识到一本书可能会有很多个版本，每个版本都有自己的ISBN。他设计了一个用来在这些不同版本之中进行选择的算法，并在实例化书籍对象之后直接用它修改isbn属性：\n\n```javascript\ntheHobbit.isbn = '978-0261103283';\ntheHobbit.display();\n```\n即使能在构造器中对数据的完整性进行检验，你对其他程序员会把什么样的值直接赋给isbn属性还是毫无控制。为了保护内部数据，你为每个属性都提供了取值器和赋值器方法。取值器方法用于获取属性值，而赋值器方法则用于设置属性值。通过使用赋值器，你可以把一个新值真正赋给属性之前进行各种检验。下面是加了取值器和赋值器方法之后的新版Book对象：\n\n```javascript\n// Interface类的源码见文章末尾\nvar Publication = new Interface('Publication', ['getIsbn', 'setIsbn', 'getTitle', 'setTitle', 'getAuthor', 'setAuthor', 'display']);\n\nvar Book = function (isbn, title, author) {\n    this.setIsbn(isbn);\n    this.setTitle(title);\n    this.setAuthor(author);\n};\n\nBook.prototype = {\n    checkIsbn: function (isbn) {\n        ...\n    },\n    getIsbn: function () {\n        return this.isbn;\n    },\n    setIsbn: function (isbn) {\n        if (!this.checkIsbn(isbn)) throw new Error('Book: Invalid ISBN.');\n        this.isbn = isbn;\n    },\n\n    getTitle: function () {\n        return this.title;\n    },\n    setTitle: function (title) {\n        this.title = title || 'No title specified';\n    },\n    getAuthor: function () {\n        return this.author;\n    },\n    setAuthor: function (author) {\n        this.author = author || 'No author specified';\n    },\n\n    display: function () {\n        ...\n    }\n};\n```\n虽然我们为设置属性提供了赋值器方法，但是那些属性仍然是公开的，可以被设置。\n\n### 用命名规范区别私用成员\n\n下划线是一个众所周知的命名规范，它表明一个属性（或方法）仅提供对象内部使用，直接访问它或者设置它可能会导致意想不到的后果。\n\n```javascript\nvar Book = function (isbn, title, author) {\n    this.setIsbn(isbn);\n    this.setTitle(title);\n    this.setAuthor(author);\n};\n\nBook.prototype = {\n    _checkIsbn: function (isbn) {\n        ...\n    },\n    getIsbn: function () {\n        return this._isbn;\n    },\n    setIsbn: function (isbn) {\n        if (!this._checkIsbn(isbn)) throw new Error('Book: Invalid ISBN.');\n        this._isbn = isbn;\n    },\n\n    getTitle: function () {\n        return this._title;\n    },\n    setTitle: function (title) {\n        this._title = title || 'No title specified';\n    },\n    getAuthor: function () {\n        return this._author;\n    },\n    setAuthor: function (author) {\n        this._author = author || 'No author specified';\n    },\n\n    display: function () {\n        ...\n    }\n};\n```\n这有助于程序员对它的无意使用，但是不能防止对它的有意使用。\n\n### 用闭包实现私用成员\n\n```javascript\nvar Book = function (newIsbn, newTitle, newAuthor) {\n\n    var isbn, title, author;\n\n    function checkIsbn(isbn) {\n        ...\n    }\n\n    this.getIsbn = function () {\n        return isbn;\n    };\n    this.setIsbn = function (newIsbn) {\n        if (!checkIsbn(newIsbn)) throw new Error('Book: Invalid ISBN.');\n        isbn = newIsbn;\n    };\n\n    this.getTitle = function () {\n        return title;\n    };\n    this.setTitle = function (newTitle) {\n        title = newTitle || 'No title specified';\n    };\n\n    this.getAuthor = function () {\n        return author;\n    };\n    this.setAuthor = function (newAuthor) {\n        author = newAuthor || 'No author specified';\n    };\n\n    this.setIsbn(newIsbn);\n    this.setTitle(newTitle);\n    this.setAuthor(newAuthor);\n};\n\nBook.prototype = {\n    display: function () {\n        ...\n    }\n};\n```\n\nInterface类的源码如下：\n```javascript\nvar Interface = function (name, methods) {\n    if (arguments.length != 2) {\n        throw new Error('Interface constructor called with ' + arguments.length\n        + 'arguments, but expected exactly 2.');\n    }\n\n    this.name = name;\n    this.methods = [];\n    for (var i = 0, len = methods.length; i < len; i++) {\n        if (typeof methods[i] !== 'string') {\n            throw new Error('Interface constructor expects method names to be '\n            + 'passed in as a string.');\n        }\n        this.methods.push(methods[i]);\n    }\n};\n\nInterface.ensureImplements = function (object) {\n    if (arguments.length < 2) {\n        throw new Error('Function Interface.ensureImplements called with '\n        + arguments.length + 'arguments, but expected at least 2.');\n    }\n\n    for (var i = 1, len = arguments.length; i < len; i++) {\n        var interface = arguments[i];\n        if (interface.constructor !== Interface) {\n            throw new Error('Function Interface.ensureImplements expects '\n            + 'arguments two and above to be instances of Interface.');\n        }\n\n        for (var j = 0, methodsLen = interface.methods.length; j < methodsLen; j++) {\n            var method =  interface.methods[j];\n            if (!object[method] || typeof object[method] !== 'function') {\n                throw new Error('Function Interface.ensureImplements: object '\n                + 'does not implement the ' + interface.name\n                + 'interface. Method ' + method + 'was not found.');\n            }\n        }\n    }\n};\n```\n","source":"_posts/2017-06-13-JavaScript设计模式（一）.md","raw":"---\ntitle: JavaScript设计模式（一）\ndate: 2017-06-13 08:58:29\ntags:\n- JavaScript\n- 设计模式\ncategories:\n- 笔记\n---\n\n## 创建对象的基本模式\n\nJavaScript中创建对象的基本模式有3种。第一种是门户大开型，它只能提供公用成员；第二种是使用下划线来表示方法或属性的私用性；第三种做法使用闭包来创建真正私用的成员，这些成员只能通过一些特权方法来访问。\n\n不能简单地说这些定义类的模式中哪种是‘正确的’。它们各有利弊。\n\n<!-- more -->\n\n### 门户大开型对象\n\n创建一个类，用一个函数来做其构造器。我们称其为门户大开型对象，因为它的所有属性和方法都是公开的、可访问的。这些公用属性要使用this关键字来创建：\n\n```javascript\nvar Book = function (isbn, title, author) {\n    if (isbn == undefined) throw new Error('Book constructor requires an isbn.');\n\n    this.isbn = isbn;\n    this.title = title || 'No title specified';\n    this.author = author || 'No author specified';\n}\n\nBook.prototype.display = function () {\n    ...\n};\n```\n\n乍一看这个类似乎符合一切需求。但是最大的问题是你无法检验ISBN数据的完整性，而不完整的ISBN数据有可能导致display方法失灵。这破坏了你与其他程序员之间的契约。如果Book对象在创建的时候没有抛出任何错误，那么display方法应该能够正常工作才是，但是由于没有进行完整性检查，这就不一定了。因此需要强化一下：\n\n```javascript\nvar Book = function (isbn, title, author) {\n    if (!this.checkIsbn(isbn) throw new Error('Book: Invalid ISBN.'));\n\n    this.isbn = isbn;\n    this.title = title || 'No title specified';\n    this.author = author || 'No author specified';\n}\n\nBook.prototype = {\n    checkIsbn: function (isbn) {\n        if (isbn == undefined || typeof isbn != 'string') {\n            return false;\n        }\n    }\n\n    isbn = isbn.replace(/-/, '');\n    if (isbn.length != 10 && isbn.length != 13) {\n        return false;\n    }\n\n    var sum = 0;\n    if (isbn.length === 10) {\n        if (!isbn.match(/^\\d{9}/)) {\n            return false;\n        }\n\n        for (var i = 0; i < 9; i++) {\n            sum += isbn.charAt(i) * (10 - i);\n        }\n\n        var checksum = sum % 11;\n        if (checksum === 10) checksum = 'X';\n        if (isbn.charAt(9) != checksum) {\n            return false;\n        }\n    } else {\n        if (!isbn.match(/^\\d{12}/)) {\n            return false;\n        }\n\n        for (var i = 0; i < 12; i++) {\n            sum += isbn.charAt(i) * ((i % 2 === 0) ? 1 : 3);\n        }\n\n        var checksum = sum % 10;\n        if (isbn.charAt(12) != checksum) {\n            return false;\n        }\n    },\n\n    display: function () {\n        ...\n    }\n}\n```\n现在看起来情况有所改善。在创建对象的时候可以对ISBN的有效性进行检查，这可以确保display方法能正常工作。但是现在又出现另一个问题。假设另一个程序员认识到一本书可能会有很多个版本，每个版本都有自己的ISBN。他设计了一个用来在这些不同版本之中进行选择的算法，并在实例化书籍对象之后直接用它修改isbn属性：\n\n```javascript\ntheHobbit.isbn = '978-0261103283';\ntheHobbit.display();\n```\n即使能在构造器中对数据的完整性进行检验，你对其他程序员会把什么样的值直接赋给isbn属性还是毫无控制。为了保护内部数据，你为每个属性都提供了取值器和赋值器方法。取值器方法用于获取属性值，而赋值器方法则用于设置属性值。通过使用赋值器，你可以把一个新值真正赋给属性之前进行各种检验。下面是加了取值器和赋值器方法之后的新版Book对象：\n\n```javascript\n// Interface类的源码见文章末尾\nvar Publication = new Interface('Publication', ['getIsbn', 'setIsbn', 'getTitle', 'setTitle', 'getAuthor', 'setAuthor', 'display']);\n\nvar Book = function (isbn, title, author) {\n    this.setIsbn(isbn);\n    this.setTitle(title);\n    this.setAuthor(author);\n};\n\nBook.prototype = {\n    checkIsbn: function (isbn) {\n        ...\n    },\n    getIsbn: function () {\n        return this.isbn;\n    },\n    setIsbn: function (isbn) {\n        if (!this.checkIsbn(isbn)) throw new Error('Book: Invalid ISBN.');\n        this.isbn = isbn;\n    },\n\n    getTitle: function () {\n        return this.title;\n    },\n    setTitle: function (title) {\n        this.title = title || 'No title specified';\n    },\n    getAuthor: function () {\n        return this.author;\n    },\n    setAuthor: function (author) {\n        this.author = author || 'No author specified';\n    },\n\n    display: function () {\n        ...\n    }\n};\n```\n虽然我们为设置属性提供了赋值器方法，但是那些属性仍然是公开的，可以被设置。\n\n### 用命名规范区别私用成员\n\n下划线是一个众所周知的命名规范，它表明一个属性（或方法）仅提供对象内部使用，直接访问它或者设置它可能会导致意想不到的后果。\n\n```javascript\nvar Book = function (isbn, title, author) {\n    this.setIsbn(isbn);\n    this.setTitle(title);\n    this.setAuthor(author);\n};\n\nBook.prototype = {\n    _checkIsbn: function (isbn) {\n        ...\n    },\n    getIsbn: function () {\n        return this._isbn;\n    },\n    setIsbn: function (isbn) {\n        if (!this._checkIsbn(isbn)) throw new Error('Book: Invalid ISBN.');\n        this._isbn = isbn;\n    },\n\n    getTitle: function () {\n        return this._title;\n    },\n    setTitle: function (title) {\n        this._title = title || 'No title specified';\n    },\n    getAuthor: function () {\n        return this._author;\n    },\n    setAuthor: function (author) {\n        this._author = author || 'No author specified';\n    },\n\n    display: function () {\n        ...\n    }\n};\n```\n这有助于程序员对它的无意使用，但是不能防止对它的有意使用。\n\n### 用闭包实现私用成员\n\n```javascript\nvar Book = function (newIsbn, newTitle, newAuthor) {\n\n    var isbn, title, author;\n\n    function checkIsbn(isbn) {\n        ...\n    }\n\n    this.getIsbn = function () {\n        return isbn;\n    };\n    this.setIsbn = function (newIsbn) {\n        if (!checkIsbn(newIsbn)) throw new Error('Book: Invalid ISBN.');\n        isbn = newIsbn;\n    };\n\n    this.getTitle = function () {\n        return title;\n    };\n    this.setTitle = function (newTitle) {\n        title = newTitle || 'No title specified';\n    };\n\n    this.getAuthor = function () {\n        return author;\n    };\n    this.setAuthor = function (newAuthor) {\n        author = newAuthor || 'No author specified';\n    };\n\n    this.setIsbn(newIsbn);\n    this.setTitle(newTitle);\n    this.setAuthor(newAuthor);\n};\n\nBook.prototype = {\n    display: function () {\n        ...\n    }\n};\n```\n\nInterface类的源码如下：\n```javascript\nvar Interface = function (name, methods) {\n    if (arguments.length != 2) {\n        throw new Error('Interface constructor called with ' + arguments.length\n        + 'arguments, but expected exactly 2.');\n    }\n\n    this.name = name;\n    this.methods = [];\n    for (var i = 0, len = methods.length; i < len; i++) {\n        if (typeof methods[i] !== 'string') {\n            throw new Error('Interface constructor expects method names to be '\n            + 'passed in as a string.');\n        }\n        this.methods.push(methods[i]);\n    }\n};\n\nInterface.ensureImplements = function (object) {\n    if (arguments.length < 2) {\n        throw new Error('Function Interface.ensureImplements called with '\n        + arguments.length + 'arguments, but expected at least 2.');\n    }\n\n    for (var i = 1, len = arguments.length; i < len; i++) {\n        var interface = arguments[i];\n        if (interface.constructor !== Interface) {\n            throw new Error('Function Interface.ensureImplements expects '\n            + 'arguments two and above to be instances of Interface.');\n        }\n\n        for (var j = 0, methodsLen = interface.methods.length; j < methodsLen; j++) {\n            var method =  interface.methods[j];\n            if (!object[method] || typeof object[method] !== 'function') {\n                throw new Error('Function Interface.ensureImplements: object '\n                + 'does not implement the ' + interface.name\n                + 'interface. Method ' + method + 'was not found.');\n            }\n        }\n    }\n};\n```\n","slug":"JavaScript设计模式（一）","published":1,"updated":"2018-03-27T13:52:33.770Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjskilapt0057g9zboqv43c9s","content":"<h2 id=\"创建对象的基本模式\"><a href=\"#创建对象的基本模式\" class=\"headerlink\" title=\"创建对象的基本模式\"></a>创建对象的基本模式</h2><p>JavaScript中创建对象的基本模式有3种。第一种是门户大开型，它只能提供公用成员；第二种是使用下划线来表示方法或属性的私用性；第三种做法使用闭包来创建真正私用的成员，这些成员只能通过一些特权方法来访问。</p>\n<p>不能简单地说这些定义类的模式中哪种是‘正确的’。它们各有利弊。</p>\n<a id=\"more\"></a>\n<h3 id=\"门户大开型对象\"><a href=\"#门户大开型对象\" class=\"headerlink\" title=\"门户大开型对象\"></a>门户大开型对象</h3><p>创建一个类，用一个函数来做其构造器。我们称其为门户大开型对象，因为它的所有属性和方法都是公开的、可访问的。这些公用属性要使用this关键字来创建：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> Book = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">isbn, title, author</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (isbn == <span class=\"literal\">undefined</span>) <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'Book constructor requires an isbn.'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.isbn = isbn;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.title = title || <span class=\"string\">'No title specified'</span>;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.author = author || <span class=\"string\">'No author specified'</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Book.prototype.display = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>乍一看这个类似乎符合一切需求。但是最大的问题是你无法检验ISBN数据的完整性，而不完整的ISBN数据有可能导致display方法失灵。这破坏了你与其他程序员之间的契约。如果Book对象在创建的时候没有抛出任何错误，那么display方法应该能够正常工作才是，但是由于没有进行完整性检查，这就不一定了。因此需要强化一下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> Book = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">isbn, title, author</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!<span class=\"keyword\">this</span>.checkIsbn(isbn) <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'Book: Invalid ISBN.'</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.isbn = isbn;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.title = title || <span class=\"string\">'No title specified'</span>;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.author = author || <span class=\"string\">'No author specified'</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Book.prototype = &#123;</span><br><span class=\"line\">    checkIsbn: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">isbn</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (isbn == <span class=\"literal\">undefined</span> || <span class=\"keyword\">typeof</span> isbn != <span class=\"string\">'string'</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    isbn = isbn.replace(<span class=\"regexp\">/-/</span>, <span class=\"string\">''</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (isbn.length != <span class=\"number\">10</span> &amp;&amp; isbn.length != <span class=\"number\">13</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (isbn.length === <span class=\"number\">10</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!isbn.match(<span class=\"regexp\">/^\\d&#123;9&#125;/</span>)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">9</span>; i++) &#123;</span><br><span class=\"line\">            sum += isbn.charAt(i) * (<span class=\"number\">10</span> - i);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">var</span> checksum = sum % <span class=\"number\">11</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (checksum === <span class=\"number\">10</span>) checksum = <span class=\"string\">'X'</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (isbn.charAt(<span class=\"number\">9</span>) != checksum) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!isbn.match(<span class=\"regexp\">/^\\d&#123;12&#125;/</span>)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">12</span>; i++) &#123;</span><br><span class=\"line\">            sum += isbn.charAt(i) * ((i % <span class=\"number\">2</span> === <span class=\"number\">0</span>) ? <span class=\"number\">1</span> : <span class=\"number\">3</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">var</span> checksum = sum % <span class=\"number\">10</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (isbn.charAt(<span class=\"number\">12</span>) != checksum) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    display: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        ...</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>现在看起来情况有所改善。在创建对象的时候可以对ISBN的有效性进行检查，这可以确保display方法能正常工作。但是现在又出现另一个问题。假设另一个程序员认识到一本书可能会有很多个版本，每个版本都有自己的ISBN。他设计了一个用来在这些不同版本之中进行选择的算法，并在实例化书籍对象之后直接用它修改isbn属性：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">theHobbit.isbn = <span class=\"string\">'978-0261103283'</span>;</span><br><span class=\"line\">theHobbit.display();</span><br></pre></td></tr></table></figure>\n<p>即使能在构造器中对数据的完整性进行检验，你对其他程序员会把什么样的值直接赋给isbn属性还是毫无控制。为了保护内部数据，你为每个属性都提供了取值器和赋值器方法。取值器方法用于获取属性值，而赋值器方法则用于设置属性值。通过使用赋值器，你可以把一个新值真正赋给属性之前进行各种检验。下面是加了取值器和赋值器方法之后的新版Book对象：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Interface类的源码见文章末尾</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> Publication = <span class=\"keyword\">new</span> Interface(<span class=\"string\">'Publication'</span>, [<span class=\"string\">'getIsbn'</span>, <span class=\"string\">'setIsbn'</span>, <span class=\"string\">'getTitle'</span>, <span class=\"string\">'setTitle'</span>, <span class=\"string\">'getAuthor'</span>, <span class=\"string\">'setAuthor'</span>, <span class=\"string\">'display'</span>]);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> Book = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">isbn, title, author</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.setIsbn(isbn);</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.setTitle(title);</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.setAuthor(author);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">Book.prototype = &#123;</span><br><span class=\"line\">    checkIsbn: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">isbn</span>) </span>&#123;</span><br><span class=\"line\">        ...</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    getIsbn: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.isbn;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    setIsbn: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">isbn</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!<span class=\"keyword\">this</span>.checkIsbn(isbn)) <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'Book: Invalid ISBN.'</span>);</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.isbn = isbn;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    getTitle: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.title;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    setTitle: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">title</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.title = title || <span class=\"string\">'No title specified'</span>;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    getAuthor: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.author;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    setAuthor: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">author</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.author = author || <span class=\"string\">'No author specified'</span>;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    display: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        ...</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>虽然我们为设置属性提供了赋值器方法，但是那些属性仍然是公开的，可以被设置。</p>\n<h3 id=\"用命名规范区别私用成员\"><a href=\"#用命名规范区别私用成员\" class=\"headerlink\" title=\"用命名规范区别私用成员\"></a>用命名规范区别私用成员</h3><p>下划线是一个众所周知的命名规范，它表明一个属性（或方法）仅提供对象内部使用，直接访问它或者设置它可能会导致意想不到的后果。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> Book = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">isbn, title, author</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.setIsbn(isbn);</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.setTitle(title);</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.setAuthor(author);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">Book.prototype = &#123;</span><br><span class=\"line\">    _checkIsbn: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">isbn</span>) </span>&#123;</span><br><span class=\"line\">        ...</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    getIsbn: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>._isbn;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    setIsbn: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">isbn</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!<span class=\"keyword\">this</span>._checkIsbn(isbn)) <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'Book: Invalid ISBN.'</span>);</span><br><span class=\"line\">        <span class=\"keyword\">this</span>._isbn = isbn;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    getTitle: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>._title;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    setTitle: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">title</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>._title = title || <span class=\"string\">'No title specified'</span>;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    getAuthor: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>._author;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    setAuthor: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">author</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>._author = author || <span class=\"string\">'No author specified'</span>;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    display: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        ...</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>这有助于程序员对它的无意使用，但是不能防止对它的有意使用。</p>\n<h3 id=\"用闭包实现私用成员\"><a href=\"#用闭包实现私用成员\" class=\"headerlink\" title=\"用闭包实现私用成员\"></a>用闭包实现私用成员</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> Book = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">newIsbn, newTitle, newAuthor</span>) </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> isbn, title, author;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">checkIsbn</span>(<span class=\"params\">isbn</span>) </span>&#123;</span><br><span class=\"line\">        ...</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.getIsbn = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> isbn;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.setIsbn = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">newIsbn</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!checkIsbn(newIsbn)) <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'Book: Invalid ISBN.'</span>);</span><br><span class=\"line\">        isbn = newIsbn;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.getTitle = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> title;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.setTitle = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">newTitle</span>) </span>&#123;</span><br><span class=\"line\">        title = newTitle || <span class=\"string\">'No title specified'</span>;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.getAuthor = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> author;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.setAuthor = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">newAuthor</span>) </span>&#123;</span><br><span class=\"line\">        author = newAuthor || <span class=\"string\">'No author specified'</span>;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.setIsbn(newIsbn);</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.setTitle(newTitle);</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.setAuthor(newAuthor);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">Book.prototype = &#123;</span><br><span class=\"line\">    display: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        ...</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>Interface类的源码如下：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> Interface = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">name, methods</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">arguments</span>.length != <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'Interface constructor called with '</span> + <span class=\"built_in\">arguments</span>.length</span><br><span class=\"line\">        + <span class=\"string\">'arguments, but expected exactly 2.'</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.methods = [];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>, len = methods.length; i &lt; len; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> methods[i] !== <span class=\"string\">'string'</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'Interface constructor expects method names to be '</span></span><br><span class=\"line\">            + <span class=\"string\">'passed in as a string.'</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.methods.push(methods[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">Interface.ensureImplements = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">object</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">arguments</span>.length &lt; <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'Function Interface.ensureImplements called with '</span></span><br><span class=\"line\">        + <span class=\"built_in\">arguments</span>.length + <span class=\"string\">'arguments, but expected at least 2.'</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">1</span>, len = <span class=\"built_in\">arguments</span>.length; i &lt; len; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> interface = <span class=\"built_in\">arguments</span>[i];</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (interface.constructor !== Interface) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'Function Interface.ensureImplements expects '</span></span><br><span class=\"line\">            + <span class=\"string\">'arguments two and above to be instances of Interface.'</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> j = <span class=\"number\">0</span>, methodsLen = interface.methods.length; j &lt; methodsLen; j++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> method =  interface.methods[j];</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!object[method] || <span class=\"keyword\">typeof</span> object[method] !== <span class=\"string\">'function'</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'Function Interface.ensureImplements: object '</span></span><br><span class=\"line\">                + <span class=\"string\">'does not implement the '</span> + interface.name</span><br><span class=\"line\">                + <span class=\"string\">'interface. Method '</span> + method + <span class=\"string\">'was not found.'</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{"next":{"favicon":"/favicon.ico","keywords":"Hexo, NexT","rss":null,"since":2016,"authoricon":"heart","copyright":true,"canonical":true,"seo":true,"index_with_subtitle":false,"menu":{"home":"/","categories":"/categories/","archives":"/archives/","tags":"/tags/","about":"/about/"},"menu_icons":{"enable":true,"home":"home","about":"user","categories":"th","schedule":"calendar","tags":"tags","archives":"archive","sitemap":"sitemap","commonweal":"heartbeat"},"scheme":"Mist","social":{"Github":"https://github.com/ricosmall"},"social_icons":{"enable":true,"GitHub":"github","Twitter":"twitter","Weibo":"weibo"},"avatar":"/uploads/avatar.png","toc":{"enable":true,"number":true,"wrap":false},"sidebar":{"position":"left","display":"post","offset":12,"offset_float":0,"b2t":false,"scrollpercent":false,"onmobile":false},"scroll_to_more":true,"save_scroll":false,"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"post_meta":{"item_text":true,"created_at":true,"updated_at":false,"categories":true},"post_wordcount":{"item_text":true,"wordcount":false,"min2read":false,"separated_meta":true},"post_copyright":{"enable":false,"license":"CC BY-NC-SA 3.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/3.0/"},"custom_logo":{"enabled":false,"image":null},"highlight_theme":"night bright","font":{"enable":true,"host":null,"global":{"external":true,"family":"Lato"},"headings":{"external":true,"family":null},"posts":{"external":true,"family":null},"logo":{"external":true,"family":null,"size":null},"codes":{"external":true,"family":"Menlo, Monospace","size":null}},"mathjax":{"enable":true,"per_page":false,"cdn":"//cdn.bootcss.com/mathjax/2.7.1/latest.js?config=TeX-AMS-MML_HTMLorMML"},"han":false,"disqus":{"enable":false,"shortname":"ricosmall","count":false},"changyan":{"enable":false,"appid":null,"appkey":null},"duoshuo_info":{"ua_enable":true,"admin_enable":false,"user_id":0},"facebook_sdk":{"enable":false,"app_id":null,"fb_admin":null,"like_button":null,"webmaster":null},"facebook_comments_plugin":{"enable":false,"num_of_posts":10,"width":"100%","scheme":"light"},"vkontakte_api":{"enable":false,"app_id":null,"like":true,"comments":true,"num_of_posts":10},"rating":{"enable":false,"id":null,"color":"fc6423"},"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null},"busuanzi_count":{"enable":true,"site_uv":true,"site_uv_header":"<i class=\"fa fa-user\"></i>访问人数","site_uv_footer":null,"site_pv":true,"site_pv_header":"<i class=\"fa fa-eye\"></i>总访问量","site_pv_footer":"次","page_pv":true,"page_pv_header":"<i class=\"fa fa-file-o\"></i>浏览","page_pv_footer":"次"},"baidu_push":false,"calendar":{"enable":false,"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"timeZone":null,"showDeleted":false,"singleEvents":true,"maxResults":250},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1},"exturl":false,"use_motion":true,"fancybox":true,"pace":false,"pace_theme":"pace-theme-minimal","canvas_nest":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false,"canvas_ribbon":false,"vendors":{"_internal":"lib","jquery":null,"fancybox":null,"fancybox_css":null,"fastclick":null,"lazyload":null,"velocity":null,"velocity_ui":null,"ua_parser":null,"fontawesome":null,"algolia_instant_js":null,"algolia_instant_css":null,"pace":null,"pace_css":null,"canvas_nest":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_ribbon":null,"han":null},"css":"css","js":"js","images":"images","version":"5.1.1"}}},"excerpt":"<h2 id=\"创建对象的基本模式\"><a href=\"#创建对象的基本模式\" class=\"headerlink\" title=\"创建对象的基本模式\"></a>创建对象的基本模式</h2><p>JavaScript中创建对象的基本模式有3种。第一种是门户大开型，它只能提供公用成员；第二种是使用下划线来表示方法或属性的私用性；第三种做法使用闭包来创建真正私用的成员，这些成员只能通过一些特权方法来访问。</p>\n<p>不能简单地说这些定义类的模式中哪种是‘正确的’。它们各有利弊。</p>","more":"<h3 id=\"门户大开型对象\"><a href=\"#门户大开型对象\" class=\"headerlink\" title=\"门户大开型对象\"></a>门户大开型对象</h3><p>创建一个类，用一个函数来做其构造器。我们称其为门户大开型对象，因为它的所有属性和方法都是公开的、可访问的。这些公用属性要使用this关键字来创建：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> Book = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">isbn, title, author</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (isbn == <span class=\"literal\">undefined</span>) <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'Book constructor requires an isbn.'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.isbn = isbn;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.title = title || <span class=\"string\">'No title specified'</span>;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.author = author || <span class=\"string\">'No author specified'</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Book.prototype.display = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>乍一看这个类似乎符合一切需求。但是最大的问题是你无法检验ISBN数据的完整性，而不完整的ISBN数据有可能导致display方法失灵。这破坏了你与其他程序员之间的契约。如果Book对象在创建的时候没有抛出任何错误，那么display方法应该能够正常工作才是，但是由于没有进行完整性检查，这就不一定了。因此需要强化一下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> Book = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">isbn, title, author</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!<span class=\"keyword\">this</span>.checkIsbn(isbn) <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'Book: Invalid ISBN.'</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.isbn = isbn;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.title = title || <span class=\"string\">'No title specified'</span>;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.author = author || <span class=\"string\">'No author specified'</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Book.prototype = &#123;</span><br><span class=\"line\">    checkIsbn: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">isbn</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (isbn == <span class=\"literal\">undefined</span> || <span class=\"keyword\">typeof</span> isbn != <span class=\"string\">'string'</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    isbn = isbn.replace(<span class=\"regexp\">/-/</span>, <span class=\"string\">''</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (isbn.length != <span class=\"number\">10</span> &amp;&amp; isbn.length != <span class=\"number\">13</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (isbn.length === <span class=\"number\">10</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!isbn.match(<span class=\"regexp\">/^\\d&#123;9&#125;/</span>)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">9</span>; i++) &#123;</span><br><span class=\"line\">            sum += isbn.charAt(i) * (<span class=\"number\">10</span> - i);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">var</span> checksum = sum % <span class=\"number\">11</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (checksum === <span class=\"number\">10</span>) checksum = <span class=\"string\">'X'</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (isbn.charAt(<span class=\"number\">9</span>) != checksum) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!isbn.match(<span class=\"regexp\">/^\\d&#123;12&#125;/</span>)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">12</span>; i++) &#123;</span><br><span class=\"line\">            sum += isbn.charAt(i) * ((i % <span class=\"number\">2</span> === <span class=\"number\">0</span>) ? <span class=\"number\">1</span> : <span class=\"number\">3</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">var</span> checksum = sum % <span class=\"number\">10</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (isbn.charAt(<span class=\"number\">12</span>) != checksum) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    display: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        ...</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>现在看起来情况有所改善。在创建对象的时候可以对ISBN的有效性进行检查，这可以确保display方法能正常工作。但是现在又出现另一个问题。假设另一个程序员认识到一本书可能会有很多个版本，每个版本都有自己的ISBN。他设计了一个用来在这些不同版本之中进行选择的算法，并在实例化书籍对象之后直接用它修改isbn属性：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">theHobbit.isbn = <span class=\"string\">'978-0261103283'</span>;</span><br><span class=\"line\">theHobbit.display();</span><br></pre></td></tr></table></figure>\n<p>即使能在构造器中对数据的完整性进行检验，你对其他程序员会把什么样的值直接赋给isbn属性还是毫无控制。为了保护内部数据，你为每个属性都提供了取值器和赋值器方法。取值器方法用于获取属性值，而赋值器方法则用于设置属性值。通过使用赋值器，你可以把一个新值真正赋给属性之前进行各种检验。下面是加了取值器和赋值器方法之后的新版Book对象：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Interface类的源码见文章末尾</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> Publication = <span class=\"keyword\">new</span> Interface(<span class=\"string\">'Publication'</span>, [<span class=\"string\">'getIsbn'</span>, <span class=\"string\">'setIsbn'</span>, <span class=\"string\">'getTitle'</span>, <span class=\"string\">'setTitle'</span>, <span class=\"string\">'getAuthor'</span>, <span class=\"string\">'setAuthor'</span>, <span class=\"string\">'display'</span>]);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> Book = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">isbn, title, author</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.setIsbn(isbn);</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.setTitle(title);</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.setAuthor(author);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">Book.prototype = &#123;</span><br><span class=\"line\">    checkIsbn: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">isbn</span>) </span>&#123;</span><br><span class=\"line\">        ...</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    getIsbn: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.isbn;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    setIsbn: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">isbn</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!<span class=\"keyword\">this</span>.checkIsbn(isbn)) <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'Book: Invalid ISBN.'</span>);</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.isbn = isbn;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    getTitle: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.title;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    setTitle: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">title</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.title = title || <span class=\"string\">'No title specified'</span>;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    getAuthor: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.author;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    setAuthor: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">author</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.author = author || <span class=\"string\">'No author specified'</span>;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    display: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        ...</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>虽然我们为设置属性提供了赋值器方法，但是那些属性仍然是公开的，可以被设置。</p>\n<h3 id=\"用命名规范区别私用成员\"><a href=\"#用命名规范区别私用成员\" class=\"headerlink\" title=\"用命名规范区别私用成员\"></a>用命名规范区别私用成员</h3><p>下划线是一个众所周知的命名规范，它表明一个属性（或方法）仅提供对象内部使用，直接访问它或者设置它可能会导致意想不到的后果。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> Book = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">isbn, title, author</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.setIsbn(isbn);</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.setTitle(title);</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.setAuthor(author);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">Book.prototype = &#123;</span><br><span class=\"line\">    _checkIsbn: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">isbn</span>) </span>&#123;</span><br><span class=\"line\">        ...</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    getIsbn: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>._isbn;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    setIsbn: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">isbn</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!<span class=\"keyword\">this</span>._checkIsbn(isbn)) <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'Book: Invalid ISBN.'</span>);</span><br><span class=\"line\">        <span class=\"keyword\">this</span>._isbn = isbn;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    getTitle: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>._title;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    setTitle: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">title</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>._title = title || <span class=\"string\">'No title specified'</span>;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    getAuthor: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>._author;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    setAuthor: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">author</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>._author = author || <span class=\"string\">'No author specified'</span>;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    display: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        ...</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>这有助于程序员对它的无意使用，但是不能防止对它的有意使用。</p>\n<h3 id=\"用闭包实现私用成员\"><a href=\"#用闭包实现私用成员\" class=\"headerlink\" title=\"用闭包实现私用成员\"></a>用闭包实现私用成员</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> Book = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">newIsbn, newTitle, newAuthor</span>) </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> isbn, title, author;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">checkIsbn</span>(<span class=\"params\">isbn</span>) </span>&#123;</span><br><span class=\"line\">        ...</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.getIsbn = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> isbn;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.setIsbn = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">newIsbn</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!checkIsbn(newIsbn)) <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'Book: Invalid ISBN.'</span>);</span><br><span class=\"line\">        isbn = newIsbn;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.getTitle = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> title;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.setTitle = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">newTitle</span>) </span>&#123;</span><br><span class=\"line\">        title = newTitle || <span class=\"string\">'No title specified'</span>;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.getAuthor = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> author;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.setAuthor = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">newAuthor</span>) </span>&#123;</span><br><span class=\"line\">        author = newAuthor || <span class=\"string\">'No author specified'</span>;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.setIsbn(newIsbn);</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.setTitle(newTitle);</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.setAuthor(newAuthor);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">Book.prototype = &#123;</span><br><span class=\"line\">    display: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        ...</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>Interface类的源码如下：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> Interface = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">name, methods</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">arguments</span>.length != <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'Interface constructor called with '</span> + <span class=\"built_in\">arguments</span>.length</span><br><span class=\"line\">        + <span class=\"string\">'arguments, but expected exactly 2.'</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.methods = [];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>, len = methods.length; i &lt; len; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> methods[i] !== <span class=\"string\">'string'</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'Interface constructor expects method names to be '</span></span><br><span class=\"line\">            + <span class=\"string\">'passed in as a string.'</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.methods.push(methods[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">Interface.ensureImplements = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">object</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">arguments</span>.length &lt; <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'Function Interface.ensureImplements called with '</span></span><br><span class=\"line\">        + <span class=\"built_in\">arguments</span>.length + <span class=\"string\">'arguments, but expected at least 2.'</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">1</span>, len = <span class=\"built_in\">arguments</span>.length; i &lt; len; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> interface = <span class=\"built_in\">arguments</span>[i];</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (interface.constructor !== Interface) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'Function Interface.ensureImplements expects '</span></span><br><span class=\"line\">            + <span class=\"string\">'arguments two and above to be instances of Interface.'</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> j = <span class=\"number\">0</span>, methodsLen = interface.methods.length; j &lt; methodsLen; j++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> method =  interface.methods[j];</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!object[method] || <span class=\"keyword\">typeof</span> object[method] !== <span class=\"string\">'function'</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'Function Interface.ensureImplements: object '</span></span><br><span class=\"line\">                + <span class=\"string\">'does not implement the '</span> + interface.name</span><br><span class=\"line\">                + <span class=\"string\">'interface. Method '</span> + method + <span class=\"string\">'was not found.'</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></p>"},{"title":"Linux下SVN账号密码保存方法","date":"2017-10-18T01:47:11.000Z","_content":"\nLinux下进行SVN操作的时候总是提示要输入密码，很不方便，尤其是集成到`npm scripts`上的时候，你不想明写密码，但是如果不写，每次都提示要输入密码，不同用户协作起来更加麻烦。\n\n<!-- more -->\n\n## 修改配置文件`config`\n\n文件位置`/home/[username]/.subversion/config`\n\n用vim打开\n\n```bash\nvim /home/[username]/.subversion/config\n```\n\n原配置文件：\n\n```\n### This file configures various client-side behaviors.\n###\n### The commented-out examples below are intended to demonstrate\n### how to use this file.\n\n### Section for authentication and authorization customizations.\n[auth]\n### Set password stores used by Subversion. They should be\n### delimited by spaces or commas. The order of values determines\n### the order in which password stores are used.\n### Valid password stores:\n###   gnome-keyring        (Unix-like systems)\n###   kwallet              (Unix-like systems)\n###   gpg-agent            (Unix-like systems)\n###   keychain             (Mac OS X)\n###   windows-cryptoapi    (Windows)\n# password-stores = gpg-agent,gnome-keyring,kwallet\n### To disable all password stores, use an empty list:\n# password-stores =\n###\n### Set KWallet wallet used by Subversion. If empty or unset,\n### then the default network wallet will be used.\n# kwallet-wallet =\n###\n### Include PID (Process ID) in Subversion application name when\n### using KWallet. It defaults to 'no'.\n# kwallet-svn-application-name-with-pid = yes\n###\n### Set ssl-client-cert-file-prompt to 'yes' to cause the client\n### to prompt for a path to a client cert file when the server\n### requests a client cert but no client cert file is found in the\n### expected place (see the 'ssl-client-cert-file' option in the\n### 'servers' configuration file). Defaults to 'no'.\n# ssl-client-cert-file-prompt = no\n###\n### The rest of the [auth] section in this file has been deprecated.\n### Both 'store-passwords' and 'store-auth-creds' can now be\n### specified in the 'servers' file in your config directory\n### and are documented there. Anything specified in this section\n### is overridden by settings specified in the 'servers' file.\n# store-passwords = no\n# store-auth-creds = no\n\n### Section for configuring external helper applications.\n[helpers]\n### Set editor-cmd to the command used to invoke your text editor.\n###   This will override the environment variables that Subversion\n###   examines by default to find this information ($EDITOR,\n###   et al).\n# editor-cmd = editor (vi, emacs, notepad, etc.)\neditor-cmd = vim\n### Set diff-cmd to the absolute path of your 'diff' program.\n###   This will override the compile-time default, which is to use\n###   Subversion's internal diff implementation.\n# diff-cmd = diff_program (diff, gdiff, etc.)\ndiff-cmd = /usr/local/bin/svndiff.sh\n### Diff-extensions are arguments passed to an external diff\n### program or to Subversion's internal diff implementation.\n### Set diff-extensions to override the default arguments ('-u').\n# diff-extensions = -u -p\n### Set diff3-cmd to the absolute path of your 'diff3' program.\n###   This will override the compile-time default, which is to use\n###   Subversion's internal diff3 implementation.\n# diff3-cmd = diff3_program (diff3, gdiff3, etc.)\n### Set diff3-has-program-arg to 'yes' if your 'diff3' program\n###   accepts the '--diff-program' option.\n# diff3-has-program-arg = [yes | no]\n### Set merge-tool-cmd to the command used to invoke your external\n### merging tool of choice. Subversion will pass 5 arguments to\n### the specified command: base theirs mine merged wcfile\n# merge-tool-cmd = merge_command\n\n### Section for configuring tunnel agents.\n[tunnels]\n### Configure svn protocol tunnel schemes here.  By default, only\n### the 'ssh' scheme is defined.  You can define other schemes to\n### be used with 'svn+scheme://hostname/path' URLs.  A scheme\n### definition is simply a command, optionally prefixed by an\n### environment variable name which can override the command if it\n### is defined.  The command (or environment variable) may contain\n### arguments, using standard shell quoting for arguments with\n### spaces.  The command will be invoked as:\n###   <command> <hostname> svnserve -t\n### (If the URL includes a username, then the hostname will be\n### passed to the tunnel agent as <user>@<hostname>.)  If the\n### built-in ssh scheme were not predefined, it could be defined\n### as:\n# ssh = $SVN_SSH ssh -q -o ControlMaster=no\n### If you wanted to define a new 'rsh' scheme, to be used with\n### 'svn+rsh:' URLs, you could do so as follows:\n# rsh = rsh\n### Or, if you wanted to specify a full path and arguments:\n# rsh = /path/to/rsh -l myusername\n### On Windows, if you are specifying a full path to a command,\n### use a forward slash (/) or a paired backslash (\\\\) as the\n### path separator.  A single backslash will be treated as an\n### escape for the following character.\n\n### Section for configuring miscellaneous Subversion options.\n[miscellany]\n### Set global-ignores to a set of whitespace-delimited globs\n### which Subversion will ignore in its 'status' output, and\n### while importing or adding files and directories.\n### '*' matches leading dots, e.g. '*.rej' matches '.foo.rej'.\n# global-ignores = *.o *.lo *.la *.al .libs *.so *.so.[0-9]* *.a *.pyc *.pyo __pycache__\n#   *.rej *~ #*# .#* .*.swp .DS_Store [Tt]humbs.db\n### Set log-encoding to the default encoding for log messages\n# log-encoding = latin1\n### Set use-commit-times to make checkout/update/switch/revert\n### put last-committed timestamps on every file touched.\n# use-commit-times = yes\n### Set no-unlock to prevent 'svn commit' from automatically\n### releasing locks on files.\n# no-unlock = yes\n### Set mime-types-file to a MIME type registry file, used to\n### provide hints to Subversion's MIME type auto-detection\n### algorithm.\n# mime-types-file = /path/to/mime.types\n### Set preserved-conflict-file-exts to a whitespace-delimited\n### list of patterns matching file extensions which should be\n### preserved in generated conflict file names.  By default,\n### conflict files use custom extensions.\n# preserved-conflict-file-exts = doc ppt xls od?\n### Set enable-auto-props to 'yes' to enable automatic properties\n### for 'svn add' and 'svn import', it defaults to 'no'.\n### Automatic properties are defined in the section 'auto-props'.\n# enable-auto-props = yes\n### Set interactive-conflicts to 'no' to disable interactive\n### conflict resolution prompting.  It defaults to 'yes'.\n# interactive-conflicts = no\n### Set memory-cache-size to define the size of the memory cache\n### used by the client when accessing a FSFS repository via\n### ra_local (the file:// scheme). The value represents the number\n### of MB used by the cache.\n# memory-cache-size = 16\n### Set diff-ignore-content-type to 'yes' to cause 'svn diff' to\n### attempt to show differences of all modified files regardless\n### of their MIME content type.  By default, Subversion will only\n### attempt to show differences for files believed to have human-\n### readable (non-binary) content.  This option is especially\n### useful when Subversion is configured (via the 'diff-cmd'\n### option) to employ an external differencing tool which is able\n### to show meaningful differences for binary file formats.  [New\n### in 1.9]\n# diff-ignore-content-type = no\n\n### Section for configuring automatic properties.\n[auto-props]\n### The format of the entries is:\n###   file-name-pattern = propname[=value][;propname[=value]...]\n### The file-name-pattern can contain wildcards (such as '*' and\n### '?').  All entries which match (case-insensitively) will be\n### applied to the file.  Note that auto-props functionality\n### must be enabled, which is typically done by setting the\n### 'enable-auto-props' option.\n# *.c = svn:eol-style=native\n# *.cpp = svn:eol-style=native\n# *.h = svn:keywords=Author Date Id Rev URL;svn:eol-style=native\n# *.dsp = svn:eol-style=CRLF\n# *.dsw = svn:eol-style=CRLF\n# *.sh = svn:eol-style=native;svn:executable\n# *.txt = svn:eol-style=native;svn:keywords=Author Date Id Rev URL;\n# *.png = svn:mime-type=image/png\n# *.jpg = svn:mime-type=image/jpeg\n# Makefile = svn:eol-style=native\n\n### Section for configuring working copies.\n[working-copy]\n### Set to a list of the names of specific clients that should use\n### exclusive SQLite locking of working copies.  This increases the\n### performance of the client but prevents concurrent access by\n### other clients.  Third-party clients may also support this\n### option.\n### Possible values:\n###   svn                (the command line client)\n# exclusive-locking-clients =\n### Set to true to enable exclusive SQLite locking of working\n### copies by all clients using the 1.8 APIs.  Enabling this may\n### cause some clients to fail to work properly. This does not have\n### to be set for exclusive-locking-clients to work.\n# exclusive-locking = false\n### Set the SQLite busy timeout in milliseconds: the maximum time\n### the client waits to get access to the SQLite database before\n### returning an error.  The default is 10000, i.e. 10 seconds.\n### Longer values may be useful when exclusive locking is enabled.\n# busy-timeout = 10000\n```\n\n找到：\n\n```\n# store-passwords = no\n```\n\n改为：\n\n```\nstore-passwords = yes\n```\n\n保存，下次SVN操作的时候需要输入一次密码，之后就不用再输密码了。\n\n### 切换SVN账号\n\n有时候需要切换SVN账号进行相应的操作，但是默认提示的是上一次操作的账号。碰到这个问题，只要删除`/home/[username]/.subversion/auth`即可。\n\n```auth\nrm -rf /home/[username]/.subversion/auth\n```\n\n保存，下次SVN操作的时候就会提示输入用户名。\n\n## 修改配置文件`servers`\n\n如果上面的方法没有解决每次都要输入密码的问题，可以继续修改`servers`配置文件。\n\n用vim打开文件：\n\n```bash\nvim /home/[username]/.subversion/servers\n```\n\n原文件内容如下：\n\n```\n### This file specifies server-specific parameters,\n### including HTTP proxy information, HTTP timeout settings,\n### and authentication settings.\n###\n### The currently defined server options are:\n###   http-proxy-host            Proxy host for HTTP connection\n###   http-proxy-port            Port number of proxy host service\n###   http-proxy-username        Username for auth to proxy service\n###   http-proxy-password        Password for auth to proxy service\n###   http-proxy-exceptions      List of sites that do not use proxy\n###   http-timeout               Timeout for HTTP requests in seconds\n###   http-compression           Whether to compress HTTP requests\n###   http-max-connections       Maximum number of parallel server\n###                              connections to use for any given\n###                              HTTP operation.\n###   http-chunked-requests      Whether to use chunked transfer\n###                              encoding for HTTP requests body.\n###   neon-debug-mask            Debug mask for Neon HTTP library\n###   ssl-authority-files        List of files, each of a trusted CA\n###   ssl-trust-default-ca       Trust the system 'default' CAs\n###   ssl-client-cert-file       PKCS#12 format client certificate file\n###   ssl-client-cert-password   Client Key password, if needed.\n###   ssl-pkcs11-provider        Name of PKCS#11 provider to use.\n###   http-library               Which library to use for http/https\n###                              connections.\n###   http-bulk-updates          Whether to request bulk update\n###                              responses or to fetch each file\n###                              in an individual request.\n###   store-passwords            Specifies whether passwords used\n###                              to authenticate against a\n###                              Subversion server may be cached\n###                              to disk in any way.\n###   store-plaintext-passwords  Specifies whether passwords may\n###                              be cached on disk unencrypted.\n###   store-ssl-client-cert-pp   Specifies whether passphrase used\n###                              to authenticate against a client\n###                              certificate may be cached to disk\n###                              in any way\n###   store-ssl-client-cert-pp-plaintext\n###                              Specifies whether client cert\n###                              passphrases may be cached on disk\n###                              unencrypted (i.e., as plaintext).\n###   store-auth-creds           Specifies whether any auth info\n###                              (passwords, server certs, etc.)\n###                              may be cached to disk.\n###   username                   Specifies the default username.\n###\n### Set store-passwords to 'no' to avoid storing passwords on disk\n### in any way, including in password stores.  It defaults to\n### 'yes', but Subversion will never save your password to disk in\n### plaintext unless explicitly configured to do so.\n### Note that this option only prevents saving of *new* passwords;\n### it doesn't invalidate existing passwords.  (To do that, remove\n### the cache files by hand as described in the Subversion book.)\n###\n### Set store-plaintext-passwords to 'no' to avoid storing\n### passwords in unencrypted form in the auth/ area of your config\n### directory. Set it to 'yes' to allow Subversion to store\n### unencrypted passwords in the auth/ area.  The default is\n### 'ask', which means that Subversion will ask you before\n### saving a password to disk in unencrypted form.  Note that\n### this option has no effect if either 'store-passwords' or\n### 'store-auth-creds' is set to 'no'.\n###\n### Set store-ssl-client-cert-pp to 'no' to avoid storing ssl\n### client certificate passphrases in the auth/ area of your\n### config directory.  It defaults to 'yes', but Subversion will\n### never save your passphrase to disk in plaintext unless\n### explicitly configured to do so.\n###\n### Note store-ssl-client-cert-pp only prevents the saving of *new*\n### passphrases; it doesn't invalidate existing passphrases.  To do\n### that, remove the cache files by hand as described in the\n### Subversion book at http://svnbook.red-bean.com/nightly/en/\\\n###                    svn.serverconfig.netmodel.html\\\n###                    #svn.serverconfig.netmodel.credcache\n###\n### Set store-ssl-client-cert-pp-plaintext to 'no' to avoid storing\n### passphrases in unencrypted form in the auth/ area of your\n### config directory.  Set it to 'yes' to allow Subversion to\n### store unencrypted passphrases in the auth/ area.  The default\n### is 'ask', which means that Subversion will prompt before\n### saving a passphrase to disk in unencrypted form.  Note that\n### this option has no effect if either 'store-auth-creds' or\n### 'store-ssl-client-cert-pp' is set to 'no'.\n###\n### Set store-auth-creds to 'no' to avoid storing any Subversion\n### credentials in the auth/ area of your config directory.\n### Note that this includes SSL server certificates.\n### It defaults to 'yes'.  Note that this option only prevents\n### saving of *new* credentials;  it doesn't invalidate existing\n### caches.  (To do that, remove the cache files by hand.)\n###\n### HTTP timeouts, if given, are specified in seconds.  A timeout\n### of 0, i.e. zero, causes a builtin default to be used.\n###\n### Most users will not need to explicitly set the http-library\n### option, but valid values for the option include:\n###    'serf': Serf-based module (Subversion 1.5 - present)\n###    'neon': Neon-based module (Subversion 1.0 - 1.7)\n### Availability of these modules may depend on your specific\n### Subversion distribution.\n###\n### The commented-out examples below are intended only to\n### demonstrate how to use this file; any resemblance to actual\n### servers, living or dead, is entirely coincidental.\n\n### In the 'groups' section, the URL of the repository you're\n### trying to access is matched against the patterns on the right.\n### If a match is found, the server options are taken from the\n### section with the corresponding name on the left.\n\n[groups]\n# group1 = *.collab.net\n# othergroup = repository.blarggitywhoomph.com\n# thirdgroup = *.example.com\n\n### Information for the first group:\n# [group1]\n# http-proxy-host = proxy1.some-domain-name.com\n# http-proxy-port = 80\n# http-proxy-username = blah\n# http-proxy-password = doubleblah\n# http-timeout = 60\n# neon-debug-mask = 130\n# store-plaintext-passwords = no\n# username = harry\n\n### Information for the second group:\n# [othergroup]\n# http-proxy-host = proxy2.some-domain-name.com\n# http-proxy-port = 9000\n# No username and password for the proxy, so use the defaults below.\n\n### You can set default parameters in the 'global' section.\n### These parameters apply if no corresponding parameter is set in\n### a specifically matched group as shown above.  Thus, if you go\n### through the same proxy server to reach every site on the\n### Internet, you probably just want to put that server's\n### information in the 'global' section and not bother with\n### 'groups' or any other sections.\n###\n### Most people might want to configure password caching\n### parameters here, but you can also configure them per server\n### group (per-group settings override global settings).\n###\n### If you go through a proxy for all but a few sites, you can\n### list those exceptions under 'http-proxy-exceptions'.  This only\n### overrides defaults, not explicitly matched server names.\n###\n### 'ssl-authority-files' is a semicolon-delimited list of files,\n### each pointing to a PEM-encoded Certificate Authority (CA)\n### SSL certificate.  See details above for overriding security\n### due to SSL.\n[global]\n# http-proxy-exceptions = *.exception.com, www.internal-site.org\n# http-proxy-host = defaultproxy.whatever.com\n# http-proxy-port = 7000\n# http-proxy-username = defaultusername\n# http-proxy-password = defaultpassword\n# http-compression = no\n# No http-timeout, so just use the builtin default.\n# No neon-debug-mask, so neon debugging is disabled.\n# ssl-authority-files = /path/to/CAcert.pem;/path/to/CAcert2.pem\n#\n# Password / passphrase caching parameters:\n# store-passwords = no\n# store-ssl-client-cert-pp = no\n# store-plaintext-passwords = no\n# store-ssl-client-cert-pp-plaintext = no\n```\n\n找到：\n\n```\n# store-passwords = no\n# store-plaintext-passwords = no\n```\n\n修改为：\n\n```\nstore-passwords = yes\nstore-plaintext-passwords = yes\n```\n\n保存，下次操作的时候就不用输入SVN密码了。\n","source":"_posts/2017-10-18-Linux下SVN账号密码保存方法.md","raw":"---\ntitle: Linux下SVN账号密码保存方法\ndate: 2017-10-18 09:47:11\ntags:\n- Linux\n- SVN\ncategories:\n- 教程\n---\n\nLinux下进行SVN操作的时候总是提示要输入密码，很不方便，尤其是集成到`npm scripts`上的时候，你不想明写密码，但是如果不写，每次都提示要输入密码，不同用户协作起来更加麻烦。\n\n<!-- more -->\n\n## 修改配置文件`config`\n\n文件位置`/home/[username]/.subversion/config`\n\n用vim打开\n\n```bash\nvim /home/[username]/.subversion/config\n```\n\n原配置文件：\n\n```\n### This file configures various client-side behaviors.\n###\n### The commented-out examples below are intended to demonstrate\n### how to use this file.\n\n### Section for authentication and authorization customizations.\n[auth]\n### Set password stores used by Subversion. They should be\n### delimited by spaces or commas. The order of values determines\n### the order in which password stores are used.\n### Valid password stores:\n###   gnome-keyring        (Unix-like systems)\n###   kwallet              (Unix-like systems)\n###   gpg-agent            (Unix-like systems)\n###   keychain             (Mac OS X)\n###   windows-cryptoapi    (Windows)\n# password-stores = gpg-agent,gnome-keyring,kwallet\n### To disable all password stores, use an empty list:\n# password-stores =\n###\n### Set KWallet wallet used by Subversion. If empty or unset,\n### then the default network wallet will be used.\n# kwallet-wallet =\n###\n### Include PID (Process ID) in Subversion application name when\n### using KWallet. It defaults to 'no'.\n# kwallet-svn-application-name-with-pid = yes\n###\n### Set ssl-client-cert-file-prompt to 'yes' to cause the client\n### to prompt for a path to a client cert file when the server\n### requests a client cert but no client cert file is found in the\n### expected place (see the 'ssl-client-cert-file' option in the\n### 'servers' configuration file). Defaults to 'no'.\n# ssl-client-cert-file-prompt = no\n###\n### The rest of the [auth] section in this file has been deprecated.\n### Both 'store-passwords' and 'store-auth-creds' can now be\n### specified in the 'servers' file in your config directory\n### and are documented there. Anything specified in this section\n### is overridden by settings specified in the 'servers' file.\n# store-passwords = no\n# store-auth-creds = no\n\n### Section for configuring external helper applications.\n[helpers]\n### Set editor-cmd to the command used to invoke your text editor.\n###   This will override the environment variables that Subversion\n###   examines by default to find this information ($EDITOR,\n###   et al).\n# editor-cmd = editor (vi, emacs, notepad, etc.)\neditor-cmd = vim\n### Set diff-cmd to the absolute path of your 'diff' program.\n###   This will override the compile-time default, which is to use\n###   Subversion's internal diff implementation.\n# diff-cmd = diff_program (diff, gdiff, etc.)\ndiff-cmd = /usr/local/bin/svndiff.sh\n### Diff-extensions are arguments passed to an external diff\n### program or to Subversion's internal diff implementation.\n### Set diff-extensions to override the default arguments ('-u').\n# diff-extensions = -u -p\n### Set diff3-cmd to the absolute path of your 'diff3' program.\n###   This will override the compile-time default, which is to use\n###   Subversion's internal diff3 implementation.\n# diff3-cmd = diff3_program (diff3, gdiff3, etc.)\n### Set diff3-has-program-arg to 'yes' if your 'diff3' program\n###   accepts the '--diff-program' option.\n# diff3-has-program-arg = [yes | no]\n### Set merge-tool-cmd to the command used to invoke your external\n### merging tool of choice. Subversion will pass 5 arguments to\n### the specified command: base theirs mine merged wcfile\n# merge-tool-cmd = merge_command\n\n### Section for configuring tunnel agents.\n[tunnels]\n### Configure svn protocol tunnel schemes here.  By default, only\n### the 'ssh' scheme is defined.  You can define other schemes to\n### be used with 'svn+scheme://hostname/path' URLs.  A scheme\n### definition is simply a command, optionally prefixed by an\n### environment variable name which can override the command if it\n### is defined.  The command (or environment variable) may contain\n### arguments, using standard shell quoting for arguments with\n### spaces.  The command will be invoked as:\n###   <command> <hostname> svnserve -t\n### (If the URL includes a username, then the hostname will be\n### passed to the tunnel agent as <user>@<hostname>.)  If the\n### built-in ssh scheme were not predefined, it could be defined\n### as:\n# ssh = $SVN_SSH ssh -q -o ControlMaster=no\n### If you wanted to define a new 'rsh' scheme, to be used with\n### 'svn+rsh:' URLs, you could do so as follows:\n# rsh = rsh\n### Or, if you wanted to specify a full path and arguments:\n# rsh = /path/to/rsh -l myusername\n### On Windows, if you are specifying a full path to a command,\n### use a forward slash (/) or a paired backslash (\\\\) as the\n### path separator.  A single backslash will be treated as an\n### escape for the following character.\n\n### Section for configuring miscellaneous Subversion options.\n[miscellany]\n### Set global-ignores to a set of whitespace-delimited globs\n### which Subversion will ignore in its 'status' output, and\n### while importing or adding files and directories.\n### '*' matches leading dots, e.g. '*.rej' matches '.foo.rej'.\n# global-ignores = *.o *.lo *.la *.al .libs *.so *.so.[0-9]* *.a *.pyc *.pyo __pycache__\n#   *.rej *~ #*# .#* .*.swp .DS_Store [Tt]humbs.db\n### Set log-encoding to the default encoding for log messages\n# log-encoding = latin1\n### Set use-commit-times to make checkout/update/switch/revert\n### put last-committed timestamps on every file touched.\n# use-commit-times = yes\n### Set no-unlock to prevent 'svn commit' from automatically\n### releasing locks on files.\n# no-unlock = yes\n### Set mime-types-file to a MIME type registry file, used to\n### provide hints to Subversion's MIME type auto-detection\n### algorithm.\n# mime-types-file = /path/to/mime.types\n### Set preserved-conflict-file-exts to a whitespace-delimited\n### list of patterns matching file extensions which should be\n### preserved in generated conflict file names.  By default,\n### conflict files use custom extensions.\n# preserved-conflict-file-exts = doc ppt xls od?\n### Set enable-auto-props to 'yes' to enable automatic properties\n### for 'svn add' and 'svn import', it defaults to 'no'.\n### Automatic properties are defined in the section 'auto-props'.\n# enable-auto-props = yes\n### Set interactive-conflicts to 'no' to disable interactive\n### conflict resolution prompting.  It defaults to 'yes'.\n# interactive-conflicts = no\n### Set memory-cache-size to define the size of the memory cache\n### used by the client when accessing a FSFS repository via\n### ra_local (the file:// scheme). The value represents the number\n### of MB used by the cache.\n# memory-cache-size = 16\n### Set diff-ignore-content-type to 'yes' to cause 'svn diff' to\n### attempt to show differences of all modified files regardless\n### of their MIME content type.  By default, Subversion will only\n### attempt to show differences for files believed to have human-\n### readable (non-binary) content.  This option is especially\n### useful when Subversion is configured (via the 'diff-cmd'\n### option) to employ an external differencing tool which is able\n### to show meaningful differences for binary file formats.  [New\n### in 1.9]\n# diff-ignore-content-type = no\n\n### Section for configuring automatic properties.\n[auto-props]\n### The format of the entries is:\n###   file-name-pattern = propname[=value][;propname[=value]...]\n### The file-name-pattern can contain wildcards (such as '*' and\n### '?').  All entries which match (case-insensitively) will be\n### applied to the file.  Note that auto-props functionality\n### must be enabled, which is typically done by setting the\n### 'enable-auto-props' option.\n# *.c = svn:eol-style=native\n# *.cpp = svn:eol-style=native\n# *.h = svn:keywords=Author Date Id Rev URL;svn:eol-style=native\n# *.dsp = svn:eol-style=CRLF\n# *.dsw = svn:eol-style=CRLF\n# *.sh = svn:eol-style=native;svn:executable\n# *.txt = svn:eol-style=native;svn:keywords=Author Date Id Rev URL;\n# *.png = svn:mime-type=image/png\n# *.jpg = svn:mime-type=image/jpeg\n# Makefile = svn:eol-style=native\n\n### Section for configuring working copies.\n[working-copy]\n### Set to a list of the names of specific clients that should use\n### exclusive SQLite locking of working copies.  This increases the\n### performance of the client but prevents concurrent access by\n### other clients.  Third-party clients may also support this\n### option.\n### Possible values:\n###   svn                (the command line client)\n# exclusive-locking-clients =\n### Set to true to enable exclusive SQLite locking of working\n### copies by all clients using the 1.8 APIs.  Enabling this may\n### cause some clients to fail to work properly. This does not have\n### to be set for exclusive-locking-clients to work.\n# exclusive-locking = false\n### Set the SQLite busy timeout in milliseconds: the maximum time\n### the client waits to get access to the SQLite database before\n### returning an error.  The default is 10000, i.e. 10 seconds.\n### Longer values may be useful when exclusive locking is enabled.\n# busy-timeout = 10000\n```\n\n找到：\n\n```\n# store-passwords = no\n```\n\n改为：\n\n```\nstore-passwords = yes\n```\n\n保存，下次SVN操作的时候需要输入一次密码，之后就不用再输密码了。\n\n### 切换SVN账号\n\n有时候需要切换SVN账号进行相应的操作，但是默认提示的是上一次操作的账号。碰到这个问题，只要删除`/home/[username]/.subversion/auth`即可。\n\n```auth\nrm -rf /home/[username]/.subversion/auth\n```\n\n保存，下次SVN操作的时候就会提示输入用户名。\n\n## 修改配置文件`servers`\n\n如果上面的方法没有解决每次都要输入密码的问题，可以继续修改`servers`配置文件。\n\n用vim打开文件：\n\n```bash\nvim /home/[username]/.subversion/servers\n```\n\n原文件内容如下：\n\n```\n### This file specifies server-specific parameters,\n### including HTTP proxy information, HTTP timeout settings,\n### and authentication settings.\n###\n### The currently defined server options are:\n###   http-proxy-host            Proxy host for HTTP connection\n###   http-proxy-port            Port number of proxy host service\n###   http-proxy-username        Username for auth to proxy service\n###   http-proxy-password        Password for auth to proxy service\n###   http-proxy-exceptions      List of sites that do not use proxy\n###   http-timeout               Timeout for HTTP requests in seconds\n###   http-compression           Whether to compress HTTP requests\n###   http-max-connections       Maximum number of parallel server\n###                              connections to use for any given\n###                              HTTP operation.\n###   http-chunked-requests      Whether to use chunked transfer\n###                              encoding for HTTP requests body.\n###   neon-debug-mask            Debug mask for Neon HTTP library\n###   ssl-authority-files        List of files, each of a trusted CA\n###   ssl-trust-default-ca       Trust the system 'default' CAs\n###   ssl-client-cert-file       PKCS#12 format client certificate file\n###   ssl-client-cert-password   Client Key password, if needed.\n###   ssl-pkcs11-provider        Name of PKCS#11 provider to use.\n###   http-library               Which library to use for http/https\n###                              connections.\n###   http-bulk-updates          Whether to request bulk update\n###                              responses or to fetch each file\n###                              in an individual request.\n###   store-passwords            Specifies whether passwords used\n###                              to authenticate against a\n###                              Subversion server may be cached\n###                              to disk in any way.\n###   store-plaintext-passwords  Specifies whether passwords may\n###                              be cached on disk unencrypted.\n###   store-ssl-client-cert-pp   Specifies whether passphrase used\n###                              to authenticate against a client\n###                              certificate may be cached to disk\n###                              in any way\n###   store-ssl-client-cert-pp-plaintext\n###                              Specifies whether client cert\n###                              passphrases may be cached on disk\n###                              unencrypted (i.e., as plaintext).\n###   store-auth-creds           Specifies whether any auth info\n###                              (passwords, server certs, etc.)\n###                              may be cached to disk.\n###   username                   Specifies the default username.\n###\n### Set store-passwords to 'no' to avoid storing passwords on disk\n### in any way, including in password stores.  It defaults to\n### 'yes', but Subversion will never save your password to disk in\n### plaintext unless explicitly configured to do so.\n### Note that this option only prevents saving of *new* passwords;\n### it doesn't invalidate existing passwords.  (To do that, remove\n### the cache files by hand as described in the Subversion book.)\n###\n### Set store-plaintext-passwords to 'no' to avoid storing\n### passwords in unencrypted form in the auth/ area of your config\n### directory. Set it to 'yes' to allow Subversion to store\n### unencrypted passwords in the auth/ area.  The default is\n### 'ask', which means that Subversion will ask you before\n### saving a password to disk in unencrypted form.  Note that\n### this option has no effect if either 'store-passwords' or\n### 'store-auth-creds' is set to 'no'.\n###\n### Set store-ssl-client-cert-pp to 'no' to avoid storing ssl\n### client certificate passphrases in the auth/ area of your\n### config directory.  It defaults to 'yes', but Subversion will\n### never save your passphrase to disk in plaintext unless\n### explicitly configured to do so.\n###\n### Note store-ssl-client-cert-pp only prevents the saving of *new*\n### passphrases; it doesn't invalidate existing passphrases.  To do\n### that, remove the cache files by hand as described in the\n### Subversion book at http://svnbook.red-bean.com/nightly/en/\\\n###                    svn.serverconfig.netmodel.html\\\n###                    #svn.serverconfig.netmodel.credcache\n###\n### Set store-ssl-client-cert-pp-plaintext to 'no' to avoid storing\n### passphrases in unencrypted form in the auth/ area of your\n### config directory.  Set it to 'yes' to allow Subversion to\n### store unencrypted passphrases in the auth/ area.  The default\n### is 'ask', which means that Subversion will prompt before\n### saving a passphrase to disk in unencrypted form.  Note that\n### this option has no effect if either 'store-auth-creds' or\n### 'store-ssl-client-cert-pp' is set to 'no'.\n###\n### Set store-auth-creds to 'no' to avoid storing any Subversion\n### credentials in the auth/ area of your config directory.\n### Note that this includes SSL server certificates.\n### It defaults to 'yes'.  Note that this option only prevents\n### saving of *new* credentials;  it doesn't invalidate existing\n### caches.  (To do that, remove the cache files by hand.)\n###\n### HTTP timeouts, if given, are specified in seconds.  A timeout\n### of 0, i.e. zero, causes a builtin default to be used.\n###\n### Most users will not need to explicitly set the http-library\n### option, but valid values for the option include:\n###    'serf': Serf-based module (Subversion 1.5 - present)\n###    'neon': Neon-based module (Subversion 1.0 - 1.7)\n### Availability of these modules may depend on your specific\n### Subversion distribution.\n###\n### The commented-out examples below are intended only to\n### demonstrate how to use this file; any resemblance to actual\n### servers, living or dead, is entirely coincidental.\n\n### In the 'groups' section, the URL of the repository you're\n### trying to access is matched against the patterns on the right.\n### If a match is found, the server options are taken from the\n### section with the corresponding name on the left.\n\n[groups]\n# group1 = *.collab.net\n# othergroup = repository.blarggitywhoomph.com\n# thirdgroup = *.example.com\n\n### Information for the first group:\n# [group1]\n# http-proxy-host = proxy1.some-domain-name.com\n# http-proxy-port = 80\n# http-proxy-username = blah\n# http-proxy-password = doubleblah\n# http-timeout = 60\n# neon-debug-mask = 130\n# store-plaintext-passwords = no\n# username = harry\n\n### Information for the second group:\n# [othergroup]\n# http-proxy-host = proxy2.some-domain-name.com\n# http-proxy-port = 9000\n# No username and password for the proxy, so use the defaults below.\n\n### You can set default parameters in the 'global' section.\n### These parameters apply if no corresponding parameter is set in\n### a specifically matched group as shown above.  Thus, if you go\n### through the same proxy server to reach every site on the\n### Internet, you probably just want to put that server's\n### information in the 'global' section and not bother with\n### 'groups' or any other sections.\n###\n### Most people might want to configure password caching\n### parameters here, but you can also configure them per server\n### group (per-group settings override global settings).\n###\n### If you go through a proxy for all but a few sites, you can\n### list those exceptions under 'http-proxy-exceptions'.  This only\n### overrides defaults, not explicitly matched server names.\n###\n### 'ssl-authority-files' is a semicolon-delimited list of files,\n### each pointing to a PEM-encoded Certificate Authority (CA)\n### SSL certificate.  See details above for overriding security\n### due to SSL.\n[global]\n# http-proxy-exceptions = *.exception.com, www.internal-site.org\n# http-proxy-host = defaultproxy.whatever.com\n# http-proxy-port = 7000\n# http-proxy-username = defaultusername\n# http-proxy-password = defaultpassword\n# http-compression = no\n# No http-timeout, so just use the builtin default.\n# No neon-debug-mask, so neon debugging is disabled.\n# ssl-authority-files = /path/to/CAcert.pem;/path/to/CAcert2.pem\n#\n# Password / passphrase caching parameters:\n# store-passwords = no\n# store-ssl-client-cert-pp = no\n# store-plaintext-passwords = no\n# store-ssl-client-cert-pp-plaintext = no\n```\n\n找到：\n\n```\n# store-passwords = no\n# store-plaintext-passwords = no\n```\n\n修改为：\n\n```\nstore-passwords = yes\nstore-plaintext-passwords = yes\n```\n\n保存，下次操作的时候就不用输入SVN密码了。\n","slug":"Linux下SVN账号密码保存方法","published":1,"updated":"2018-03-27T13:52:33.772Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjskilar2005pg9zbee8ehfna","content":"<p>Linux下进行SVN操作的时候总是提示要输入密码，很不方便，尤其是集成到<code>npm scripts</code>上的时候，你不想明写密码，但是如果不写，每次都提示要输入密码，不同用户协作起来更加麻烦。</p>\n<a id=\"more\"></a>\n<h2 id=\"修改配置文件config\"><a href=\"#修改配置文件config\" class=\"headerlink\" title=\"修改配置文件config\"></a>修改配置文件<code>config</code></h2><p>文件位置<code>/home/[username]/.subversion/config</code></p>\n<p>用vim打开</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /home/[username]/.subversion/config</span><br></pre></td></tr></table></figure>\n<p>原配置文件：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">### This file configures various client-side behaviors.</span><br><span class=\"line\">###</span><br><span class=\"line\">### The commented-out examples below are intended to demonstrate</span><br><span class=\"line\">### how to use this file.</span><br><span class=\"line\"></span><br><span class=\"line\">### Section for authentication and authorization customizations.</span><br><span class=\"line\">[auth]</span><br><span class=\"line\">### Set password stores used by Subversion. They should be</span><br><span class=\"line\">### delimited by spaces or commas. The order of values determines</span><br><span class=\"line\">### the order in which password stores are used.</span><br><span class=\"line\">### Valid password stores:</span><br><span class=\"line\">###   gnome-keyring        (Unix-like systems)</span><br><span class=\"line\">###   kwallet              (Unix-like systems)</span><br><span class=\"line\">###   gpg-agent            (Unix-like systems)</span><br><span class=\"line\">###   keychain             (Mac OS X)</span><br><span class=\"line\">###   windows-cryptoapi    (Windows)</span><br><span class=\"line\"># password-stores = gpg-agent,gnome-keyring,kwallet</span><br><span class=\"line\">### To disable all password stores, use an empty list:</span><br><span class=\"line\"># password-stores =</span><br><span class=\"line\">###</span><br><span class=\"line\">### Set KWallet wallet used by Subversion. If empty or unset,</span><br><span class=\"line\">### then the default network wallet will be used.</span><br><span class=\"line\"># kwallet-wallet =</span><br><span class=\"line\">###</span><br><span class=\"line\">### Include PID (Process ID) in Subversion application name when</span><br><span class=\"line\">### using KWallet. It defaults to &apos;no&apos;.</span><br><span class=\"line\"># kwallet-svn-application-name-with-pid = yes</span><br><span class=\"line\">###</span><br><span class=\"line\">### Set ssl-client-cert-file-prompt to &apos;yes&apos; to cause the client</span><br><span class=\"line\">### to prompt for a path to a client cert file when the server</span><br><span class=\"line\">### requests a client cert but no client cert file is found in the</span><br><span class=\"line\">### expected place (see the &apos;ssl-client-cert-file&apos; option in the</span><br><span class=\"line\">### &apos;servers&apos; configuration file). Defaults to &apos;no&apos;.</span><br><span class=\"line\"># ssl-client-cert-file-prompt = no</span><br><span class=\"line\">###</span><br><span class=\"line\">### The rest of the [auth] section in this file has been deprecated.</span><br><span class=\"line\">### Both &apos;store-passwords&apos; and &apos;store-auth-creds&apos; can now be</span><br><span class=\"line\">### specified in the &apos;servers&apos; file in your config directory</span><br><span class=\"line\">### and are documented there. Anything specified in this section</span><br><span class=\"line\">### is overridden by settings specified in the &apos;servers&apos; file.</span><br><span class=\"line\"># store-passwords = no</span><br><span class=\"line\"># store-auth-creds = no</span><br><span class=\"line\"></span><br><span class=\"line\">### Section for configuring external helper applications.</span><br><span class=\"line\">[helpers]</span><br><span class=\"line\">### Set editor-cmd to the command used to invoke your text editor.</span><br><span class=\"line\">###   This will override the environment variables that Subversion</span><br><span class=\"line\">###   examines by default to find this information ($EDITOR,</span><br><span class=\"line\">###   et al).</span><br><span class=\"line\"># editor-cmd = editor (vi, emacs, notepad, etc.)</span><br><span class=\"line\">editor-cmd = vim</span><br><span class=\"line\">### Set diff-cmd to the absolute path of your &apos;diff&apos; program.</span><br><span class=\"line\">###   This will override the compile-time default, which is to use</span><br><span class=\"line\">###   Subversion&apos;s internal diff implementation.</span><br><span class=\"line\"># diff-cmd = diff_program (diff, gdiff, etc.)</span><br><span class=\"line\">diff-cmd = /usr/local/bin/svndiff.sh</span><br><span class=\"line\">### Diff-extensions are arguments passed to an external diff</span><br><span class=\"line\">### program or to Subversion&apos;s internal diff implementation.</span><br><span class=\"line\">### Set diff-extensions to override the default arguments (&apos;-u&apos;).</span><br><span class=\"line\"># diff-extensions = -u -p</span><br><span class=\"line\">### Set diff3-cmd to the absolute path of your &apos;diff3&apos; program.</span><br><span class=\"line\">###   This will override the compile-time default, which is to use</span><br><span class=\"line\">###   Subversion&apos;s internal diff3 implementation.</span><br><span class=\"line\"># diff3-cmd = diff3_program (diff3, gdiff3, etc.)</span><br><span class=\"line\">### Set diff3-has-program-arg to &apos;yes&apos; if your &apos;diff3&apos; program</span><br><span class=\"line\">###   accepts the &apos;--diff-program&apos; option.</span><br><span class=\"line\"># diff3-has-program-arg = [yes | no]</span><br><span class=\"line\">### Set merge-tool-cmd to the command used to invoke your external</span><br><span class=\"line\">### merging tool of choice. Subversion will pass 5 arguments to</span><br><span class=\"line\">### the specified command: base theirs mine merged wcfile</span><br><span class=\"line\"># merge-tool-cmd = merge_command</span><br><span class=\"line\"></span><br><span class=\"line\">### Section for configuring tunnel agents.</span><br><span class=\"line\">[tunnels]</span><br><span class=\"line\">### Configure svn protocol tunnel schemes here.  By default, only</span><br><span class=\"line\">### the &apos;ssh&apos; scheme is defined.  You can define other schemes to</span><br><span class=\"line\">### be used with &apos;svn+scheme://hostname/path&apos; URLs.  A scheme</span><br><span class=\"line\">### definition is simply a command, optionally prefixed by an</span><br><span class=\"line\">### environment variable name which can override the command if it</span><br><span class=\"line\">### is defined.  The command (or environment variable) may contain</span><br><span class=\"line\">### arguments, using standard shell quoting for arguments with</span><br><span class=\"line\">### spaces.  The command will be invoked as:</span><br><span class=\"line\">###   &lt;command&gt; &lt;hostname&gt; svnserve -t</span><br><span class=\"line\">### (If the URL includes a username, then the hostname will be</span><br><span class=\"line\">### passed to the tunnel agent as &lt;user&gt;@&lt;hostname&gt;.)  If the</span><br><span class=\"line\">### built-in ssh scheme were not predefined, it could be defined</span><br><span class=\"line\">### as:</span><br><span class=\"line\"># ssh = $SVN_SSH ssh -q -o ControlMaster=no</span><br><span class=\"line\">### If you wanted to define a new &apos;rsh&apos; scheme, to be used with</span><br><span class=\"line\">### &apos;svn+rsh:&apos; URLs, you could do so as follows:</span><br><span class=\"line\"># rsh = rsh</span><br><span class=\"line\">### Or, if you wanted to specify a full path and arguments:</span><br><span class=\"line\"># rsh = /path/to/rsh -l myusername</span><br><span class=\"line\">### On Windows, if you are specifying a full path to a command,</span><br><span class=\"line\">### use a forward slash (/) or a paired backslash (\\\\) as the</span><br><span class=\"line\">### path separator.  A single backslash will be treated as an</span><br><span class=\"line\">### escape for the following character.</span><br><span class=\"line\"></span><br><span class=\"line\">### Section for configuring miscellaneous Subversion options.</span><br><span class=\"line\">[miscellany]</span><br><span class=\"line\">### Set global-ignores to a set of whitespace-delimited globs</span><br><span class=\"line\">### which Subversion will ignore in its &apos;status&apos; output, and</span><br><span class=\"line\">### while importing or adding files and directories.</span><br><span class=\"line\">### &apos;*&apos; matches leading dots, e.g. &apos;*.rej&apos; matches &apos;.foo.rej&apos;.</span><br><span class=\"line\"># global-ignores = *.o *.lo *.la *.al .libs *.so *.so.[0-9]* *.a *.pyc *.pyo __pycache__</span><br><span class=\"line\">#   *.rej *~ #*# .#* .*.swp .DS_Store [Tt]humbs.db</span><br><span class=\"line\">### Set log-encoding to the default encoding for log messages</span><br><span class=\"line\"># log-encoding = latin1</span><br><span class=\"line\">### Set use-commit-times to make checkout/update/switch/revert</span><br><span class=\"line\">### put last-committed timestamps on every file touched.</span><br><span class=\"line\"># use-commit-times = yes</span><br><span class=\"line\">### Set no-unlock to prevent &apos;svn commit&apos; from automatically</span><br><span class=\"line\">### releasing locks on files.</span><br><span class=\"line\"># no-unlock = yes</span><br><span class=\"line\">### Set mime-types-file to a MIME type registry file, used to</span><br><span class=\"line\">### provide hints to Subversion&apos;s MIME type auto-detection</span><br><span class=\"line\">### algorithm.</span><br><span class=\"line\"># mime-types-file = /path/to/mime.types</span><br><span class=\"line\">### Set preserved-conflict-file-exts to a whitespace-delimited</span><br><span class=\"line\">### list of patterns matching file extensions which should be</span><br><span class=\"line\">### preserved in generated conflict file names.  By default,</span><br><span class=\"line\">### conflict files use custom extensions.</span><br><span class=\"line\"># preserved-conflict-file-exts = doc ppt xls od?</span><br><span class=\"line\">### Set enable-auto-props to &apos;yes&apos; to enable automatic properties</span><br><span class=\"line\">### for &apos;svn add&apos; and &apos;svn import&apos;, it defaults to &apos;no&apos;.</span><br><span class=\"line\">### Automatic properties are defined in the section &apos;auto-props&apos;.</span><br><span class=\"line\"># enable-auto-props = yes</span><br><span class=\"line\">### Set interactive-conflicts to &apos;no&apos; to disable interactive</span><br><span class=\"line\">### conflict resolution prompting.  It defaults to &apos;yes&apos;.</span><br><span class=\"line\"># interactive-conflicts = no</span><br><span class=\"line\">### Set memory-cache-size to define the size of the memory cache</span><br><span class=\"line\">### used by the client when accessing a FSFS repository via</span><br><span class=\"line\">### ra_local (the file:// scheme). The value represents the number</span><br><span class=\"line\">### of MB used by the cache.</span><br><span class=\"line\"># memory-cache-size = 16</span><br><span class=\"line\">### Set diff-ignore-content-type to &apos;yes&apos; to cause &apos;svn diff&apos; to</span><br><span class=\"line\">### attempt to show differences of all modified files regardless</span><br><span class=\"line\">### of their MIME content type.  By default, Subversion will only</span><br><span class=\"line\">### attempt to show differences for files believed to have human-</span><br><span class=\"line\">### readable (non-binary) content.  This option is especially</span><br><span class=\"line\">### useful when Subversion is configured (via the &apos;diff-cmd&apos;</span><br><span class=\"line\">### option) to employ an external differencing tool which is able</span><br><span class=\"line\">### to show meaningful differences for binary file formats.  [New</span><br><span class=\"line\">### in 1.9]</span><br><span class=\"line\"># diff-ignore-content-type = no</span><br><span class=\"line\"></span><br><span class=\"line\">### Section for configuring automatic properties.</span><br><span class=\"line\">[auto-props]</span><br><span class=\"line\">### The format of the entries is:</span><br><span class=\"line\">###   file-name-pattern = propname[=value][;propname[=value]...]</span><br><span class=\"line\">### The file-name-pattern can contain wildcards (such as &apos;*&apos; and</span><br><span class=\"line\">### &apos;?&apos;).  All entries which match (case-insensitively) will be</span><br><span class=\"line\">### applied to the file.  Note that auto-props functionality</span><br><span class=\"line\">### must be enabled, which is typically done by setting the</span><br><span class=\"line\">### &apos;enable-auto-props&apos; option.</span><br><span class=\"line\"># *.c = svn:eol-style=native</span><br><span class=\"line\"># *.cpp = svn:eol-style=native</span><br><span class=\"line\"># *.h = svn:keywords=Author Date Id Rev URL;svn:eol-style=native</span><br><span class=\"line\"># *.dsp = svn:eol-style=CRLF</span><br><span class=\"line\"># *.dsw = svn:eol-style=CRLF</span><br><span class=\"line\"># *.sh = svn:eol-style=native;svn:executable</span><br><span class=\"line\"># *.txt = svn:eol-style=native;svn:keywords=Author Date Id Rev URL;</span><br><span class=\"line\"># *.png = svn:mime-type=image/png</span><br><span class=\"line\"># *.jpg = svn:mime-type=image/jpeg</span><br><span class=\"line\"># Makefile = svn:eol-style=native</span><br><span class=\"line\"></span><br><span class=\"line\">### Section for configuring working copies.</span><br><span class=\"line\">[working-copy]</span><br><span class=\"line\">### Set to a list of the names of specific clients that should use</span><br><span class=\"line\">### exclusive SQLite locking of working copies.  This increases the</span><br><span class=\"line\">### performance of the client but prevents concurrent access by</span><br><span class=\"line\">### other clients.  Third-party clients may also support this</span><br><span class=\"line\">### option.</span><br><span class=\"line\">### Possible values:</span><br><span class=\"line\">###   svn                (the command line client)</span><br><span class=\"line\"># exclusive-locking-clients =</span><br><span class=\"line\">### Set to true to enable exclusive SQLite locking of working</span><br><span class=\"line\">### copies by all clients using the 1.8 APIs.  Enabling this may</span><br><span class=\"line\">### cause some clients to fail to work properly. This does not have</span><br><span class=\"line\">### to be set for exclusive-locking-clients to work.</span><br><span class=\"line\"># exclusive-locking = false</span><br><span class=\"line\">### Set the SQLite busy timeout in milliseconds: the maximum time</span><br><span class=\"line\">### the client waits to get access to the SQLite database before</span><br><span class=\"line\">### returning an error.  The default is 10000, i.e. 10 seconds.</span><br><span class=\"line\">### Longer values may be useful when exclusive locking is enabled.</span><br><span class=\"line\"># busy-timeout = 10000</span><br></pre></td></tr></table></figure>\n<p>找到：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># store-passwords = no</span><br></pre></td></tr></table></figure>\n<p>改为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">store-passwords = yes</span><br></pre></td></tr></table></figure>\n<p>保存，下次SVN操作的时候需要输入一次密码，之后就不用再输密码了。</p>\n<h3 id=\"切换SVN账号\"><a href=\"#切换SVN账号\" class=\"headerlink\" title=\"切换SVN账号\"></a>切换SVN账号</h3><p>有时候需要切换SVN账号进行相应的操作，但是默认提示的是上一次操作的账号。碰到这个问题，只要删除<code>/home/[username]/.subversion/auth</code>即可。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rm -rf /home/[username]/.subversion/auth</span><br></pre></td></tr></table></figure>\n<p>保存，下次SVN操作的时候就会提示输入用户名。</p>\n<h2 id=\"修改配置文件servers\"><a href=\"#修改配置文件servers\" class=\"headerlink\" title=\"修改配置文件servers\"></a>修改配置文件<code>servers</code></h2><p>如果上面的方法没有解决每次都要输入密码的问题，可以继续修改<code>servers</code>配置文件。</p>\n<p>用vim打开文件：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /home/[username]/.subversion/servers</span><br></pre></td></tr></table></figure>\n<p>原文件内容如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">### This file specifies server-specific parameters,</span><br><span class=\"line\">### including HTTP proxy information, HTTP timeout settings,</span><br><span class=\"line\">### and authentication settings.</span><br><span class=\"line\">###</span><br><span class=\"line\">### The currently defined server options are:</span><br><span class=\"line\">###   http-proxy-host            Proxy host for HTTP connection</span><br><span class=\"line\">###   http-proxy-port            Port number of proxy host service</span><br><span class=\"line\">###   http-proxy-username        Username for auth to proxy service</span><br><span class=\"line\">###   http-proxy-password        Password for auth to proxy service</span><br><span class=\"line\">###   http-proxy-exceptions      List of sites that do not use proxy</span><br><span class=\"line\">###   http-timeout               Timeout for HTTP requests in seconds</span><br><span class=\"line\">###   http-compression           Whether to compress HTTP requests</span><br><span class=\"line\">###   http-max-connections       Maximum number of parallel server</span><br><span class=\"line\">###                              connections to use for any given</span><br><span class=\"line\">###                              HTTP operation.</span><br><span class=\"line\">###   http-chunked-requests      Whether to use chunked transfer</span><br><span class=\"line\">###                              encoding for HTTP requests body.</span><br><span class=\"line\">###   neon-debug-mask            Debug mask for Neon HTTP library</span><br><span class=\"line\">###   ssl-authority-files        List of files, each of a trusted CA</span><br><span class=\"line\">###   ssl-trust-default-ca       Trust the system &apos;default&apos; CAs</span><br><span class=\"line\">###   ssl-client-cert-file       PKCS#12 format client certificate file</span><br><span class=\"line\">###   ssl-client-cert-password   Client Key password, if needed.</span><br><span class=\"line\">###   ssl-pkcs11-provider        Name of PKCS#11 provider to use.</span><br><span class=\"line\">###   http-library               Which library to use for http/https</span><br><span class=\"line\">###                              connections.</span><br><span class=\"line\">###   http-bulk-updates          Whether to request bulk update</span><br><span class=\"line\">###                              responses or to fetch each file</span><br><span class=\"line\">###                              in an individual request.</span><br><span class=\"line\">###   store-passwords            Specifies whether passwords used</span><br><span class=\"line\">###                              to authenticate against a</span><br><span class=\"line\">###                              Subversion server may be cached</span><br><span class=\"line\">###                              to disk in any way.</span><br><span class=\"line\">###   store-plaintext-passwords  Specifies whether passwords may</span><br><span class=\"line\">###                              be cached on disk unencrypted.</span><br><span class=\"line\">###   store-ssl-client-cert-pp   Specifies whether passphrase used</span><br><span class=\"line\">###                              to authenticate against a client</span><br><span class=\"line\">###                              certificate may be cached to disk</span><br><span class=\"line\">###                              in any way</span><br><span class=\"line\">###   store-ssl-client-cert-pp-plaintext</span><br><span class=\"line\">###                              Specifies whether client cert</span><br><span class=\"line\">###                              passphrases may be cached on disk</span><br><span class=\"line\">###                              unencrypted (i.e., as plaintext).</span><br><span class=\"line\">###   store-auth-creds           Specifies whether any auth info</span><br><span class=\"line\">###                              (passwords, server certs, etc.)</span><br><span class=\"line\">###                              may be cached to disk.</span><br><span class=\"line\">###   username                   Specifies the default username.</span><br><span class=\"line\">###</span><br><span class=\"line\">### Set store-passwords to &apos;no&apos; to avoid storing passwords on disk</span><br><span class=\"line\">### in any way, including in password stores.  It defaults to</span><br><span class=\"line\">### &apos;yes&apos;, but Subversion will never save your password to disk in</span><br><span class=\"line\">### plaintext unless explicitly configured to do so.</span><br><span class=\"line\">### Note that this option only prevents saving of *new* passwords;</span><br><span class=\"line\">### it doesn&apos;t invalidate existing passwords.  (To do that, remove</span><br><span class=\"line\">### the cache files by hand as described in the Subversion book.)</span><br><span class=\"line\">###</span><br><span class=\"line\">### Set store-plaintext-passwords to &apos;no&apos; to avoid storing</span><br><span class=\"line\">### passwords in unencrypted form in the auth/ area of your config</span><br><span class=\"line\">### directory. Set it to &apos;yes&apos; to allow Subversion to store</span><br><span class=\"line\">### unencrypted passwords in the auth/ area.  The default is</span><br><span class=\"line\">### &apos;ask&apos;, which means that Subversion will ask you before</span><br><span class=\"line\">### saving a password to disk in unencrypted form.  Note that</span><br><span class=\"line\">### this option has no effect if either &apos;store-passwords&apos; or</span><br><span class=\"line\">### &apos;store-auth-creds&apos; is set to &apos;no&apos;.</span><br><span class=\"line\">###</span><br><span class=\"line\">### Set store-ssl-client-cert-pp to &apos;no&apos; to avoid storing ssl</span><br><span class=\"line\">### client certificate passphrases in the auth/ area of your</span><br><span class=\"line\">### config directory.  It defaults to &apos;yes&apos;, but Subversion will</span><br><span class=\"line\">### never save your passphrase to disk in plaintext unless</span><br><span class=\"line\">### explicitly configured to do so.</span><br><span class=\"line\">###</span><br><span class=\"line\">### Note store-ssl-client-cert-pp only prevents the saving of *new*</span><br><span class=\"line\">### passphrases; it doesn&apos;t invalidate existing passphrases.  To do</span><br><span class=\"line\">### that, remove the cache files by hand as described in the</span><br><span class=\"line\">### Subversion book at http://svnbook.red-bean.com/nightly/en/\\</span><br><span class=\"line\">###                    svn.serverconfig.netmodel.html\\</span><br><span class=\"line\">###                    #svn.serverconfig.netmodel.credcache</span><br><span class=\"line\">###</span><br><span class=\"line\">### Set store-ssl-client-cert-pp-plaintext to &apos;no&apos; to avoid storing</span><br><span class=\"line\">### passphrases in unencrypted form in the auth/ area of your</span><br><span class=\"line\">### config directory.  Set it to &apos;yes&apos; to allow Subversion to</span><br><span class=\"line\">### store unencrypted passphrases in the auth/ area.  The default</span><br><span class=\"line\">### is &apos;ask&apos;, which means that Subversion will prompt before</span><br><span class=\"line\">### saving a passphrase to disk in unencrypted form.  Note that</span><br><span class=\"line\">### this option has no effect if either &apos;store-auth-creds&apos; or</span><br><span class=\"line\">### &apos;store-ssl-client-cert-pp&apos; is set to &apos;no&apos;.</span><br><span class=\"line\">###</span><br><span class=\"line\">### Set store-auth-creds to &apos;no&apos; to avoid storing any Subversion</span><br><span class=\"line\">### credentials in the auth/ area of your config directory.</span><br><span class=\"line\">### Note that this includes SSL server certificates.</span><br><span class=\"line\">### It defaults to &apos;yes&apos;.  Note that this option only prevents</span><br><span class=\"line\">### saving of *new* credentials;  it doesn&apos;t invalidate existing</span><br><span class=\"line\">### caches.  (To do that, remove the cache files by hand.)</span><br><span class=\"line\">###</span><br><span class=\"line\">### HTTP timeouts, if given, are specified in seconds.  A timeout</span><br><span class=\"line\">### of 0, i.e. zero, causes a builtin default to be used.</span><br><span class=\"line\">###</span><br><span class=\"line\">### Most users will not need to explicitly set the http-library</span><br><span class=\"line\">### option, but valid values for the option include:</span><br><span class=\"line\">###    &apos;serf&apos;: Serf-based module (Subversion 1.5 - present)</span><br><span class=\"line\">###    &apos;neon&apos;: Neon-based module (Subversion 1.0 - 1.7)</span><br><span class=\"line\">### Availability of these modules may depend on your specific</span><br><span class=\"line\">### Subversion distribution.</span><br><span class=\"line\">###</span><br><span class=\"line\">### The commented-out examples below are intended only to</span><br><span class=\"line\">### demonstrate how to use this file; any resemblance to actual</span><br><span class=\"line\">### servers, living or dead, is entirely coincidental.</span><br><span class=\"line\"></span><br><span class=\"line\">### In the &apos;groups&apos; section, the URL of the repository you&apos;re</span><br><span class=\"line\">### trying to access is matched against the patterns on the right.</span><br><span class=\"line\">### If a match is found, the server options are taken from the</span><br><span class=\"line\">### section with the corresponding name on the left.</span><br><span class=\"line\"></span><br><span class=\"line\">[groups]</span><br><span class=\"line\"># group1 = *.collab.net</span><br><span class=\"line\"># othergroup = repository.blarggitywhoomph.com</span><br><span class=\"line\"># thirdgroup = *.example.com</span><br><span class=\"line\"></span><br><span class=\"line\">### Information for the first group:</span><br><span class=\"line\"># [group1]</span><br><span class=\"line\"># http-proxy-host = proxy1.some-domain-name.com</span><br><span class=\"line\"># http-proxy-port = 80</span><br><span class=\"line\"># http-proxy-username = blah</span><br><span class=\"line\"># http-proxy-password = doubleblah</span><br><span class=\"line\"># http-timeout = 60</span><br><span class=\"line\"># neon-debug-mask = 130</span><br><span class=\"line\"># store-plaintext-passwords = no</span><br><span class=\"line\"># username = harry</span><br><span class=\"line\"></span><br><span class=\"line\">### Information for the second group:</span><br><span class=\"line\"># [othergroup]</span><br><span class=\"line\"># http-proxy-host = proxy2.some-domain-name.com</span><br><span class=\"line\"># http-proxy-port = 9000</span><br><span class=\"line\"># No username and password for the proxy, so use the defaults below.</span><br><span class=\"line\"></span><br><span class=\"line\">### You can set default parameters in the &apos;global&apos; section.</span><br><span class=\"line\">### These parameters apply if no corresponding parameter is set in</span><br><span class=\"line\">### a specifically matched group as shown above.  Thus, if you go</span><br><span class=\"line\">### through the same proxy server to reach every site on the</span><br><span class=\"line\">### Internet, you probably just want to put that server&apos;s</span><br><span class=\"line\">### information in the &apos;global&apos; section and not bother with</span><br><span class=\"line\">### &apos;groups&apos; or any other sections.</span><br><span class=\"line\">###</span><br><span class=\"line\">### Most people might want to configure password caching</span><br><span class=\"line\">### parameters here, but you can also configure them per server</span><br><span class=\"line\">### group (per-group settings override global settings).</span><br><span class=\"line\">###</span><br><span class=\"line\">### If you go through a proxy for all but a few sites, you can</span><br><span class=\"line\">### list those exceptions under &apos;http-proxy-exceptions&apos;.  This only</span><br><span class=\"line\">### overrides defaults, not explicitly matched server names.</span><br><span class=\"line\">###</span><br><span class=\"line\">### &apos;ssl-authority-files&apos; is a semicolon-delimited list of files,</span><br><span class=\"line\">### each pointing to a PEM-encoded Certificate Authority (CA)</span><br><span class=\"line\">### SSL certificate.  See details above for overriding security</span><br><span class=\"line\">### due to SSL.</span><br><span class=\"line\">[global]</span><br><span class=\"line\"># http-proxy-exceptions = *.exception.com, www.internal-site.org</span><br><span class=\"line\"># http-proxy-host = defaultproxy.whatever.com</span><br><span class=\"line\"># http-proxy-port = 7000</span><br><span class=\"line\"># http-proxy-username = defaultusername</span><br><span class=\"line\"># http-proxy-password = defaultpassword</span><br><span class=\"line\"># http-compression = no</span><br><span class=\"line\"># No http-timeout, so just use the builtin default.</span><br><span class=\"line\"># No neon-debug-mask, so neon debugging is disabled.</span><br><span class=\"line\"># ssl-authority-files = /path/to/CAcert.pem;/path/to/CAcert2.pem</span><br><span class=\"line\">#</span><br><span class=\"line\"># Password / passphrase caching parameters:</span><br><span class=\"line\"># store-passwords = no</span><br><span class=\"line\"># store-ssl-client-cert-pp = no</span><br><span class=\"line\"># store-plaintext-passwords = no</span><br><span class=\"line\"># store-ssl-client-cert-pp-plaintext = no</span><br></pre></td></tr></table></figure>\n<p>找到：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># store-passwords = no</span><br><span class=\"line\"># store-plaintext-passwords = no</span><br></pre></td></tr></table></figure>\n<p>修改为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">store-passwords = yes</span><br><span class=\"line\">store-plaintext-passwords = yes</span><br></pre></td></tr></table></figure>\n<p>保存，下次操作的时候就不用输入SVN密码了。</p>\n","site":{"data":{"next":{"favicon":"/favicon.ico","keywords":"Hexo, NexT","rss":null,"since":2016,"authoricon":"heart","copyright":true,"canonical":true,"seo":true,"index_with_subtitle":false,"menu":{"home":"/","categories":"/categories/","archives":"/archives/","tags":"/tags/","about":"/about/"},"menu_icons":{"enable":true,"home":"home","about":"user","categories":"th","schedule":"calendar","tags":"tags","archives":"archive","sitemap":"sitemap","commonweal":"heartbeat"},"scheme":"Mist","social":{"Github":"https://github.com/ricosmall"},"social_icons":{"enable":true,"GitHub":"github","Twitter":"twitter","Weibo":"weibo"},"avatar":"/uploads/avatar.png","toc":{"enable":true,"number":true,"wrap":false},"sidebar":{"position":"left","display":"post","offset":12,"offset_float":0,"b2t":false,"scrollpercent":false,"onmobile":false},"scroll_to_more":true,"save_scroll":false,"excerpt_description":true,"auto_excerpt":{"enable":false,"length":150},"post_meta":{"item_text":true,"created_at":true,"updated_at":false,"categories":true},"post_wordcount":{"item_text":true,"wordcount":false,"min2read":false,"separated_meta":true},"post_copyright":{"enable":false,"license":"CC BY-NC-SA 3.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/3.0/"},"custom_logo":{"enabled":false,"image":null},"highlight_theme":"night bright","font":{"enable":true,"host":null,"global":{"external":true,"family":"Lato"},"headings":{"external":true,"family":null},"posts":{"external":true,"family":null},"logo":{"external":true,"family":null,"size":null},"codes":{"external":true,"family":"Menlo, Monospace","size":null}},"mathjax":{"enable":true,"per_page":false,"cdn":"//cdn.bootcss.com/mathjax/2.7.1/latest.js?config=TeX-AMS-MML_HTMLorMML"},"han":false,"disqus":{"enable":false,"shortname":"ricosmall","count":false},"changyan":{"enable":false,"appid":null,"appkey":null},"duoshuo_info":{"ua_enable":true,"admin_enable":false,"user_id":0},"facebook_sdk":{"enable":false,"app_id":null,"fb_admin":null,"like_button":null,"webmaster":null},"facebook_comments_plugin":{"enable":false,"num_of_posts":10,"width":"100%","scheme":"light"},"vkontakte_api":{"enable":false,"app_id":null,"like":true,"comments":true,"num_of_posts":10},"rating":{"enable":false,"id":null,"color":"fc6423"},"leancloud_visitors":{"enable":false,"app_id":null,"app_key":null},"busuanzi_count":{"enable":true,"site_uv":true,"site_uv_header":"<i class=\"fa fa-user\"></i>访问人数","site_uv_footer":null,"site_pv":true,"site_pv_header":"<i class=\"fa fa-eye\"></i>总访问量","site_pv_footer":"次","page_pv":true,"page_pv_header":"<i class=\"fa fa-file-o\"></i>浏览","page_pv_footer":"次"},"baidu_push":false,"calendar":{"enable":false,"calendar_id":"<required>","api_key":"<required>","orderBy":"startTime","offsetMax":24,"offsetMin":4,"timeZone":null,"showDeleted":false,"singleEvents":true,"maxResults":250},"algolia_search":{"enable":false,"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":true,"trigger":"auto","top_n_per_article":1},"exturl":false,"use_motion":true,"fancybox":true,"pace":false,"pace_theme":"pace-theme-minimal","canvas_nest":false,"three_waves":false,"canvas_lines":false,"canvas_sphere":false,"canvas_ribbon":false,"vendors":{"_internal":"lib","jquery":null,"fancybox":null,"fancybox_css":null,"fastclick":null,"lazyload":null,"velocity":null,"velocity_ui":null,"ua_parser":null,"fontawesome":null,"algolia_instant_js":null,"algolia_instant_css":null,"pace":null,"pace_css":null,"canvas_nest":null,"three":null,"three_waves":null,"canvas_lines":null,"canvas_sphere":null,"canvas_ribbon":null,"han":null},"css":"css","js":"js","images":"images","version":"5.1.1"}}},"excerpt":"<p>Linux下进行SVN操作的时候总是提示要输入密码，很不方便，尤其是集成到<code>npm scripts</code>上的时候，你不想明写密码，但是如果不写，每次都提示要输入密码，不同用户协作起来更加麻烦。</p>","more":"<h2 id=\"修改配置文件config\"><a href=\"#修改配置文件config\" class=\"headerlink\" title=\"修改配置文件config\"></a>修改配置文件<code>config</code></h2><p>文件位置<code>/home/[username]/.subversion/config</code></p>\n<p>用vim打开</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /home/[username]/.subversion/config</span><br></pre></td></tr></table></figure>\n<p>原配置文件：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">### This file configures various client-side behaviors.</span><br><span class=\"line\">###</span><br><span class=\"line\">### The commented-out examples below are intended to demonstrate</span><br><span class=\"line\">### how to use this file.</span><br><span class=\"line\"></span><br><span class=\"line\">### Section for authentication and authorization customizations.</span><br><span class=\"line\">[auth]</span><br><span class=\"line\">### Set password stores used by Subversion. They should be</span><br><span class=\"line\">### delimited by spaces or commas. The order of values determines</span><br><span class=\"line\">### the order in which password stores are used.</span><br><span class=\"line\">### Valid password stores:</span><br><span class=\"line\">###   gnome-keyring        (Unix-like systems)</span><br><span class=\"line\">###   kwallet              (Unix-like systems)</span><br><span class=\"line\">###   gpg-agent            (Unix-like systems)</span><br><span class=\"line\">###   keychain             (Mac OS X)</span><br><span class=\"line\">###   windows-cryptoapi    (Windows)</span><br><span class=\"line\"># password-stores = gpg-agent,gnome-keyring,kwallet</span><br><span class=\"line\">### To disable all password stores, use an empty list:</span><br><span class=\"line\"># password-stores =</span><br><span class=\"line\">###</span><br><span class=\"line\">### Set KWallet wallet used by Subversion. If empty or unset,</span><br><span class=\"line\">### then the default network wallet will be used.</span><br><span class=\"line\"># kwallet-wallet =</span><br><span class=\"line\">###</span><br><span class=\"line\">### Include PID (Process ID) in Subversion application name when</span><br><span class=\"line\">### using KWallet. It defaults to &apos;no&apos;.</span><br><span class=\"line\"># kwallet-svn-application-name-with-pid = yes</span><br><span class=\"line\">###</span><br><span class=\"line\">### Set ssl-client-cert-file-prompt to &apos;yes&apos; to cause the client</span><br><span class=\"line\">### to prompt for a path to a client cert file when the server</span><br><span class=\"line\">### requests a client cert but no client cert file is found in the</span><br><span class=\"line\">### expected place (see the &apos;ssl-client-cert-file&apos; option in the</span><br><span class=\"line\">### &apos;servers&apos; configuration file). Defaults to &apos;no&apos;.</span><br><span class=\"line\"># ssl-client-cert-file-prompt = no</span><br><span class=\"line\">###</span><br><span class=\"line\">### The rest of the [auth] section in this file has been deprecated.</span><br><span class=\"line\">### Both &apos;store-passwords&apos; and &apos;store-auth-creds&apos; can now be</span><br><span class=\"line\">### specified in the &apos;servers&apos; file in your config directory</span><br><span class=\"line\">### and are documented there. Anything specified in this section</span><br><span class=\"line\">### is overridden by settings specified in the &apos;servers&apos; file.</span><br><span class=\"line\"># store-passwords = no</span><br><span class=\"line\"># store-auth-creds = no</span><br><span class=\"line\"></span><br><span class=\"line\">### Section for configuring external helper applications.</span><br><span class=\"line\">[helpers]</span><br><span class=\"line\">### Set editor-cmd to the command used to invoke your text editor.</span><br><span class=\"line\">###   This will override the environment variables that Subversion</span><br><span class=\"line\">###   examines by default to find this information ($EDITOR,</span><br><span class=\"line\">###   et al).</span><br><span class=\"line\"># editor-cmd = editor (vi, emacs, notepad, etc.)</span><br><span class=\"line\">editor-cmd = vim</span><br><span class=\"line\">### Set diff-cmd to the absolute path of your &apos;diff&apos; program.</span><br><span class=\"line\">###   This will override the compile-time default, which is to use</span><br><span class=\"line\">###   Subversion&apos;s internal diff implementation.</span><br><span class=\"line\"># diff-cmd = diff_program (diff, gdiff, etc.)</span><br><span class=\"line\">diff-cmd = /usr/local/bin/svndiff.sh</span><br><span class=\"line\">### Diff-extensions are arguments passed to an external diff</span><br><span class=\"line\">### program or to Subversion&apos;s internal diff implementation.</span><br><span class=\"line\">### Set diff-extensions to override the default arguments (&apos;-u&apos;).</span><br><span class=\"line\"># diff-extensions = -u -p</span><br><span class=\"line\">### Set diff3-cmd to the absolute path of your &apos;diff3&apos; program.</span><br><span class=\"line\">###   This will override the compile-time default, which is to use</span><br><span class=\"line\">###   Subversion&apos;s internal diff3 implementation.</span><br><span class=\"line\"># diff3-cmd = diff3_program (diff3, gdiff3, etc.)</span><br><span class=\"line\">### Set diff3-has-program-arg to &apos;yes&apos; if your &apos;diff3&apos; program</span><br><span class=\"line\">###   accepts the &apos;--diff-program&apos; option.</span><br><span class=\"line\"># diff3-has-program-arg = [yes | no]</span><br><span class=\"line\">### Set merge-tool-cmd to the command used to invoke your external</span><br><span class=\"line\">### merging tool of choice. Subversion will pass 5 arguments to</span><br><span class=\"line\">### the specified command: base theirs mine merged wcfile</span><br><span class=\"line\"># merge-tool-cmd = merge_command</span><br><span class=\"line\"></span><br><span class=\"line\">### Section for configuring tunnel agents.</span><br><span class=\"line\">[tunnels]</span><br><span class=\"line\">### Configure svn protocol tunnel schemes here.  By default, only</span><br><span class=\"line\">### the &apos;ssh&apos; scheme is defined.  You can define other schemes to</span><br><span class=\"line\">### be used with &apos;svn+scheme://hostname/path&apos; URLs.  A scheme</span><br><span class=\"line\">### definition is simply a command, optionally prefixed by an</span><br><span class=\"line\">### environment variable name which can override the command if it</span><br><span class=\"line\">### is defined.  The command (or environment variable) may contain</span><br><span class=\"line\">### arguments, using standard shell quoting for arguments with</span><br><span class=\"line\">### spaces.  The command will be invoked as:</span><br><span class=\"line\">###   &lt;command&gt; &lt;hostname&gt; svnserve -t</span><br><span class=\"line\">### (If the URL includes a username, then the hostname will be</span><br><span class=\"line\">### passed to the tunnel agent as &lt;user&gt;@&lt;hostname&gt;.)  If the</span><br><span class=\"line\">### built-in ssh scheme were not predefined, it could be defined</span><br><span class=\"line\">### as:</span><br><span class=\"line\"># ssh = $SVN_SSH ssh -q -o ControlMaster=no</span><br><span class=\"line\">### If you wanted to define a new &apos;rsh&apos; scheme, to be used with</span><br><span class=\"line\">### &apos;svn+rsh:&apos; URLs, you could do so as follows:</span><br><span class=\"line\"># rsh = rsh</span><br><span class=\"line\">### Or, if you wanted to specify a full path and arguments:</span><br><span class=\"line\"># rsh = /path/to/rsh -l myusername</span><br><span class=\"line\">### On Windows, if you are specifying a full path to a command,</span><br><span class=\"line\">### use a forward slash (/) or a paired backslash (\\\\) as the</span><br><span class=\"line\">### path separator.  A single backslash will be treated as an</span><br><span class=\"line\">### escape for the following character.</span><br><span class=\"line\"></span><br><span class=\"line\">### Section for configuring miscellaneous Subversion options.</span><br><span class=\"line\">[miscellany]</span><br><span class=\"line\">### Set global-ignores to a set of whitespace-delimited globs</span><br><span class=\"line\">### which Subversion will ignore in its &apos;status&apos; output, and</span><br><span class=\"line\">### while importing or adding files and directories.</span><br><span class=\"line\">### &apos;*&apos; matches leading dots, e.g. &apos;*.rej&apos; matches &apos;.foo.rej&apos;.</span><br><span class=\"line\"># global-ignores = *.o *.lo *.la *.al .libs *.so *.so.[0-9]* *.a *.pyc *.pyo __pycache__</span><br><span class=\"line\">#   *.rej *~ #*# .#* .*.swp .DS_Store [Tt]humbs.db</span><br><span class=\"line\">### Set log-encoding to the default encoding for log messages</span><br><span class=\"line\"># log-encoding = latin1</span><br><span class=\"line\">### Set use-commit-times to make checkout/update/switch/revert</span><br><span class=\"line\">### put last-committed timestamps on every file touched.</span><br><span class=\"line\"># use-commit-times = yes</span><br><span class=\"line\">### Set no-unlock to prevent &apos;svn commit&apos; from automatically</span><br><span class=\"line\">### releasing locks on files.</span><br><span class=\"line\"># no-unlock = yes</span><br><span class=\"line\">### Set mime-types-file to a MIME type registry file, used to</span><br><span class=\"line\">### provide hints to Subversion&apos;s MIME type auto-detection</span><br><span class=\"line\">### algorithm.</span><br><span class=\"line\"># mime-types-file = /path/to/mime.types</span><br><span class=\"line\">### Set preserved-conflict-file-exts to a whitespace-delimited</span><br><span class=\"line\">### list of patterns matching file extensions which should be</span><br><span class=\"line\">### preserved in generated conflict file names.  By default,</span><br><span class=\"line\">### conflict files use custom extensions.</span><br><span class=\"line\"># preserved-conflict-file-exts = doc ppt xls od?</span><br><span class=\"line\">### Set enable-auto-props to &apos;yes&apos; to enable automatic properties</span><br><span class=\"line\">### for &apos;svn add&apos; and &apos;svn import&apos;, it defaults to &apos;no&apos;.</span><br><span class=\"line\">### Automatic properties are defined in the section &apos;auto-props&apos;.</span><br><span class=\"line\"># enable-auto-props = yes</span><br><span class=\"line\">### Set interactive-conflicts to &apos;no&apos; to disable interactive</span><br><span class=\"line\">### conflict resolution prompting.  It defaults to &apos;yes&apos;.</span><br><span class=\"line\"># interactive-conflicts = no</span><br><span class=\"line\">### Set memory-cache-size to define the size of the memory cache</span><br><span class=\"line\">### used by the client when accessing a FSFS repository via</span><br><span class=\"line\">### ra_local (the file:// scheme). The value represents the number</span><br><span class=\"line\">### of MB used by the cache.</span><br><span class=\"line\"># memory-cache-size = 16</span><br><span class=\"line\">### Set diff-ignore-content-type to &apos;yes&apos; to cause &apos;svn diff&apos; to</span><br><span class=\"line\">### attempt to show differences of all modified files regardless</span><br><span class=\"line\">### of their MIME content type.  By default, Subversion will only</span><br><span class=\"line\">### attempt to show differences for files believed to have human-</span><br><span class=\"line\">### readable (non-binary) content.  This option is especially</span><br><span class=\"line\">### useful when Subversion is configured (via the &apos;diff-cmd&apos;</span><br><span class=\"line\">### option) to employ an external differencing tool which is able</span><br><span class=\"line\">### to show meaningful differences for binary file formats.  [New</span><br><span class=\"line\">### in 1.9]</span><br><span class=\"line\"># diff-ignore-content-type = no</span><br><span class=\"line\"></span><br><span class=\"line\">### Section for configuring automatic properties.</span><br><span class=\"line\">[auto-props]</span><br><span class=\"line\">### The format of the entries is:</span><br><span class=\"line\">###   file-name-pattern = propname[=value][;propname[=value]...]</span><br><span class=\"line\">### The file-name-pattern can contain wildcards (such as &apos;*&apos; and</span><br><span class=\"line\">### &apos;?&apos;).  All entries which match (case-insensitively) will be</span><br><span class=\"line\">### applied to the file.  Note that auto-props functionality</span><br><span class=\"line\">### must be enabled, which is typically done by setting the</span><br><span class=\"line\">### &apos;enable-auto-props&apos; option.</span><br><span class=\"line\"># *.c = svn:eol-style=native</span><br><span class=\"line\"># *.cpp = svn:eol-style=native</span><br><span class=\"line\"># *.h = svn:keywords=Author Date Id Rev URL;svn:eol-style=native</span><br><span class=\"line\"># *.dsp = svn:eol-style=CRLF</span><br><span class=\"line\"># *.dsw = svn:eol-style=CRLF</span><br><span class=\"line\"># *.sh = svn:eol-style=native;svn:executable</span><br><span class=\"line\"># *.txt = svn:eol-style=native;svn:keywords=Author Date Id Rev URL;</span><br><span class=\"line\"># *.png = svn:mime-type=image/png</span><br><span class=\"line\"># *.jpg = svn:mime-type=image/jpeg</span><br><span class=\"line\"># Makefile = svn:eol-style=native</span><br><span class=\"line\"></span><br><span class=\"line\">### Section for configuring working copies.</span><br><span class=\"line\">[working-copy]</span><br><span class=\"line\">### Set to a list of the names of specific clients that should use</span><br><span class=\"line\">### exclusive SQLite locking of working copies.  This increases the</span><br><span class=\"line\">### performance of the client but prevents concurrent access by</span><br><span class=\"line\">### other clients.  Third-party clients may also support this</span><br><span class=\"line\">### option.</span><br><span class=\"line\">### Possible values:</span><br><span class=\"line\">###   svn                (the command line client)</span><br><span class=\"line\"># exclusive-locking-clients =</span><br><span class=\"line\">### Set to true to enable exclusive SQLite locking of working</span><br><span class=\"line\">### copies by all clients using the 1.8 APIs.  Enabling this may</span><br><span class=\"line\">### cause some clients to fail to work properly. This does not have</span><br><span class=\"line\">### to be set for exclusive-locking-clients to work.</span><br><span class=\"line\"># exclusive-locking = false</span><br><span class=\"line\">### Set the SQLite busy timeout in milliseconds: the maximum time</span><br><span class=\"line\">### the client waits to get access to the SQLite database before</span><br><span class=\"line\">### returning an error.  The default is 10000, i.e. 10 seconds.</span><br><span class=\"line\">### Longer values may be useful when exclusive locking is enabled.</span><br><span class=\"line\"># busy-timeout = 10000</span><br></pre></td></tr></table></figure>\n<p>找到：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># store-passwords = no</span><br></pre></td></tr></table></figure>\n<p>改为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">store-passwords = yes</span><br></pre></td></tr></table></figure>\n<p>保存，下次SVN操作的时候需要输入一次密码，之后就不用再输密码了。</p>\n<h3 id=\"切换SVN账号\"><a href=\"#切换SVN账号\" class=\"headerlink\" title=\"切换SVN账号\"></a>切换SVN账号</h3><p>有时候需要切换SVN账号进行相应的操作，但是默认提示的是上一次操作的账号。碰到这个问题，只要删除<code>/home/[username]/.subversion/auth</code>即可。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rm -rf /home/[username]/.subversion/auth</span><br></pre></td></tr></table></figure>\n<p>保存，下次SVN操作的时候就会提示输入用户名。</p>\n<h2 id=\"修改配置文件servers\"><a href=\"#修改配置文件servers\" class=\"headerlink\" title=\"修改配置文件servers\"></a>修改配置文件<code>servers</code></h2><p>如果上面的方法没有解决每次都要输入密码的问题，可以继续修改<code>servers</code>配置文件。</p>\n<p>用vim打开文件：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /home/[username]/.subversion/servers</span><br></pre></td></tr></table></figure>\n<p>原文件内容如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">### This file specifies server-specific parameters,</span><br><span class=\"line\">### including HTTP proxy information, HTTP timeout settings,</span><br><span class=\"line\">### and authentication settings.</span><br><span class=\"line\">###</span><br><span class=\"line\">### The currently defined server options are:</span><br><span class=\"line\">###   http-proxy-host            Proxy host for HTTP connection</span><br><span class=\"line\">###   http-proxy-port            Port number of proxy host service</span><br><span class=\"line\">###   http-proxy-username        Username for auth to proxy service</span><br><span class=\"line\">###   http-proxy-password        Password for auth to proxy service</span><br><span class=\"line\">###   http-proxy-exceptions      List of sites that do not use proxy</span><br><span class=\"line\">###   http-timeout               Timeout for HTTP requests in seconds</span><br><span class=\"line\">###   http-compression           Whether to compress HTTP requests</span><br><span class=\"line\">###   http-max-connections       Maximum number of parallel server</span><br><span class=\"line\">###                              connections to use for any given</span><br><span class=\"line\">###                              HTTP operation.</span><br><span class=\"line\">###   http-chunked-requests      Whether to use chunked transfer</span><br><span class=\"line\">###                              encoding for HTTP requests body.</span><br><span class=\"line\">###   neon-debug-mask            Debug mask for Neon HTTP library</span><br><span class=\"line\">###   ssl-authority-files        List of files, each of a trusted CA</span><br><span class=\"line\">###   ssl-trust-default-ca       Trust the system &apos;default&apos; CAs</span><br><span class=\"line\">###   ssl-client-cert-file       PKCS#12 format client certificate file</span><br><span class=\"line\">###   ssl-client-cert-password   Client Key password, if needed.</span><br><span class=\"line\">###   ssl-pkcs11-provider        Name of PKCS#11 provider to use.</span><br><span class=\"line\">###   http-library               Which library to use for http/https</span><br><span class=\"line\">###                              connections.</span><br><span class=\"line\">###   http-bulk-updates          Whether to request bulk update</span><br><span class=\"line\">###                              responses or to fetch each file</span><br><span class=\"line\">###                              in an individual request.</span><br><span class=\"line\">###   store-passwords            Specifies whether passwords used</span><br><span class=\"line\">###                              to authenticate against a</span><br><span class=\"line\">###                              Subversion server may be cached</span><br><span class=\"line\">###                              to disk in any way.</span><br><span class=\"line\">###   store-plaintext-passwords  Specifies whether passwords may</span><br><span class=\"line\">###                              be cached on disk unencrypted.</span><br><span class=\"line\">###   store-ssl-client-cert-pp   Specifies whether passphrase used</span><br><span class=\"line\">###                              to authenticate against a client</span><br><span class=\"line\">###                              certificate may be cached to disk</span><br><span class=\"line\">###                              in any way</span><br><span class=\"line\">###   store-ssl-client-cert-pp-plaintext</span><br><span class=\"line\">###                              Specifies whether client cert</span><br><span class=\"line\">###                              passphrases may be cached on disk</span><br><span class=\"line\">###                              unencrypted (i.e., as plaintext).</span><br><span class=\"line\">###   store-auth-creds           Specifies whether any auth info</span><br><span class=\"line\">###                              (passwords, server certs, etc.)</span><br><span class=\"line\">###                              may be cached to disk.</span><br><span class=\"line\">###   username                   Specifies the default username.</span><br><span class=\"line\">###</span><br><span class=\"line\">### Set store-passwords to &apos;no&apos; to avoid storing passwords on disk</span><br><span class=\"line\">### in any way, including in password stores.  It defaults to</span><br><span class=\"line\">### &apos;yes&apos;, but Subversion will never save your password to disk in</span><br><span class=\"line\">### plaintext unless explicitly configured to do so.</span><br><span class=\"line\">### Note that this option only prevents saving of *new* passwords;</span><br><span class=\"line\">### it doesn&apos;t invalidate existing passwords.  (To do that, remove</span><br><span class=\"line\">### the cache files by hand as described in the Subversion book.)</span><br><span class=\"line\">###</span><br><span class=\"line\">### Set store-plaintext-passwords to &apos;no&apos; to avoid storing</span><br><span class=\"line\">### passwords in unencrypted form in the auth/ area of your config</span><br><span class=\"line\">### directory. Set it to &apos;yes&apos; to allow Subversion to store</span><br><span class=\"line\">### unencrypted passwords in the auth/ area.  The default is</span><br><span class=\"line\">### &apos;ask&apos;, which means that Subversion will ask you before</span><br><span class=\"line\">### saving a password to disk in unencrypted form.  Note that</span><br><span class=\"line\">### this option has no effect if either &apos;store-passwords&apos; or</span><br><span class=\"line\">### &apos;store-auth-creds&apos; is set to &apos;no&apos;.</span><br><span class=\"line\">###</span><br><span class=\"line\">### Set store-ssl-client-cert-pp to &apos;no&apos; to avoid storing ssl</span><br><span class=\"line\">### client certificate passphrases in the auth/ area of your</span><br><span class=\"line\">### config directory.  It defaults to &apos;yes&apos;, but Subversion will</span><br><span class=\"line\">### never save your passphrase to disk in plaintext unless</span><br><span class=\"line\">### explicitly configured to do so.</span><br><span class=\"line\">###</span><br><span class=\"line\">### Note store-ssl-client-cert-pp only prevents the saving of *new*</span><br><span class=\"line\">### passphrases; it doesn&apos;t invalidate existing passphrases.  To do</span><br><span class=\"line\">### that, remove the cache files by hand as described in the</span><br><span class=\"line\">### Subversion book at http://svnbook.red-bean.com/nightly/en/\\</span><br><span class=\"line\">###                    svn.serverconfig.netmodel.html\\</span><br><span class=\"line\">###                    #svn.serverconfig.netmodel.credcache</span><br><span class=\"line\">###</span><br><span class=\"line\">### Set store-ssl-client-cert-pp-plaintext to &apos;no&apos; to avoid storing</span><br><span class=\"line\">### passphrases in unencrypted form in the auth/ area of your</span><br><span class=\"line\">### config directory.  Set it to &apos;yes&apos; to allow Subversion to</span><br><span class=\"line\">### store unencrypted passphrases in the auth/ area.  The default</span><br><span class=\"line\">### is &apos;ask&apos;, which means that Subversion will prompt before</span><br><span class=\"line\">### saving a passphrase to disk in unencrypted form.  Note that</span><br><span class=\"line\">### this option has no effect if either &apos;store-auth-creds&apos; or</span><br><span class=\"line\">### &apos;store-ssl-client-cert-pp&apos; is set to &apos;no&apos;.</span><br><span class=\"line\">###</span><br><span class=\"line\">### Set store-auth-creds to &apos;no&apos; to avoid storing any Subversion</span><br><span class=\"line\">### credentials in the auth/ area of your config directory.</span><br><span class=\"line\">### Note that this includes SSL server certificates.</span><br><span class=\"line\">### It defaults to &apos;yes&apos;.  Note that this option only prevents</span><br><span class=\"line\">### saving of *new* credentials;  it doesn&apos;t invalidate existing</span><br><span class=\"line\">### caches.  (To do that, remove the cache files by hand.)</span><br><span class=\"line\">###</span><br><span class=\"line\">### HTTP timeouts, if given, are specified in seconds.  A timeout</span><br><span class=\"line\">### of 0, i.e. zero, causes a builtin default to be used.</span><br><span class=\"line\">###</span><br><span class=\"line\">### Most users will not need to explicitly set the http-library</span><br><span class=\"line\">### option, but valid values for the option include:</span><br><span class=\"line\">###    &apos;serf&apos;: Serf-based module (Subversion 1.5 - present)</span><br><span class=\"line\">###    &apos;neon&apos;: Neon-based module (Subversion 1.0 - 1.7)</span><br><span class=\"line\">### Availability of these modules may depend on your specific</span><br><span class=\"line\">### Subversion distribution.</span><br><span class=\"line\">###</span><br><span class=\"line\">### The commented-out examples below are intended only to</span><br><span class=\"line\">### demonstrate how to use this file; any resemblance to actual</span><br><span class=\"line\">### servers, living or dead, is entirely coincidental.</span><br><span class=\"line\"></span><br><span class=\"line\">### In the &apos;groups&apos; section, the URL of the repository you&apos;re</span><br><span class=\"line\">### trying to access is matched against the patterns on the right.</span><br><span class=\"line\">### If a match is found, the server options are taken from the</span><br><span class=\"line\">### section with the corresponding name on the left.</span><br><span class=\"line\"></span><br><span class=\"line\">[groups]</span><br><span class=\"line\"># group1 = *.collab.net</span><br><span class=\"line\"># othergroup = repository.blarggitywhoomph.com</span><br><span class=\"line\"># thirdgroup = *.example.com</span><br><span class=\"line\"></span><br><span class=\"line\">### Information for the first group:</span><br><span class=\"line\"># [group1]</span><br><span class=\"line\"># http-proxy-host = proxy1.some-domain-name.com</span><br><span class=\"line\"># http-proxy-port = 80</span><br><span class=\"line\"># http-proxy-username = blah</span><br><span class=\"line\"># http-proxy-password = doubleblah</span><br><span class=\"line\"># http-timeout = 60</span><br><span class=\"line\"># neon-debug-mask = 130</span><br><span class=\"line\"># store-plaintext-passwords = no</span><br><span class=\"line\"># username = harry</span><br><span class=\"line\"></span><br><span class=\"line\">### Information for the second group:</span><br><span class=\"line\"># [othergroup]</span><br><span class=\"line\"># http-proxy-host = proxy2.some-domain-name.com</span><br><span class=\"line\"># http-proxy-port = 9000</span><br><span class=\"line\"># No username and password for the proxy, so use the defaults below.</span><br><span class=\"line\"></span><br><span class=\"line\">### You can set default parameters in the &apos;global&apos; section.</span><br><span class=\"line\">### These parameters apply if no corresponding parameter is set in</span><br><span class=\"line\">### a specifically matched group as shown above.  Thus, if you go</span><br><span class=\"line\">### through the same proxy server to reach every site on the</span><br><span class=\"line\">### Internet, you probably just want to put that server&apos;s</span><br><span class=\"line\">### information in the &apos;global&apos; section and not bother with</span><br><span class=\"line\">### &apos;groups&apos; or any other sections.</span><br><span class=\"line\">###</span><br><span class=\"line\">### Most people might want to configure password caching</span><br><span class=\"line\">### parameters here, but you can also configure them per server</span><br><span class=\"line\">### group (per-group settings override global settings).</span><br><span class=\"line\">###</span><br><span class=\"line\">### If you go through a proxy for all but a few sites, you can</span><br><span class=\"line\">### list those exceptions under &apos;http-proxy-exceptions&apos;.  This only</span><br><span class=\"line\">### overrides defaults, not explicitly matched server names.</span><br><span class=\"line\">###</span><br><span class=\"line\">### &apos;ssl-authority-files&apos; is a semicolon-delimited list of files,</span><br><span class=\"line\">### each pointing to a PEM-encoded Certificate Authority (CA)</span><br><span class=\"line\">### SSL certificate.  See details above for overriding security</span><br><span class=\"line\">### due to SSL.</span><br><span class=\"line\">[global]</span><br><span class=\"line\"># http-proxy-exceptions = *.exception.com, www.internal-site.org</span><br><span class=\"line\"># http-proxy-host = defaultproxy.whatever.com</span><br><span class=\"line\"># http-proxy-port = 7000</span><br><span class=\"line\"># http-proxy-username = defaultusername</span><br><span class=\"line\"># http-proxy-password = defaultpassword</span><br><span class=\"line\"># http-compression = no</span><br><span class=\"line\"># No http-timeout, so just use the builtin default.</span><br><span class=\"line\"># No neon-debug-mask, so neon debugging is disabled.</span><br><span class=\"line\"># ssl-authority-files = /path/to/CAcert.pem;/path/to/CAcert2.pem</span><br><span class=\"line\">#</span><br><span class=\"line\"># Password / passphrase caching parameters:</span><br><span class=\"line\"># store-passwords = no</span><br><span class=\"line\"># store-ssl-client-cert-pp = no</span><br><span class=\"line\"># store-plaintext-passwords = no</span><br><span class=\"line\"># store-ssl-client-cert-pp-plaintext = no</span><br></pre></td></tr></table></figure>\n<p>找到：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># store-passwords = no</span><br><span class=\"line\"># store-plaintext-passwords = no</span><br></pre></td></tr></table></figure>\n<p>修改为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">store-passwords = yes</span><br><span class=\"line\">store-plaintext-passwords = yes</span><br></pre></td></tr></table></figure>\n<p>保存，下次操作的时候就不用输入SVN密码了。</p>"}],"PostAsset":[],"PostCategory":[{"post_id":"cjskilak90007g9zbkx8l80cq","category_id":"cjskilak60004g9zb3xroaogr","_id":"cjskilakh000eg9zbc07fqsvq"},{"post_id":"cjskilajx0000g9zbyxzee9ev","category_id":"cjskilak60004g9zb3xroaogr","_id":"cjskilakj000ig9zbbik72jme"},{"post_id":"cjskilak30002g9zb7afma16h","category_id":"cjskilak60004g9zb3xroaogr","_id":"cjskilakl000kg9zby52zpwzf"},{"post_id":"cjskilak80006g9zbhh5ei4qu","category_id":"cjskilakh000fg9zbp847g8r9","_id":"cjskilako000rg9zber16jpgx"},{"post_id":"cjskilakj000jg9zbcz2i0vqs","category_id":"cjskilakh000fg9zbp847g8r9","_id":"cjskilakp000vg9zb5rv0wv2s"},{"post_id":"cjskilakm000ng9zb7j3lb1g3","category_id":"cjskilakl000lg9zbz9ny55o5","_id":"cjskilakq000yg9zbphh25vsh"},{"post_id":"cjskilaka0008g9zbct7v62v5","category_id":"cjskilakl000lg9zbz9ny55o5","_id":"cjskilaks0012g9zbd2uz66jm"},{"post_id":"cjskilako000ug9zbbqi6ghn0","category_id":"cjskilakl000lg9zbz9ny55o5","_id":"cjskilakt0015g9zb8odtx2ab"},{"post_id":"cjskilakd000cg9zbbwzwxgwf","category_id":"cjskilako000sg9zbok877a52","_id":"cjskilakv0019g9zbarvvlawv"},{"post_id":"cjskilakp000xg9zbm4g9j176","category_id":"cjskilakh000fg9zbp847g8r9","_id":"cjskilakw001bg9zb6kpqod5h"},{"post_id":"cjskilakr0011g9zbv7wlhtxw","category_id":"cjskilak60004g9zb3xroaogr","_id":"cjskilakx001fg9zbil8lkzqs"},{"post_id":"cjskilakt0014g9zb7u5hdwuc","category_id":"cjskilakh000fg9zbp847g8r9","_id":"cjskilaky001ig9zba1zt3js6"},{"post_id":"cjskilakf000dg9zbzorzcjes","category_id":"cjskilakq000zg9zbn0nq1qud","_id":"cjskilal0001mg9zble07hc12"},{"post_id":"cjskilaku0017g9zb53nhwcpb","category_id":"cjskilak60004g9zb3xroaogr","_id":"cjskilal1001pg9zbxi46ya7z"},{"post_id":"cjskilakv001ag9zb2fctgniw","category_id":"cjskilak60004g9zb3xroaogr","_id":"cjskilal2001rg9zbogln4pcp"},{"post_id":"cjskilaki000hg9zb048aend3","category_id":"cjskilakv0018g9zbylyygx01","_id":"cjskilal3001ug9zbs5nuyymm"},{"post_id":"cjskilaky001hg9zb4e40r791","category_id":"cjskilak60004g9zb3xroaogr","_id":"cjskilal4001wg9zbd75v7fzf"},{"post_id":"cjskilakn000pg9zbf3s869tx","category_id":"cjskilakx001eg9zbanaaz7aj","_id":"cjskilal5001zg9zbi63rogjl"},{"post_id":"cjskilakz001kg9zb9qseuqrk","category_id":"cjskilakh000fg9zbp847g8r9","_id":"cjskilal60021g9zbjfckga6b"},{"post_id":"cjskilal0001og9zbyn216rj9","category_id":"cjskilak60004g9zb3xroaogr","_id":"cjskilal70023g9zbljgfp7ah"},{"post_id":"cjskilakw001cg9zbymu8d4n7","category_id":"cjskilal0001ng9zblmkcuzss","_id":"cjskilal70025g9zbckw8hmrf"},{"post_id":"cjskilal1001qg9zbixlggwef","category_id":"cjskilakh000fg9zbp847g8r9","_id":"cjskilal70028g9zbo8h2u4s8"},{"post_id":"cjskilal3001tg9zbzqr47d92","category_id":"cjskilakh000fg9zbp847g8r9","_id":"cjskilal7002ag9zbwkyseh6t"},{"post_id":"cjskilal3001vg9zbp507g1a0","category_id":"cjskilakh000fg9zbp847g8r9","_id":"cjskilal7002cg9zbs6a29v21"},{"post_id":"cjskilal4001yg9zbljf1jthi","category_id":"cjskilakh000fg9zbp847g8r9","_id":"cjskilal8002fg9zb15fgbbae"},{"post_id":"cjskilal50020g9zby5ut5qbl","category_id":"cjskilakh000fg9zbp847g8r9","_id":"cjskilal8002hg9zbb35ds4y5"},{"post_id":"cjskilapm004zg9zbef2oez28","category_id":"cjskilako000sg9zbok877a52","_id":"cjskilapu0058g9zbmgo64u2e"},{"post_id":"cjskilapr0053g9zbzxovhnxy","category_id":"cjskilakx001eg9zbanaaz7aj","_id":"cjskilapv0059g9zb6drz0glm"},{"post_id":"cjskilapt0057g9zboqv43c9s","category_id":"cjskilakh000fg9zbp847g8r9","_id":"cjskilapv005bg9zb5wzejjcz"},{"post_id":"cjskilapo0051g9zb8frxcdf8","category_id":"cjskilapt0054g9zbhlep63py","_id":"cjskilapv005cg9zb5jcjhti5"},{"post_id":"cjskilar2005pg9zbee8ehfna","category_id":"cjskilak60004g9zb3xroaogr","_id":"cjskilar5005rg9zbxuc8es4n"}],"PostTag":[{"post_id":"cjskilajx0000g9zbyxzee9ev","tag_id":"cjskilak70005g9zbdbyxm3f1","_id":"cjskilakd000bg9zbhk2snffn"},{"post_id":"cjskilak30002g9zb7afma16h","tag_id":"cjskilak70005g9zbdbyxm3f1","_id":"cjskilakm000og9zbhqrrdy16"},{"post_id":"cjskilak30002g9zb7afma16h","tag_id":"cjskilakh000gg9zbf07k9agt","_id":"cjskilako000qg9zbzbx0t1wr"},{"post_id":"cjskilak80006g9zbhh5ei4qu","tag_id":"cjskilakl000mg9zbyjzr1hut","_id":"cjskilakp000wg9zbcgff4zer"},{"post_id":"cjskilak90007g9zbkx8l80cq","tag_id":"cjskilako000tg9zbb6qxtqz4","_id":"cjskilaks0013g9zbqoe7tqjo"},{"post_id":"cjskilaka0008g9zbct7v62v5","tag_id":"cjskilakl000mg9zbyjzr1hut","_id":"cjskilakx001gg9zbmeuz098f"},{"post_id":"cjskilaka0008g9zbct7v62v5","tag_id":"cjskilaku0016g9zbh94rit5j","_id":"cjskilakz001jg9zbhxqamd40"},{"post_id":"cjskilakd000cg9zbbwzwxgwf","tag_id":"cjskilakl000mg9zbyjzr1hut","_id":"cjskilal70024g9zbyfnp2c5i"},{"post_id":"cjskilakd000cg9zbbwzwxgwf","tag_id":"cjskilal0001lg9zbrvzvorqg","_id":"cjskilal70026g9zboddvh8m8"},{"post_id":"cjskilakd000cg9zbbwzwxgwf","tag_id":"cjskilal2001sg9zbo8w244vc","_id":"cjskilal70029g9zbtomdmyxr"},{"post_id":"cjskilakd000cg9zbbwzwxgwf","tag_id":"cjskilal4001xg9zb39d242sv","_id":"cjskilal7002bg9zb9zbveeoj"},{"post_id":"cjskilakf000dg9zbzorzcjes","tag_id":"cjskilal60022g9zb4wtxbeu1","_id":"cjskilal8002eg9zbipr4um6t"},{"post_id":"cjskilakf000dg9zbzorzcjes","tag_id":"cjskilal70027g9zbb4ksgpdm","_id":"cjskilal8002gg9zbkanhv1kw"},{"post_id":"cjskilaki000hg9zb048aend3","tag_id":"cjskilakl000mg9zbyjzr1hut","_id":"cjskilal9002mg9zbf11ups5s"},{"post_id":"cjskilaki000hg9zb048aend3","tag_id":"cjskilal8002ig9zb1k7cuf4a","_id":"cjskilal9002ng9zb1ibknpbw"},{"post_id":"cjskilaki000hg9zb048aend3","tag_id":"cjskilal8002jg9zbcuwxz6jw","_id":"cjskilala002pg9zbgaph6azb"},{"post_id":"cjskilaki000hg9zb048aend3","tag_id":"cjskilal9002kg9zbye9vo24h","_id":"cjskilala002qg9zbdjecjt1v"},{"post_id":"cjskilakj000jg9zbcz2i0vqs","tag_id":"cjskilakl000mg9zbyjzr1hut","_id":"cjskilalb002tg9zbtoy8apsh"},{"post_id":"cjskilakj000jg9zbcz2i0vqs","tag_id":"cjskilal9002og9zbkp7mtjp9","_id":"cjskilalb002ug9zbyuxgyzat"},{"post_id":"cjskilakj000jg9zbcz2i0vqs","tag_id":"cjskilala002rg9zb03kmvjmx","_id":"cjskilalb002wg9zb54ycimif"},{"post_id":"cjskilakm000ng9zb7j3lb1g3","tag_id":"cjskilal4001xg9zb39d242sv","_id":"cjskilalc002yg9zbeuxsttfw"},{"post_id":"cjskilakm000ng9zb7j3lb1g3","tag_id":"cjskilalb002vg9zbca61gzwr","_id":"cjskilalc002zg9zbw013b14y"},{"post_id":"cjskilakn000pg9zbf3s869tx","tag_id":"cjskilakl000mg9zbyjzr1hut","_id":"cjskilalc0031g9zblp6l2iff"},{"post_id":"cjskilakn000pg9zbf3s869tx","tag_id":"cjskilalc002xg9zb0try1kv7","_id":"cjskilalc0032g9zb5jaudfxf"},{"post_id":"cjskilako000ug9zbbqi6ghn0","tag_id":"cjskilakl000mg9zbyjzr1hut","_id":"cjskilald0034g9zb93akt6yc"},{"post_id":"cjskilako000ug9zbbqi6ghn0","tag_id":"cjskilalc0030g9zbbqxbkagd","_id":"cjskilald0035g9zb8zew7thb"},{"post_id":"cjskilakp000xg9zbm4g9j176","tag_id":"cjskilalc0033g9zbqti4md77","_id":"cjskilald0038g9zb8yl1pqpj"},{"post_id":"cjskilakp000xg9zbm4g9j176","tag_id":"cjskilald0036g9zblcg4a9b8","_id":"cjskilale0039g9zbinzapkn2"},{"post_id":"cjskilakr0011g9zbv7wlhtxw","tag_id":"cjskilak70005g9zbdbyxm3f1","_id":"cjskilale003bg9zbpksbh1ec"},{"post_id":"cjskilakr0011g9zbv7wlhtxw","tag_id":"cjskilald0037g9zbat9yh43h","_id":"cjskilale003cg9zbcl8zdl71"},{"post_id":"cjskilakt0014g9zb7u5hdwuc","tag_id":"cjskilakl000mg9zbyjzr1hut","_id":"cjskilalf003gg9zb76go3xzs"},{"post_id":"cjskilakt0014g9zb7u5hdwuc","tag_id":"cjskilale003ag9zb17qee08v","_id":"cjskilalf003hg9zbla3frlrr"},{"post_id":"cjskilakt0014g9zb7u5hdwuc","tag_id":"cjskilale003dg9zblldt8oma","_id":"cjskilalf003jg9zbdu3izr1e"},{"post_id":"cjskilakt0014g9zb7u5hdwuc","tag_id":"cjskilale003eg9zbo2jf52zp","_id":"cjskilalf003kg9zbcn8nm60w"},{"post_id":"cjskilaku0017g9zb53nhwcpb","tag_id":"cjskilalf003fg9zbj3kig6f0","_id":"cjskilalg003ng9zbfuuoxlx4"},{"post_id":"cjskilaku0017g9zb53nhwcpb","tag_id":"cjskilalf003ig9zbu1cm0kca","_id":"cjskilalg003og9zbypu7xull"},{"post_id":"cjskilaku0017g9zb53nhwcpb","tag_id":"cjskilalf003lg9zbajvgjaa1","_id":"cjskilalg003qg9zbeva4o7zo"},{"post_id":"cjskilakv001ag9zb2fctgniw","tag_id":"cjskilalg003mg9zbpu0ege42","_id":"cjskilalh003tg9zbz0wc2wna"},{"post_id":"cjskilakv001ag9zb2fctgniw","tag_id":"cjskilalg003pg9zb4ypxzkhv","_id":"cjskilalh003ug9zbmx3bz5s5"},{"post_id":"cjskilakv001ag9zb2fctgniw","tag_id":"cjskilalf003fg9zbj3kig6f0","_id":"cjskilali003wg9zbsboxwly1"},{"post_id":"cjskilakw001cg9zbymu8d4n7","tag_id":"cjskilalh003sg9zbrwtmcy5w","_id":"cjskilali003yg9zb8mtov823"},{"post_id":"cjskilakw001cg9zbymu8d4n7","tag_id":"cjskilalh003vg9zb7dtn156s","_id":"cjskilali003zg9zb29wiu53k"},{"post_id":"cjskilaky001hg9zb4e40r791","tag_id":"cjskilali003xg9zbneuuq9kd","_id":"cjskilalj0042g9zbm8ffb874"},{"post_id":"cjskilaky001hg9zb4e40r791","tag_id":"cjskilali0040g9zbntl9d83m","_id":"cjskilalj0043g9zbi475io5b"},{"post_id":"cjskilakz001kg9zb9qseuqrk","tag_id":"cjskilali0041g9zbrpv4c5q2","_id":"cjskilalk0046g9zblxhqf7fv"},{"post_id":"cjskilakz001kg9zb9qseuqrk","tag_id":"cjskilalj0044g9zb7bpqmhux","_id":"cjskilalk0047g9zbb7p8gw5i"},{"post_id":"cjskilal0001og9zbyn216rj9","tag_id":"cjskilalf003fg9zbj3kig6f0","_id":"cjskilall004bg9zbupddzeym"},{"post_id":"cjskilal0001og9zbyn216rj9","tag_id":"cjskilalk0048g9zboabvq21p","_id":"cjskilall004cg9zbxgtc4r7m"},{"post_id":"cjskilal0001og9zbyn216rj9","tag_id":"cjskilalk0049g9zb5icmp4d1","_id":"cjskilalm004eg9zbcnecnbt2"},{"post_id":"cjskilal1001qg9zbixlggwef","tag_id":"cjskilall004ag9zb86dr1f9q","_id":"cjskilaln004ig9zbwmdv39mx"},{"post_id":"cjskilal1001qg9zbixlggwef","tag_id":"cjskilal8002ig9zb1k7cuf4a","_id":"cjskilaln004jg9zbphbi9r3l"},{"post_id":"cjskilal1001qg9zbixlggwef","tag_id":"cjskilalm004fg9zbdrsslctb","_id":"cjskilaln004lg9zbg4810yuu"},{"post_id":"cjskilal1001qg9zbixlggwef","tag_id":"cjskilalm004gg9zbv4tprm0p","_id":"cjskilaln004mg9zb6o5zoqcd"},{"post_id":"cjskilal3001tg9zbzqr47d92","tag_id":"cjskilalm004hg9zbg2tybb91","_id":"cjskilalo004og9zbvodvkqa1"},{"post_id":"cjskilal3001vg9zbp507g1a0","tag_id":"cjskilaln004kg9zbvjwm6hor","_id":"cjskilalo004pg9zb67iy3ng3"},{"post_id":"cjskilal4001yg9zbljf1jthi","tag_id":"cjskilalm004hg9zbg2tybb91","_id":"cjskilalp004rg9zbm64bh8fv"},{"post_id":"cjskilal50020g9zby5ut5qbl","tag_id":"cjskilalh003sg9zbrwtmcy5w","_id":"cjskilalp004vg9zb5n4e9bh6"},{"post_id":"cjskilal50020g9zby5ut5qbl","tag_id":"cjskilalp004sg9zb8bbgjluv","_id":"cjskilalp004wg9zb85srumov"},{"post_id":"cjskilal50020g9zby5ut5qbl","tag_id":"cjskilalp004tg9zbqw3te4wv","_id":"cjskilalq004xg9zbb1po93qx"},{"post_id":"cjskilal50020g9zby5ut5qbl","tag_id":"cjskilalp004ug9zbzdnr57uc","_id":"cjskilalq004yg9zbwdzdbl66"},{"post_id":"cjskilapm004zg9zbef2oez28","tag_id":"cjskilakl000mg9zbyjzr1hut","_id":"cjskilapr0052g9zbotrdfdp7"},{"post_id":"cjskilapm004zg9zbef2oez28","tag_id":"cjskilalc0033g9zbqti4md77","_id":"cjskilapt0056g9zbh5840ajq"},{"post_id":"cjskilapo0051g9zb8frxcdf8","tag_id":"cjskilapt0055g9zbn7kpstxf","_id":"cjskilapw005gg9zbdwaogm7j"},{"post_id":"cjskilapo0051g9zb8frxcdf8","tag_id":"cjskilapv005ag9zbc9cqrg5x","_id":"cjskilapx005hg9zbuhbjg6kk"},{"post_id":"cjskilapo0051g9zb8frxcdf8","tag_id":"cjskilapv005dg9zbr8p4xgb9","_id":"cjskilapx005jg9zb1a6oii91"},{"post_id":"cjskilapo0051g9zb8frxcdf8","tag_id":"cjskilapw005eg9zb7xav0yxm","_id":"cjskilapx005kg9zb9tn1fhru"},{"post_id":"cjskilapr0053g9zbzxovhnxy","tag_id":"cjskilakl000mg9zbyjzr1hut","_id":"cjskilapy005lg9zbl9yiyrut"},{"post_id":"cjskilapr0053g9zbzxovhnxy","tag_id":"cjskilapw005fg9zbtdll74h9","_id":"cjskilapy005mg9zbpnrpq26q"},{"post_id":"cjskilapt0057g9zboqv43c9s","tag_id":"cjskilakl000mg9zbyjzr1hut","_id":"cjskilapy005ng9zb5me5d5qg"},{"post_id":"cjskilapt0057g9zboqv43c9s","tag_id":"cjskilapx005ig9zbrzbqqsy5","_id":"cjskilapy005og9zb66skp8e7"},{"post_id":"cjskilar2005pg9zbee8ehfna","tag_id":"cjskilar4005qg9zbqzz4d9l0","_id":"cjskilar5005tg9zbv4k7j08d"},{"post_id":"cjskilar2005pg9zbee8ehfna","tag_id":"cjskilar5005sg9zb8p4i53un","_id":"cjskilar5005ug9zb25wm0xt6"}],"Tag":[{"name":"hexo","_id":"cjskilak70005g9zbdbyxm3f1"},{"name":"github-pages","_id":"cjskilakh000gg9zbf07k9agt"},{"name":"JavaScript","_id":"cjskilakl000mg9zbyjzr1hut"},{"name":"git","_id":"cjskilako000tg9zbb6qxtqz4"},{"name":"前端开发","_id":"cjskilaku0016g9zbh94rit5j"},{"name":"jQuery","_id":"cjskilal0001lg9zbrvzvorqg"},{"name":"Promise","_id":"cjskilal2001sg9zbo8w244vc"},{"name":"Algorithm","_id":"cjskilal4001xg9zb39d242sv"},{"name":"macOS","_id":"cjskilal60022g9zb4wtxbeu1"},{"name":"software","_id":"cjskilal70027g9zbb4ksgpdm"},{"name":"algorithm","_id":"cjskilal8002ig9zb1k7cuf4a"},{"name":"大整数加法","_id":"cjskilal8002jg9zbcuwxz6jw"},{"name":"大整数乘法","_id":"cjskilal9002kg9zbye9vo24h"},{"name":"构造函数","_id":"cjskilal9002og9zbkp7mtjp9"},{"name":"JavaScript对象","_id":"cjskilala002rg9zb03kmvjmx"},{"name":"可视化算法","_id":"cjskilalb002vg9zbca61gzwr"},{"name":"编码风格","_id":"cjskilalc002xg9zb0try1kv7"},{"name":"模块化","_id":"cjskilalc0030g9zbbqxbkagd"},{"name":"CSS","_id":"cjskilalc0033g9zbqti4md77"},{"name":"text-overflow","_id":"cjskilald0036g9zblcg4a9b8"},{"name":"Travis-CI","_id":"cjskilald0037g9zbat9yh43h"},{"name":"跨域","_id":"cjskilale003ag9zb17qee08v"},{"name":"jsonp","_id":"cjskilale003dg9zblldt8oma"},{"name":"CORS","_id":"cjskilale003eg9zbo2jf52zp"},{"name":"nginx","_id":"cjskilalf003fg9zbj3kig6f0"},{"name":"阿里云","_id":"cjskilalf003ig9zbu1cm0kca"},{"name":"ECS","_id":"cjskilalf003lg9zbajvgjaa1"},{"name":"HTTPS","_id":"cjskilalg003mg9zbpu0ege42"},{"name":"HTTP","_id":"cjskilalg003pg9zb4ypxzkhv"},{"name":"Vue","_id":"cjskilalh003sg9zbrwtmcy5w"},{"name":"框架","_id":"cjskilalh003vg9zb7dtn156s"},{"name":"Java","_id":"cjskilali003xg9zbneuuq9kd"},{"name":"FreeMarker","_id":"cjskilali0040g9zbntl9d83m"},{"name":"XSS","_id":"cjskilali0041g9zbrpv4c5q2"},{"name":"Web安全","_id":"cjskilalj0044g9zb7bpqmhux"},{"name":"Express","_id":"cjskilalk0048g9zboabvq21p"},{"name":"IP","_id":"cjskilalk0049g9zb5icmp4d1"},{"name":"python","_id":"cjskilall004ag9zb86dr1f9q"},{"name":"binary_search","_id":"cjskilalm004fg9zbdrsslctb"},{"name":"二分查找","_id":"cjskilalm004gg9zbv4tprm0p"},{"name":"React","_id":"cjskilalm004hg9zbg2tybb91"},{"name":"SecureCRT","_id":"cjskilaln004kg9zbvjwm6hor"},{"name":"audio","_id":"cjskilalp004sg9zb8bbgjluv"},{"name":"HTML5","_id":"cjskilalp004tg9zbqw3te4wv"},{"name":"mobile","_id":"cjskilalp004ug9zbzdnr57uc"},{"name":"浏览器","_id":"cjskilapt0055g9zbn7kpstxf"},{"name":"渲染引擎原理","_id":"cjskilapv005ag9zbc9cqrg5x"},{"name":"Gecko","_id":"cjskilapv005dg9zbr8p4xgb9"},{"name":"Firefox","_id":"cjskilapw005eg9zb7xav0yxm"},{"name":"开发规范","_id":"cjskilapw005fg9zbtdll74h9"},{"name":"设计模式","_id":"cjskilapx005ig9zbrzbqqsy5"},{"name":"Linux","_id":"cjskilar4005qg9zbqzz4d9l0"},{"name":"SVN","_id":"cjskilar5005sg9zb8p4i53un"}]}}